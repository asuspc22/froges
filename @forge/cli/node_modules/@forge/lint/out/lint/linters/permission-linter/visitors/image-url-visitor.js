"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ImageUrlVisitor = void 0;
const typescript_estree_1 = require("@typescript-eslint/typescript-estree");
const api_call_interface_1 = require("../api-call-interface");
class ImageUrlVisitor {
    visit(node, _parent, callback) {
        const imageUrlNode = this.getImageUrlNode(node);
        if (!imageUrlNode) {
            return undefined;
        }
        if ((imageUrlNode === null || imageUrlNode === void 0 ? void 0 : imageUrlNode.type) === typescript_estree_1.AST_NODE_TYPES.JSXAttribute) {
            const imageUrlAttribute = imageUrlNode.value;
            if (imageUrlAttribute &&
                imageUrlAttribute.type === typescript_estree_1.AST_NODE_TYPES.Literal &&
                typeof imageUrlAttribute.value === 'string') {
                if (imageUrlAttribute.value.trim() !== '' &&
                    !this.isBundledUri(imageUrlAttribute.value) &&
                    this.isAbsoluteUrl(imageUrlAttribute.value)) {
                    const imageUrl = {
                        type: api_call_interface_1.ApiCallTypes.IMAGE,
                        url: imageUrlAttribute.value,
                        line: imageUrlAttribute.loc.start.line,
                        column: imageUrlAttribute.loc.start.column
                    };
                    callback(imageUrl);
                }
            }
        }
    }
    getImageUrlNode(node) {
        if (node.type !== typescript_estree_1.AST_NODE_TYPES.JSXOpeningElement) {
            return undefined;
        }
        const { name, attributes } = node;
        if (name.type === typescript_estree_1.AST_NODE_TYPES.JSXIdentifier && name.name === 'Image') {
            return attributes.find((attribute) => {
                if (attribute.type !== typescript_estree_1.AST_NODE_TYPES.JSXAttribute) {
                    return false;
                }
                if (attribute.name.type === typescript_estree_1.AST_NODE_TYPES.JSXIdentifier && attribute.name.name === 'src') {
                    return true;
                }
                return false;
            });
        }
        return undefined;
    }
    isBundledUri(imageUri) {
        return imageUri.startsWith('resource:') || imageUri.startsWith('data:image');
    }
    isAbsoluteUrl(url) {
        return ImageUrlVisitor.ABSOLUTE_URL_REGEX.test(url);
    }
}
exports.ImageUrlVisitor = ImageUrlVisitor;
ImageUrlVisitor.ABSOLUTE_URL_REGEX = /^(?:[a-z+]+:)?\/\//i;
