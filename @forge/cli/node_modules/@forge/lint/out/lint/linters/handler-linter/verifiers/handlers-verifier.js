"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.HandlersVerifier = void 0;
const linter_interface_1 = require("../../../linter-interface");
const verifier_interface_1 = require("../../verifier-interface");
const text_1 = require("../../../text");
class HandlersVerifier extends verifier_interface_1.BaseLintIssueVerifier {
    getLintClass() {
        return linter_interface_1.LintClass.Warning;
    }
    async process(input) {
        var _a, _b;
        if (!((_b = (_a = this.manifest) === null || _a === void 0 ? void 0 : _a.modules) === null || _b === void 0 ? void 0 : _b.function)) {
            return [];
        }
        const missingMethods = input.expectedMethods.filter((func) => !input.exportedMethods.find((exportedMethod) => exportedMethod.method === func.method));
        return missingMethods.map((func) => ({
            class: this.getLintClass(),
            message: text_1.messages.verifiers.handler.message(func.method, func.key),
            reference: text_1.messages.verifiers.handler.reference,
            column: 0,
            line: 0
        }));
    }
}
exports.HandlersVerifier = HandlersVerifier;
