"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.JiraIconVisitor = void 0;
const typescript_estree_1 = require("@typescript-eslint/typescript-estree");
const abstract_icon_visitor_1 = require("./abstract-icon-visitor");
class JiraIconVisitor extends abstract_icon_visitor_1.AbstractIconVisitor {
    constructor() {
        super(...arguments);
        this.isStatusPropertyDefinition = (node) => {
            return (node.type === typescript_estree_1.AST_NODE_TYPES.Property &&
                ((node.key.type === typescript_estree_1.AST_NODE_TYPES.Literal && node.key.value === 'status') ||
                    (node.key.type === typescript_estree_1.AST_NODE_TYPES.Identifier && node.key.name === 'status')) &&
                node.value.type === typescript_estree_1.AST_NODE_TYPES.ObjectExpression &&
                node.value.properties.find((prop) => {
                    return (prop.type === typescript_estree_1.AST_NODE_TYPES.Property &&
                        ((prop.key.type === typescript_estree_1.AST_NODE_TYPES.Literal && prop.key.value === 'type') ||
                            (prop.key.type === typescript_estree_1.AST_NODE_TYPES.Identifier && prop.key.name === 'type')) &&
                        ((prop.value.type === typescript_estree_1.AST_NODE_TYPES.Literal && prop.value.value === 'icon') ||
                            (prop.value.type === typescript_estree_1.AST_NODE_TYPES.Identifier && prop.value.name === 'icon')));
                }) !== undefined);
        };
        this.extractIconDefinition = (node) => {
            if (!node) {
                return undefined;
            }
            const valueDefinitionNode = node === null || node === void 0 ? void 0 : node.value.properties.find((prop) => {
                return (prop.type === typescript_estree_1.AST_NODE_TYPES.Property &&
                    ((prop.key.type === typescript_estree_1.AST_NODE_TYPES.Literal && prop.key.value === 'value') ||
                        (prop.key.type === typescript_estree_1.AST_NODE_TYPES.Identifier && prop.key.name === 'value')));
            });
            return valueDefinitionNode.value.properties.find((prop) => {
                return (prop.type === typescript_estree_1.AST_NODE_TYPES.Property &&
                    ((prop.key.type === typescript_estree_1.AST_NODE_TYPES.Literal && prop.key.value === 'url') ||
                        (prop.key.type === typescript_estree_1.AST_NODE_TYPES.Identifier && prop.key.name === 'url')));
            });
        };
    }
    getIconDefinitionNode(node) {
        const statusPropertyNode = node.properties.find(this.isStatusPropertyDefinition);
        return this.extractIconDefinition(statusPropertyNode);
    }
}
exports.JiraIconVisitor = JiraIconVisitor;
