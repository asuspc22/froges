import { ManifestSchema as Manifest } from '@forge/manifest';
import BaseLinter from '../../base-linter';
import { DynamicPropertiesIconUrl } from './dynamic-properties-interface';
import { LintFixState, LintLogger, LintResultRule } from '../../linter-interface';
interface DynamicPropertiesLintCriteriaMatches {
    [key: string]: DynamicPropertiesIconUrl[];
    dynamicPropertiesIcon: DynamicPropertiesIconUrl[];
}
export declare class DynamicPropertiesPermissionsLinter extends BaseLinter<DynamicPropertiesIconUrl, DynamicPropertiesLintCriteriaMatches, DynamicPropertiesIconUrl[]> {
    private manifest;
    constructor(environment: string, manifest: Manifest, logger: LintLogger);
    bootstrap(): Promise<void>;
    protected getFixer(): ((errors: LintResultRule[], warnings: LintResultRule[], state: LintFixState) => Promise<LintFixState>) | undefined;
    protected setupMatchesMap(filepath: string): void;
    protected addLintCriteriaMatch(dynamicPropertiesIconUrl: DynamicPropertiesIconUrl, filepath: string): void;
}
export {};
//# sourceMappingURL=dynamic-properties-permissions-linter.d.ts.map