import { ManifestSchema as Manifest } from '@forge/manifest';
import BaseLinter from '../../base-linter';
import { ExportedMethod, VerifierInput } from './exported-method-interface';
import { LintInput, LintLogger } from '../../linter-interface';
interface HandlerLintCriteriaMatches {
    [key: string]: VerifierInput;
    functionHandlers: VerifierInput;
}
export declare class HandlerLinter extends BaseLinter<ExportedMethod, HandlerLintCriteriaMatches, VerifierInput> {
    private manifest;
    constructor(environment: string, manifest: Manifest, logger: LintLogger);
    bootstrap(): Promise<void>;
    private getHandlerFileRegex;
    private getFunctionHandlers;
    protected setupMatchesMap(filepath: string): void;
    protected filterLintInput(inputs: LintInput[]): LintInput[];
    protected addLintCriteriaMatch(exportedMethod: ExportedMethod, filepath: string): void;
}
export {};
//# sourceMappingURL=handler-linter.d.ts.map