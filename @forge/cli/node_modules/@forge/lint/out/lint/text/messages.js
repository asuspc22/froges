"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.messages = void 0;
exports.messages = {
    verifiers: {
        contentProperty: {
            message: (context, method, scope) => `Using properties.${context}().${method}() requires the "${scope}" scope`,
            reference: 'permission-scope-required'
        },
        externalFetch: {
            message: (url) => `The domain ${url} is not included in the external permissions of your app manifest`,
            reference: 'egress-permission-required'
        },
        dynamicPropertiesIcon: {
            message: (url) => `The domain ${url} is not included in the external images permissions of your app manifest`,
            warning: () => `When using dynamic content properties along with icons, make sure to add the icon URL into the external images permissions of your app manifest. Otherwise, the icon will not be rendered.`,
            reference: 'egress-permission-required'
        },
        imageUrl: {
            message: (url) => `The domain ${url} is not included in the external images permissions of your app manifest`,
            reference: 'egress-permission-required'
        },
        handler: {
            message: (method, key) => `Cannot find exported function '${method}', which is required by module '${key}' handler defined in the manifest`,
            reference: 'valid-module-required'
        },
        product: {
            message: (product, method, path, scope) => `${product} endpoint: ${method} ${path} requires "${scope}" scope`,
            reference: 'permission-scope-required'
        },
        storage: {
            message: (scope) => `Using the Forge Storage API requires the "${scope}" scope`,
            reference: 'permission-scope-required'
        },
        uiHook: {
            message: (product, hook, scope) => `${product} UI hook: "${hook}" requires the "${scope}" scope`,
            reference: 'permission-scope-required'
        }
    }
};
