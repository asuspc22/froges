"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.tsParser = exports.createParseOptions = void 0;
const tslib_1 = require("tslib");
const cli_shared_1 = require("@forge/cli-shared");
const typescript_estree_1 = require("@typescript-eslint/typescript-estree");
const path_1 = tslib_1.__importDefault(require("path"));
const TSCONFIG_PATH = './tsconfig.json';
const createParseOptions = (absoluteFilePath, fileSystemReader) => {
    const tsconfigOptions = fileSystemReader.fileExists(TSCONFIG_PATH)
        ? { tsconfigRootDir: process.cwd(), project: TSCONFIG_PATH }
        : {};
    return Object.assign({ errorOnTypeScriptSyntacticAndSemanticIssues: true, loc: true, filePath: absoluteFilePath }, tsconfigOptions);
};
exports.createParseOptions = createParseOptions;
const tsParser = async (code, filepath, parseOptions) => {
    const absoluteFilePath = path_1.default.resolve(process.cwd(), filepath);
    const parseResult = (0, typescript_estree_1.parseAndGenerateServices)(code, Object.assign(Object.assign({}, (0, exports.createParseOptions)(absoluteFilePath, new cli_shared_1.FileSystemReader())), parseOptions));
    return {
        parsed: parseResult.ast,
        traverse: (options) => {
            (0, typescript_estree_1.simpleTraverse)(parseResult.ast, options);
        }
    };
};
exports.tsParser = tsParser;
