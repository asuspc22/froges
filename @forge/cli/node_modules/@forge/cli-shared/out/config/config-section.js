"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.assertive = exports.AssertiveConfigSectionReader = exports.ConfigSectionNotFoundError = exports.InvalidConfigSectionError = void 0;
class InvalidConfigSectionError extends Error {
}
exports.InvalidConfigSectionError = InvalidConfigSectionError;
class ConfigSectionNotFoundError extends Error {
}
exports.ConfigSectionNotFoundError = ConfigSectionNotFoundError;
class AssertiveConfigSectionReader {
    constructor(configSectionReader) {
        this.configSectionReader = configSectionReader;
    }
    async readConfigSectionOrThrow(missingMessage, invalidMessage) {
        const configValue = await this.configSectionReader.readConfigSection();
        if (configValue === 'invalid') {
            throw new InvalidConfigSectionError(invalidMessage);
        }
        else if (configValue === 'missing') {
            throw new ConfigSectionNotFoundError(missingMessage);
        }
        else {
            return configValue;
        }
    }
}
exports.AssertiveConfigSectionReader = AssertiveConfigSectionReader;
const assertive = (configSectionReader) => new AssertiveConfigSectionReader(configSectionReader);
exports.assertive = assertive;
