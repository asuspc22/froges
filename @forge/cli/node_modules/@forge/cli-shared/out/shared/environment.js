"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.guessEnvironmentType = exports.environmentToOption = exports.optionToEnvironment = exports.PRODUCTION_ENVIRONMENT_KEY = exports.STAGING_ENVIRONMENT_KEY = exports.DEFAULT_ENVIRONMENT_KEY = exports.XLS_ENVIRONMENT_NAMES = exports.DEFAULT_ENVIRONMENT_OPTION = exports.VALID_ENVIRONMENT_OPTIONS = void 0;
const graphql_types_1 = require("../graphql/graphql-types");
exports.VALID_ENVIRONMENT_OPTIONS = ['development', 'staging', 'production'];
exports.DEFAULT_ENVIRONMENT_OPTION = exports.VALID_ENVIRONMENT_OPTIONS[0];
exports.XLS_ENVIRONMENT_NAMES = ['default', 'staging', 'production'];
exports.DEFAULT_ENVIRONMENT_KEY = exports.XLS_ENVIRONMENT_NAMES[0];
exports.STAGING_ENVIRONMENT_KEY = exports.XLS_ENVIRONMENT_NAMES[1];
exports.PRODUCTION_ENVIRONMENT_KEY = exports.XLS_ENVIRONMENT_NAMES[2];
function optionToEnvironment(option) {
    const envIndex = exports.VALID_ENVIRONMENT_OPTIONS.indexOf(option);
    return envIndex >= 0 ? exports.XLS_ENVIRONMENT_NAMES[envIndex] : option;
}
exports.optionToEnvironment = optionToEnvironment;
function environmentToOption(envKey) {
    const envIndex = exports.XLS_ENVIRONMENT_NAMES.indexOf(envKey);
    return envIndex >= 0 ? exports.VALID_ENVIRONMENT_OPTIONS[envIndex] : envKey;
}
exports.environmentToOption = environmentToOption;
function guessEnvironmentType(envKey) {
    if (envKey === exports.STAGING_ENVIRONMENT_KEY) {
        return graphql_types_1.AppEnvironmentType.Staging;
    }
    else if (envKey === exports.PRODUCTION_ENVIRONMENT_KEY) {
        return graphql_types_1.AppEnvironmentType.Production;
    }
    return graphql_types_1.AppEnvironmentType.Development;
}
exports.guessEnvironmentType = guessEnvironmentType;
