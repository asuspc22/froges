"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GetAppOwnerQuery = exports.MissingAppOwnerError = void 0;
const graphql_1 = require("../graphql");
const ui_1 = require("../ui");
class MissingAppOwnerError extends Error {
    constructor() {
        super(ui_1.Text.env.error.appOwnerNotExist);
    }
}
exports.MissingAppOwnerError = MissingAppOwnerError;
class GetAppOwnerQuery {
    constructor(graphqlClient, getAppConfig) {
        this.graphqlClient = graphqlClient;
        this.getAppConfig = getAppConfig;
    }
    async execute() {
        const { id: appId } = await this.getAppConfig();
        return this.getAppOwner(appId);
    }
    async getAppOwner(appId) {
        const query = `
      query forge_cli_getAppOwner($id: ID!) {
        app(id: $id) {
          createdBy {
            name
            accountId
          }
        }
      }
    `;
        const { app } = await this.graphqlClient.query(query, {
            id: appId
        });
        if (!app) {
            throw new graphql_1.MissingAppError();
        }
        if (!app.createdBy) {
            throw new MissingAppOwnerError();
        }
        return app.createdBy;
    }
}
exports.GetAppOwnerQuery = GetAppOwnerQuery;
