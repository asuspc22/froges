import { AppEnvironmentType, GraphQLClient } from './index';
import { UserError } from '../shared/error-handling';
export declare class MissingAppError extends UserError {
    constructor();
}
export declare class MissingAppEnvironmentError extends UserError {
    constructor(envKey: string);
}
export interface AppEnvironmentDetails {
    appAri: string;
    name: string;
    environmentType: AppEnvironmentType;
    environmentKey: string;
}
export interface AppEnvironmentClient {
    getAppEnvironmentId: (appId: string, environmentKey: string) => Promise<string>;
    getAppEnvironmentDetails: (appId: string, environmentKey: string) => Promise<AppEnvironmentDetails>;
}
export declare class AppEnvironmentsGraphqlClient implements AppEnvironmentClient {
    private readonly graphqlClient;
    constructor(graphqlClient: GraphQLClient);
    getAppEnvironmentId(appId: string, environmentKey: string): Promise<string>;
    getAppEnvironmentDetails(appAri: string, environmentKey: string): Promise<AppEnvironmentDetails>;
}
//# sourceMappingURL=app-environment-graphql-client.d.ts.map