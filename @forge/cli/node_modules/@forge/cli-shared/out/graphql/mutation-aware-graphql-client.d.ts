import { GraphQLClient } from './index';
import { AvailableMutations, GraphQLRunner, MutationResult } from './graphql-client';
import { BaseError } from '../shared';
export declare class UnexpectedGraphQlResponseError extends BaseError {
}
export declare class GraphQlMutationError extends UnexpectedGraphQlResponseError {
    private readonly code;
    private readonly statusCode;
    readonly requestId: string | undefined;
    constructor(message: string, { requestId, code, statusCode }: {
        requestId: string | undefined;
        code?: string;
        statusCode?: number;
    });
    getCode: () => string;
    getStatusCode: () => number | undefined;
    getRequestId: () => string | undefined;
    isUserError(): boolean;
}
export declare class MutationAwareGraphQLClient implements GraphQLClient {
    private readonly runner;
    constructor(runner: GraphQLRunner);
    mutate<TLabel extends keyof AvailableMutations, TVariables>(query: string, variables: TVariables): Promise<{
        response: MutationResult<TLabel>;
        requestId: string | undefined;
    }>;
    query<TVariables, TResponse>(query: string, variables: TVariables): Promise<TResponse & {
        requestId: string | undefined;
    }>;
}
//# sourceMappingURL=mutation-aware-graphql-client.d.ts.map