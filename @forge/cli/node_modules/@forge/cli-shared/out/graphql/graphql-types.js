"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CompassLinkType = exports.CompassLifecycleEventStage = exports.CompassIncidentEventState = exports.CompassIncidentEventSeverityLevel = exports.CompassFieldType = exports.CompassEventType = exports.CompassDeploymentEventState = exports.CompassDeploymentEventEnvironmentCategory = exports.CompassCustomEventIcon = exports.CompassCriteriaTextComparatorOptions = exports.CompassCriteriaNumberComparatorOptions = exports.CompassCriteriaBooleanComparatorOptions = exports.CompassComponentType = exports.CompassBuildEventState = exports.Classification = exports.CcpSubscriptionStatus = exports.CcpSubscriptionScheduleAction = exports.CcpEntitlementStatus = exports.CcpDuration = exports.CardHierarchyLevelEnumType = exports.BuiltinPolarisIdeaField = exports.BoardFeatureToggleStatus = exports.BoardFeatureStatus = exports.BitbucketPermission = exports.AtlassianProductHostingType = exports.AriGraphRelationshipsSortDirection = exports.AppTrustInformationState = exports.AppTaskState = exports.AppStoredEntityCondition = exports.AppStoredCustomEntityRangeCondition = exports.AppStoredCustomEntityFilterCondition = exports.AppSecurityPoliciesPermissionTypeExtension = exports.AppSecurityPoliciesPermissionType = exports.AppNetworkPermissionTypeExtension = exports.AppNetworkPermissionType = exports.AppEnvironmentType = exports.AppDeploymentStepStatus = exports.AppDeploymentStatus = exports.AppDeploymentEventLogLevel = exports.AppContributorRole = exports.ApiGroup = exports.ApiContext = exports.ActivityProduct = exports.ActivityObjectType = exports.ActivityEventType = exports.ActivitiesObjectType = exports.ActivitiesFilterType = exports.ActivitiesContainerType = exports.AccountStatus = exports.AcceptableResponse = void 0;
exports.DevOpsSecurityVulnerabilityStatus = exports.DevOpsSecurityVulnerabilitySeverity = exports.DevOpsRepositoryHostingProviderFilter = exports.DevOpsRelationshipCertaintyFilter = exports.DevOpsRelationshipCertainty = exports.DevOpsPullRequestStatus = exports.DevOpsPullRequestApprovalStatus = exports.DevOpsProviderType = exports.DevOpsMetricsRollupOption = exports.DevOpsMetricsResolutionUnit = exports.DevOpsMetricsCycleTimePhase = exports.DevOpsJiraProjectType = exports.DevOpsEnvironmentCategory = exports.DevOpsDocumentCategory = exports.DevOpsBuildState = exports.DeploymentState = exports.DataResidencyResponse = exports.DataClassificationPolicyDecisionStatus = exports.CustomEntityStatus = exports.CustomEntityIndexStatus = exports.CustomEntityAttributeType = exports.ContentPlatformSearchTypes = exports.ContentPlatformOperators = exports.ContentPlatformFieldNames = exports.ContentPlatformBooleanOperators = exports.ConfluenceUserType = exports.ConfluenceSpaceType = exports.ConfluenceSpaceStatus = exports.ConfluenceSpaceSettingEditorVersion = exports.ConfluencePageStatus = exports.ConfluenceOperationTarget = exports.ConfluenceOperationName = exports.ConfluenceMutationContentStatus = exports.ConfluenceInlineTaskStatus = exports.ConfluenceInlineCommentResolutionStatus = exports.ConfluenceContributionStatus = exports.ConfluenceContentType = exports.ConfluenceContentRepresentation = exports.ConfluenceCommentType = exports.ConfluenceCommentStatus = exports.ConfluenceCollaborativeEditingService = exports.ConfluenceBodyRepresentation = exports.ConfluenceBlogPostStatus = exports.ComponentSyncEventStatus = exports.CompassScorecardQuerySortOrder = exports.CompassScorecardImportance = exports.CompassRelationshipType = exports.CompassRelationshipDirection = exports.CompassQuerySortOrder = exports.CompassMetricDefinitionType = void 0;
exports.JiraInstallDeploymentsBannerPrecondition = exports.JiraHomePageType = exports.JiraGrantTypeKeyEnum = exports.JiraFavouriteType = exports.JiraDevOpsIssuePanelState = exports.JiraDevOpsIssuePanelBannerType = exports.JiraDevOpsCapability = exports.JiraDevInfoConfigErrorType = exports.JiraDeploymentsFeaturePrecondition = exports.JiraCmdbAttributeType = exports.JiraCascadingSelectOptionType = exports.JiraCannedResponseSortOrder = exports.JiraCannedResponseScope = exports.JiraBulkEditMultiSelectFieldOptions = exports.JiraAttachmentsPermissions = exports.JiraActionType = exports.IssueDevOpsPullRequestStatus = exports.IssueDevOpsDeploymentState = exports.IssueDevOpsDeploymentEnvironmentType = exports.IssueDevOpsCommitChangeType = exports.HelpObjectStoreJsmEntityType = exports.HelpObjectStoreHelpObjectType = exports.HelpLayoutHeadingType = exports.HelpLayoutElementKey = exports.HelpLayoutElementCategory = exports.HelpLayoutCompositeElementKey = exports.HelpLayoutAtomicElementKey = exports.HelpCenterType = exports.GrantCheckProduct = exports.FunctionTriggerType = exports.FortifiedMetricsResolutionUnit = exports.FormStatus = exports.ForgeMetricsSiteFilterCategory = exports.ForgeMetricsResolutionUnit = exports.ForgeMetricsLabels = exports.ForgeMetricsGroupByDimensions = exports.ForgeMetricsDataType = exports.ForgeAuditLogsActionType = exports.ForgeAlertsStatus = exports.ForgeAlertsActivityType = exports.ExtensionContextsFilterType = exports.EventMatchingStrategies = exports.EventKnownAvIs = exports.EstimationType = exports.DevStatusActivity = exports.DevOpsToolSortOrder = exports.DevOpsToolIntegrationType = exports.DevOpsServiceRelationshipType = exports.DevOpsServiceAndRepositoryRelationshipSortBy = exports.DevOpsServiceAndJiraProjectRelationshipType = void 0;
exports.JiraSprintState = exports.JiraSingleValueFieldOperations = exports.JiraShareableEntityGrant = exports.JiraServiceManagementPractice = exports.JiraServiceManagementMajorIncident = exports.JiraServiceManagementCreateRequestTypeFromTemplateWorkflowInputType = exports.JiraServiceManagementCreateRequestTypeFromTemplateWorkflowAction = exports.JiraServiceManagementCreateRequestTypeFromTemplateRequestFormInputType = exports.JiraServiceManagementCommentVisibility = exports.JiraServiceManagementApprovalState = exports.JiraServiceManagementApprovalDecisionResponseType = exports.JiraReviewState = exports.JiraReleasesIssueReleaseStatusFilter = exports.JiraReleasesEpicReleaseStatusFilter = exports.JiraReleaseNotesIssueKeyConfig = exports.JiraPullRequestState = exports.JiraProjectType = exports.JiraProjectStyle = exports.JiraProjectStatus = exports.JiraProjectSortField = exports.JiraProjectShortcutType = exports.JiraProjectPermissionCategoryEnum = exports.JiraProjectDateTimeFormat = exports.JiraProjectAndRepositoryRelationshipSortBy = exports.JiraProjectActionType = exports.JiraPermissionType = exports.JiraPermissionTagEnum = exports.JiraPermissionMessageTypeEnum = exports.JiraMultiValueFieldOperations = exports.JiraLongRunningTaskStatus = exports.JiraJqlViewContext = exports.JiraJqlSyntaxError = exports.JiraJqlOperator = exports.JiraJqlFunctionStatus = exports.JiraJqlClauseType = exports.JiraJqlBuilderMode = exports.JiraJqlAutocompleteType = exports.JiraJqlBuilderSearchMode = exports.JiraIteration = exports.JiraIssueViewTimestampDisplayMode = exports.JiraIssueViewAttachmentPanelViewMode = exports.JiraIssueViewActivityFeedSortOrder = exports.JiraIssueTransitionLayoutMessageType = exports.JiraIssueSearchFieldSetSelectedState = exports.JiraIssueNavigatorSearchLayout = exports.JiraIssueLinkDirection = exports.JiraIssueLifecycleState = exports.JiraIssueItemSystemContainerType = exports.JiraIssueItemLayoutItemLocationRuleType = exports.JiraIssueDeploymentEnvironmentState = void 0;
exports.PolarisRefreshError = exports.PolarisPlayKind = exports.PolarisFieldType = exports.PolarisCommentKind = exports.PlanModeDestination = exports.PartnerCurrency = exports.PartnerCloudLicenseType = exports.PartnerBtfLicenseType = exports.NlpSearchResultType = exports.NlpErrorState = exports.NlpDisclaimer = exports.NadelHydrationTemplate = exports.MembershipState = exports.MembershipSetting = exports.MembershipRole = exports.MarketplaceProgramStatus = exports.MarketplacePricingTierType = exports.MarketplacePricingTierPolicy = exports.MarketplacePricingTierMode = exports.MarketplacePricingPlanStatus = exports.MarketplacePartnerType = exports.MarketplacePartnerTierType = exports.MarketplacePartnerSupportHolidayFrequency = exports.MarketplaceLocation = exports.MarketplaceListingStatus = exports.MarketplaceEntityStatus = exports.MarketplaceCloudFortifiedStatus = exports.MarketplaceBillingCycle = exports.MarketplaceAppVersionVisibility = exports.MarketplaceAppPermission = exports.MarketplaceAppPaymentModel = exports.LifecycleStage = exports.LicenseOverrideState = exports.JiraWatchesOperations = exports.JiraVotesOperations = exports.JiraVersionWarningConfigState = exports.JiraVersionWarningCategories = exports.JiraVersionStatus = exports.JiraVersionReleaseNotesType = exports.JiraVersionRelatedWorkType = exports.JiraVersionIssuesStatusCategories = exports.JiraVersionIssuesSortField = exports.JiraVersionIssuesFilter = exports.JiraVersionIssueTableColumn = exports.JiraVersionDetailsCollapsedUi = exports.JiraVersionApproverStatus = exports.JiraTransitionSortOption = exports.JiraTimeUnit = exports.JiraTimeFormat = exports.JiraStatusCategoryColor = void 0;
exports.SupportRequestNamedContactOperation = exports.SupportRequestFieldDataType = exports.SubscriptionEventSources = exports.SprintState = exports.SprintReportsEstimationStatisticType = exports.SortOrder = exports.SortDirection = exports.SoftwareCardsDestinationEnum = exports.ShepherdWebhookType = exports.ShepherdWebhookDestinationType = exports.ShepherdSubscriptionStatus = exports.ShepherdRateThresholdValue = exports.ShepherdQueryErrorType = exports.ShepherdMutationErrorType = exports.ShepherdLoginDeviceType = exports.ShepherdDetectionScanningFrequency = exports.ShepherdAtlassianProduct = exports.ShepherdAlertTemplateType = exports.ShepherdAlertStatus = exports.ShepherdActionType = exports.SearchResultType = exports.SearchProjectType = exports.SearchIssueStatusCategory = exports.SearchContainerStatus = exports.SearchConfluenceRangeField = exports.SearchConfluenceDocumentStatus = exports.SearchBoardProductType = exports.Scope = exports.RoadmapVersionStatus = exports.RoadmapTimelineMode = exports.RoadmapSprintState = exports.RoadmapRankPosition = exports.RoadmapPaletteColor = exports.RoadmapLevelOneView = exports.RoadmapEpicView = exports.RoadmapChildIssuePlanningMode = exports.RateLimitingCurrency = exports.PrincipalType = exports.PolarisVisualizationType = exports.PolarisViewSortMode = exports.PolarisViewSetType = exports.PolarisViewLayoutType = exports.PolarisViewFilterOperator = exports.PolarisViewFilterKind = exports.PolarisViewFieldRollupType = exports.PolarisValueOperator = exports.PolarisTimelineMode = exports.PolarisSortOrder = exports.PolarisSnippetPropertyKind = exports.PolarisResolvedObjectAuthType = void 0;
exports.SourceBillingType = exports.VirtualAgentIntentTemplateType = exports.UserInstallationRuleValue = exports.TrelloPluginDataScope = exports.TrelloPluginDataAccess = exports.TrelloCardRole = exports.TrelloCardCoverSize = exports.TrelloCardCoverColor = exports.TrelloCardCoverBrightness = exports.TownsquareTargetDateType = exports.TownsquareProjectStateValue = exports.TownsquareProjectSortEnum = exports.TownsquareGoalStateValue = exports.TownsquareGoalSortEnum = exports.ToolchainSyncState = exports.TeamStateV2 = exports.TeamState = exports.TeamSortOrder = exports.TeamSortField = exports.TeamMembershipState = exports.TeamMembershipSetting = exports.TeamMembershipRole = exports.SwimlaneStrategy = exports.SupportRequestUserType = exports.SupportRequestStatusCategory = exports.SupportRequestQueryStatusCategory = exports.SupportRequestQueryOwnership = void 0;
var AcceptableResponse;
(function (AcceptableResponse) {
    AcceptableResponse["NotApplicable"] = "NOT_APPLICABLE";
    AcceptableResponse["True"] = "TRUE";
    AcceptableResponse["False"] = "FALSE";
})(AcceptableResponse = exports.AcceptableResponse || (exports.AcceptableResponse = {}));
var AccountStatus;
(function (AccountStatus) {
    AccountStatus["Active"] = "active";
    AccountStatus["Inactive"] = "inactive";
    AccountStatus["Closed"] = "closed";
})(AccountStatus = exports.AccountStatus || (exports.AccountStatus = {}));
var ActivitiesContainerType;
(function (ActivitiesContainerType) {
    ActivitiesContainerType["Site"] = "SITE";
    ActivitiesContainerType["Project"] = "PROJECT";
    ActivitiesContainerType["Space"] = "SPACE";
    ActivitiesContainerType["Workspace"] = "WORKSPACE";
})(ActivitiesContainerType = exports.ActivitiesContainerType || (exports.ActivitiesContainerType = {}));
var ActivitiesFilterType;
(function (ActivitiesFilterType) {
    ActivitiesFilterType["And"] = "AND";
    ActivitiesFilterType["Or"] = "OR";
})(ActivitiesFilterType = exports.ActivitiesFilterType || (exports.ActivitiesFilterType = {}));
var ActivitiesObjectType;
(function (ActivitiesObjectType) {
    ActivitiesObjectType["Issue"] = "ISSUE";
    ActivitiesObjectType["Page"] = "PAGE";
    ActivitiesObjectType["Blogpost"] = "BLOGPOST";
    ActivitiesObjectType["Whiteboard"] = "WHITEBOARD";
    ActivitiesObjectType["Project"] = "PROJECT";
    ActivitiesObjectType["Goal"] = "GOAL";
})(ActivitiesObjectType = exports.ActivitiesObjectType || (exports.ActivitiesObjectType = {}));
var ActivityEventType;
(function (ActivityEventType) {
    ActivityEventType["Assigned"] = "ASSIGNED";
    ActivityEventType["Unassigned"] = "UNASSIGNED";
    ActivityEventType["Viewed"] = "VIEWED";
    ActivityEventType["Commented"] = "COMMENTED";
    ActivityEventType["Updated"] = "UPDATED";
    ActivityEventType["Created"] = "CREATED";
    ActivityEventType["Liked"] = "LIKED";
    ActivityEventType["Transitioned"] = "TRANSITIONED";
    ActivityEventType["Published"] = "PUBLISHED";
    ActivityEventType["Edited"] = "EDITED";
})(ActivityEventType = exports.ActivityEventType || (exports.ActivityEventType = {}));
var ActivityObjectType;
(function (ActivityObjectType) {
    ActivityObjectType["Site"] = "SITE";
    ActivityObjectType["Project"] = "PROJECT";
    ActivityObjectType["Issue"] = "ISSUE";
    ActivityObjectType["Comment"] = "COMMENT";
    ActivityObjectType["Space"] = "SPACE";
    ActivityObjectType["Page"] = "PAGE";
    ActivityObjectType["Blogpost"] = "BLOGPOST";
    ActivityObjectType["Whiteboard"] = "WHITEBOARD";
    ActivityObjectType["Task"] = "TASK";
    ActivityObjectType["Goal"] = "GOAL";
})(ActivityObjectType = exports.ActivityObjectType || (exports.ActivityObjectType = {}));
var ActivityProduct;
(function (ActivityProduct) {
    ActivityProduct["Jira"] = "JIRA";
    ActivityProduct["JiraBusiness"] = "JIRA_BUSINESS";
    ActivityProduct["JiraSoftware"] = "JIRA_SOFTWARE";
    ActivityProduct["JiraOps"] = "JIRA_OPS";
    ActivityProduct["JiraServiceDesk"] = "JIRA_SERVICE_DESK";
    ActivityProduct["Confluence"] = "CONFLUENCE";
    ActivityProduct["Townsquare"] = "TOWNSQUARE";
})(ActivityProduct = exports.ActivityProduct || (exports.ActivityProduct = {}));
var ApiContext;
(function (ApiContext) {
    ApiContext["Devops"] = "DEVOPS";
})(ApiContext = exports.ApiContext || (exports.ApiContext = {}));
var ApiGroup;
(function (ApiGroup) {
    ApiGroup["Compass"] = "COMPASS";
    ApiGroup["Confluence"] = "CONFLUENCE";
    ApiGroup["Jira"] = "JIRA";
    ApiGroup["Forge"] = "FORGE";
    ApiGroup["Polaris"] = "POLARIS";
    ApiGroup["Caas"] = "CAAS";
    ApiGroup["XenLogsApi"] = "XEN_LOGS_API";
    ApiGroup["DevopsService"] = "DEVOPS_SERVICE";
    ApiGroup["DevopsContainerRelationship"] = "DEVOPS_CONTAINER_RELATIONSHIP";
    ApiGroup["Teams"] = "TEAMS";
    ApiGroup["ContentPlatformApi"] = "CONTENT_PLATFORM_API";
    ApiGroup["Identity"] = "IDENTITY";
    ApiGroup["DevopsAriGraph"] = "DEVOPS_ARI_GRAPH";
    ApiGroup["Help"] = "HELP";
    ApiGroup["VirtualAgent"] = "VIRTUAL_AGENT";
    ApiGroup["CollaborationGraph"] = "COLLABORATION_GRAPH";
    ApiGroup["DevopsThirdParty"] = "DEVOPS_THIRD_PARTY";
    ApiGroup["DevopsToolchain"] = "DEVOPS_TOOLCHAIN";
    ApiGroup["CloudAdmin"] = "CLOUD_ADMIN";
    ApiGroup["CustomerService"] = "CUSTOMER_SERVICE";
    ApiGroup["SurfacePlatform"] = "SURFACE_PLATFORM";
    ApiGroup["AppRecommendations"] = "APP_RECOMMENDATIONS";
})(ApiGroup = exports.ApiGroup || (exports.ApiGroup = {}));
var AppContributorRole;
(function (AppContributorRole) {
    AppContributorRole["Admin"] = "ADMIN";
})(AppContributorRole = exports.AppContributorRole || (exports.AppContributorRole = {}));
var AppDeploymentEventLogLevel;
(function (AppDeploymentEventLogLevel) {
    AppDeploymentEventLogLevel["Info"] = "INFO";
    AppDeploymentEventLogLevel["Warning"] = "WARNING";
    AppDeploymentEventLogLevel["Error"] = "ERROR";
})(AppDeploymentEventLogLevel = exports.AppDeploymentEventLogLevel || (exports.AppDeploymentEventLogLevel = {}));
var AppDeploymentStatus;
(function (AppDeploymentStatus) {
    AppDeploymentStatus["InProgress"] = "IN_PROGRESS";
    AppDeploymentStatus["Done"] = "DONE";
    AppDeploymentStatus["Failed"] = "FAILED";
})(AppDeploymentStatus = exports.AppDeploymentStatus || (exports.AppDeploymentStatus = {}));
var AppDeploymentStepStatus;
(function (AppDeploymentStepStatus) {
    AppDeploymentStepStatus["Started"] = "STARTED";
    AppDeploymentStepStatus["Done"] = "DONE";
    AppDeploymentStepStatus["Failed"] = "FAILED";
})(AppDeploymentStepStatus = exports.AppDeploymentStepStatus || (exports.AppDeploymentStepStatus = {}));
var AppEnvironmentType;
(function (AppEnvironmentType) {
    AppEnvironmentType["Development"] = "DEVELOPMENT";
    AppEnvironmentType["Staging"] = "STAGING";
    AppEnvironmentType["Production"] = "PRODUCTION";
})(AppEnvironmentType = exports.AppEnvironmentType || (exports.AppEnvironmentType = {}));
var AppNetworkPermissionType;
(function (AppNetworkPermissionType) {
    AppNetworkPermissionType["Navigation"] = "NAVIGATION";
    AppNetworkPermissionType["Images"] = "IMAGES";
    AppNetworkPermissionType["Media"] = "MEDIA";
    AppNetworkPermissionType["Scripts"] = "SCRIPTS";
    AppNetworkPermissionType["Styles"] = "STYLES";
    AppNetworkPermissionType["FetchBackendSide"] = "FETCH_BACKEND_SIDE";
    AppNetworkPermissionType["FetchClientSide"] = "FETCH_CLIENT_SIDE";
    AppNetworkPermissionType["Fonts"] = "FONTS";
    AppNetworkPermissionType["Frames"] = "FRAMES";
})(AppNetworkPermissionType = exports.AppNetworkPermissionType || (exports.AppNetworkPermissionType = {}));
var AppNetworkPermissionTypeExtension;
(function (AppNetworkPermissionTypeExtension) {
    AppNetworkPermissionTypeExtension["Navigation"] = "NAVIGATION";
    AppNetworkPermissionTypeExtension["Images"] = "IMAGES";
    AppNetworkPermissionTypeExtension["Media"] = "MEDIA";
    AppNetworkPermissionTypeExtension["Scripts"] = "SCRIPTS";
    AppNetworkPermissionTypeExtension["Styles"] = "STYLES";
    AppNetworkPermissionTypeExtension["FetchBackendSide"] = "FETCH_BACKEND_SIDE";
    AppNetworkPermissionTypeExtension["FetchClientSide"] = "FETCH_CLIENT_SIDE";
    AppNetworkPermissionTypeExtension["Fonts"] = "FONTS";
    AppNetworkPermissionTypeExtension["Frames"] = "FRAMES";
})(AppNetworkPermissionTypeExtension = exports.AppNetworkPermissionTypeExtension || (exports.AppNetworkPermissionTypeExtension = {}));
var AppSecurityPoliciesPermissionType;
(function (AppSecurityPoliciesPermissionType) {
    AppSecurityPoliciesPermissionType["Scripts"] = "SCRIPTS";
    AppSecurityPoliciesPermissionType["Styles"] = "STYLES";
})(AppSecurityPoliciesPermissionType = exports.AppSecurityPoliciesPermissionType || (exports.AppSecurityPoliciesPermissionType = {}));
var AppSecurityPoliciesPermissionTypeExtension;
(function (AppSecurityPoliciesPermissionTypeExtension) {
    AppSecurityPoliciesPermissionTypeExtension["Scripts"] = "SCRIPTS";
    AppSecurityPoliciesPermissionTypeExtension["Styles"] = "STYLES";
})(AppSecurityPoliciesPermissionTypeExtension = exports.AppSecurityPoliciesPermissionTypeExtension || (exports.AppSecurityPoliciesPermissionTypeExtension = {}));
var AppStoredCustomEntityFilterCondition;
(function (AppStoredCustomEntityFilterCondition) {
    AppStoredCustomEntityFilterCondition["BeginsWith"] = "BEGINS_WITH";
    AppStoredCustomEntityFilterCondition["Between"] = "BETWEEN";
    AppStoredCustomEntityFilterCondition["Contains"] = "CONTAINS";
    AppStoredCustomEntityFilterCondition["NotContains"] = "NOT_CONTAINS";
    AppStoredCustomEntityFilterCondition["Exists"] = "EXISTS";
    AppStoredCustomEntityFilterCondition["NotExists"] = "NOT_EXISTS";
    AppStoredCustomEntityFilterCondition["EqualTo"] = "EQUAL_TO";
    AppStoredCustomEntityFilterCondition["NotEqualTo"] = "NOT_EQUAL_TO";
    AppStoredCustomEntityFilterCondition["GreaterThanEqualTo"] = "GREATER_THAN_EQUAL_TO";
    AppStoredCustomEntityFilterCondition["GreaterThan"] = "GREATER_THAN";
    AppStoredCustomEntityFilterCondition["LessThanEqualTo"] = "LESS_THAN_EQUAL_TO";
    AppStoredCustomEntityFilterCondition["LessThan"] = "LESS_THAN";
})(AppStoredCustomEntityFilterCondition = exports.AppStoredCustomEntityFilterCondition || (exports.AppStoredCustomEntityFilterCondition = {}));
var AppStoredCustomEntityRangeCondition;
(function (AppStoredCustomEntityRangeCondition) {
    AppStoredCustomEntityRangeCondition["BeginsWith"] = "BEGINS_WITH";
    AppStoredCustomEntityRangeCondition["Between"] = "BETWEEN";
    AppStoredCustomEntityRangeCondition["GreaterThanEqualTo"] = "GREATER_THAN_EQUAL_TO";
    AppStoredCustomEntityRangeCondition["GreaterThan"] = "GREATER_THAN";
    AppStoredCustomEntityRangeCondition["LessThanEqualTo"] = "LESS_THAN_EQUAL_TO";
    AppStoredCustomEntityRangeCondition["LessThan"] = "LESS_THAN";
    AppStoredCustomEntityRangeCondition["EqualTo"] = "EQUAL_TO";
})(AppStoredCustomEntityRangeCondition = exports.AppStoredCustomEntityRangeCondition || (exports.AppStoredCustomEntityRangeCondition = {}));
var AppStoredEntityCondition;
(function (AppStoredEntityCondition) {
    AppStoredEntityCondition["StartsWith"] = "STARTS_WITH";
    AppStoredEntityCondition["NotEqualTo"] = "NOT_EQUAL_TO";
    AppStoredEntityCondition["In"] = "IN";
})(AppStoredEntityCondition = exports.AppStoredEntityCondition || (exports.AppStoredEntityCondition = {}));
var AppTaskState;
(function (AppTaskState) {
    AppTaskState["Pending"] = "PENDING";
    AppTaskState["Running"] = "RUNNING";
    AppTaskState["Complete"] = "COMPLETE";
    AppTaskState["Failed"] = "FAILED";
})(AppTaskState = exports.AppTaskState || (exports.AppTaskState = {}));
var AppTrustInformationState;
(function (AppTrustInformationState) {
    AppTrustInformationState["Draft"] = "DRAFT";
    AppTrustInformationState["Live"] = "LIVE";
})(AppTrustInformationState = exports.AppTrustInformationState || (exports.AppTrustInformationState = {}));
var AriGraphRelationshipsSortDirection;
(function (AriGraphRelationshipsSortDirection) {
    AriGraphRelationshipsSortDirection["Asc"] = "ASC";
    AriGraphRelationshipsSortDirection["Desc"] = "DESC";
})(AriGraphRelationshipsSortDirection = exports.AriGraphRelationshipsSortDirection || (exports.AriGraphRelationshipsSortDirection = {}));
var AtlassianProductHostingType;
(function (AtlassianProductHostingType) {
    AtlassianProductHostingType["Cloud"] = "CLOUD";
    AtlassianProductHostingType["Server"] = "SERVER";
    AtlassianProductHostingType["DataCenter"] = "DATA_CENTER";
})(AtlassianProductHostingType = exports.AtlassianProductHostingType || (exports.AtlassianProductHostingType = {}));
var BitbucketPermission;
(function (BitbucketPermission) {
    BitbucketPermission["Admin"] = "ADMIN";
})(BitbucketPermission = exports.BitbucketPermission || (exports.BitbucketPermission = {}));
var BoardFeatureStatus;
(function (BoardFeatureStatus) {
    BoardFeatureStatus["Enabled"] = "ENABLED";
    BoardFeatureStatus["Disabled"] = "DISABLED";
    BoardFeatureStatus["ComingSoon"] = "COMING_SOON";
})(BoardFeatureStatus = exports.BoardFeatureStatus || (exports.BoardFeatureStatus = {}));
var BoardFeatureToggleStatus;
(function (BoardFeatureToggleStatus) {
    BoardFeatureToggleStatus["Enabled"] = "ENABLED";
    BoardFeatureToggleStatus["Disabled"] = "DISABLED";
})(BoardFeatureToggleStatus = exports.BoardFeatureToggleStatus || (exports.BoardFeatureToggleStatus = {}));
var BuiltinPolarisIdeaField;
(function (BuiltinPolarisIdeaField) {
    BuiltinPolarisIdeaField["Assignee"] = "ASSIGNEE";
    BuiltinPolarisIdeaField["Created"] = "CREATED";
    BuiltinPolarisIdeaField["Creator"] = "CREATOR";
    BuiltinPolarisIdeaField["Description"] = "DESCRIPTION";
    BuiltinPolarisIdeaField["IssueId"] = "ISSUE_ID";
    BuiltinPolarisIdeaField["IssueType"] = "ISSUE_TYPE";
    BuiltinPolarisIdeaField["Key"] = "KEY";
    BuiltinPolarisIdeaField["Labels"] = "LABELS";
    BuiltinPolarisIdeaField["Reporter"] = "REPORTER";
    BuiltinPolarisIdeaField["Status"] = "STATUS";
    BuiltinPolarisIdeaField["Summary"] = "SUMMARY";
    BuiltinPolarisIdeaField["Updated"] = "UPDATED";
    BuiltinPolarisIdeaField["Votes"] = "VOTES";
    BuiltinPolarisIdeaField["Archived"] = "ARCHIVED";
    BuiltinPolarisIdeaField["ArchivedBy"] = "ARCHIVED_BY";
    BuiltinPolarisIdeaField["ArchivedOn"] = "ARCHIVED_ON";
    BuiltinPolarisIdeaField["DeliveryProgress"] = "DELIVERY_PROGRESS";
    BuiltinPolarisIdeaField["DeliveryStatus"] = "DELIVERY_STATUS";
    BuiltinPolarisIdeaField["IssueComments"] = "ISSUE_COMMENTS";
    BuiltinPolarisIdeaField["LinkedIssues"] = "LINKED_ISSUES";
    BuiltinPolarisIdeaField["NumDataPoints"] = "NUM_DATA_POINTS";
    BuiltinPolarisIdeaField["AtlasGoal"] = "ATLAS_GOAL";
    BuiltinPolarisIdeaField["AtlasProject"] = "ATLAS_PROJECT";
    BuiltinPolarisIdeaField["AtlasProjectStatus"] = "ATLAS_PROJECT_STATUS";
    BuiltinPolarisIdeaField["AtlasProjectTarget"] = "ATLAS_PROJECT_TARGET";
})(BuiltinPolarisIdeaField = exports.BuiltinPolarisIdeaField || (exports.BuiltinPolarisIdeaField = {}));
var CardHierarchyLevelEnumType;
(function (CardHierarchyLevelEnumType) {
    CardHierarchyLevelEnumType["Child"] = "CHILD";
    CardHierarchyLevelEnumType["Base"] = "BASE";
    CardHierarchyLevelEnumType["Parent"] = "PARENT";
})(CardHierarchyLevelEnumType = exports.CardHierarchyLevelEnumType || (exports.CardHierarchyLevelEnumType = {}));
var CcpDuration;
(function (CcpDuration) {
    CcpDuration["Forever"] = "FOREVER";
    CcpDuration["Once"] = "ONCE";
    CcpDuration["Repeating"] = "REPEATING";
})(CcpDuration = exports.CcpDuration || (exports.CcpDuration = {}));
var CcpEntitlementStatus;
(function (CcpEntitlementStatus) {
    CcpEntitlementStatus["Active"] = "ACTIVE";
    CcpEntitlementStatus["Inactive"] = "INACTIVE";
})(CcpEntitlementStatus = exports.CcpEntitlementStatus || (exports.CcpEntitlementStatus = {}));
var CcpSubscriptionScheduleAction;
(function (CcpSubscriptionScheduleAction) {
    CcpSubscriptionScheduleAction["Update"] = "UPDATE";
    CcpSubscriptionScheduleAction["Cancel"] = "CANCEL";
})(CcpSubscriptionScheduleAction = exports.CcpSubscriptionScheduleAction || (exports.CcpSubscriptionScheduleAction = {}));
var CcpSubscriptionStatus;
(function (CcpSubscriptionStatus) {
    CcpSubscriptionStatus["Processing"] = "PROCESSING";
    CcpSubscriptionStatus["Active"] = "ACTIVE";
    CcpSubscriptionStatus["Cancelled"] = "CANCELLED";
})(CcpSubscriptionStatus = exports.CcpSubscriptionStatus || (exports.CcpSubscriptionStatus = {}));
var Classification;
(function (Classification) {
    Classification["Ugc"] = "ugc";
    Classification["Pii"] = "pii";
    Classification["Other"] = "other";
})(Classification = exports.Classification || (exports.Classification = {}));
var CompassBuildEventState;
(function (CompassBuildEventState) {
    CompassBuildEventState["InProgress"] = "IN_PROGRESS";
    CompassBuildEventState["Successful"] = "SUCCESSFUL";
    CompassBuildEventState["Cancelled"] = "CANCELLED";
    CompassBuildEventState["Failed"] = "FAILED";
    CompassBuildEventState["Error"] = "ERROR";
    CompassBuildEventState["TimedOut"] = "TIMED_OUT";
    CompassBuildEventState["Unknown"] = "UNKNOWN";
})(CompassBuildEventState = exports.CompassBuildEventState || (exports.CompassBuildEventState = {}));
var CompassComponentType;
(function (CompassComponentType) {
    CompassComponentType["Application"] = "APPLICATION";
    CompassComponentType["Library"] = "LIBRARY";
    CompassComponentType["Service"] = "SERVICE";
    CompassComponentType["Other"] = "OTHER";
})(CompassComponentType = exports.CompassComponentType || (exports.CompassComponentType = {}));
var CompassCriteriaBooleanComparatorOptions;
(function (CompassCriteriaBooleanComparatorOptions) {
    CompassCriteriaBooleanComparatorOptions["Equals"] = "EQUALS";
})(CompassCriteriaBooleanComparatorOptions = exports.CompassCriteriaBooleanComparatorOptions || (exports.CompassCriteriaBooleanComparatorOptions = {}));
var CompassCriteriaNumberComparatorOptions;
(function (CompassCriteriaNumberComparatorOptions) {
    CompassCriteriaNumberComparatorOptions["Equals"] = "EQUALS";
    CompassCriteriaNumberComparatorOptions["GreaterThan"] = "GREATER_THAN";
    CompassCriteriaNumberComparatorOptions["LessThan"] = "LESS_THAN";
    CompassCriteriaNumberComparatorOptions["GreaterThanOrEqualTo"] = "GREATER_THAN_OR_EQUAL_TO";
    CompassCriteriaNumberComparatorOptions["LessThanOrEqualTo"] = "LESS_THAN_OR_EQUAL_TO";
})(CompassCriteriaNumberComparatorOptions = exports.CompassCriteriaNumberComparatorOptions || (exports.CompassCriteriaNumberComparatorOptions = {}));
var CompassCriteriaTextComparatorOptions;
(function (CompassCriteriaTextComparatorOptions) {
    CompassCriteriaTextComparatorOptions["IsPresent"] = "IS_PRESENT";
    CompassCriteriaTextComparatorOptions["MatchesRegex"] = "MATCHES_REGEX";
})(CompassCriteriaTextComparatorOptions = exports.CompassCriteriaTextComparatorOptions || (exports.CompassCriteriaTextComparatorOptions = {}));
var CompassCustomEventIcon;
(function (CompassCustomEventIcon) {
    CompassCustomEventIcon["Info"] = "INFO";
    CompassCustomEventIcon["Warning"] = "WARNING";
    CompassCustomEventIcon["Checkpoint"] = "CHECKPOINT";
})(CompassCustomEventIcon = exports.CompassCustomEventIcon || (exports.CompassCustomEventIcon = {}));
var CompassDeploymentEventEnvironmentCategory;
(function (CompassDeploymentEventEnvironmentCategory) {
    CompassDeploymentEventEnvironmentCategory["Production"] = "PRODUCTION";
    CompassDeploymentEventEnvironmentCategory["Staging"] = "STAGING";
    CompassDeploymentEventEnvironmentCategory["Testing"] = "TESTING";
    CompassDeploymentEventEnvironmentCategory["Development"] = "DEVELOPMENT";
    CompassDeploymentEventEnvironmentCategory["Unmapped"] = "UNMAPPED";
})(CompassDeploymentEventEnvironmentCategory = exports.CompassDeploymentEventEnvironmentCategory || (exports.CompassDeploymentEventEnvironmentCategory = {}));
var CompassDeploymentEventState;
(function (CompassDeploymentEventState) {
    CompassDeploymentEventState["Pending"] = "PENDING";
    CompassDeploymentEventState["InProgress"] = "IN_PROGRESS";
    CompassDeploymentEventState["Successful"] = "SUCCESSFUL";
    CompassDeploymentEventState["Cancelled"] = "CANCELLED";
    CompassDeploymentEventState["Failed"] = "FAILED";
    CompassDeploymentEventState["RolledBack"] = "ROLLED_BACK";
    CompassDeploymentEventState["Unknown"] = "UNKNOWN";
})(CompassDeploymentEventState = exports.CompassDeploymentEventState || (exports.CompassDeploymentEventState = {}));
var CompassEventType;
(function (CompassEventType) {
    CompassEventType["Deployment"] = "DEPLOYMENT";
    CompassEventType["Build"] = "BUILD";
    CompassEventType["Incident"] = "INCIDENT";
    CompassEventType["Flag"] = "FLAG";
    CompassEventType["Alert"] = "ALERT";
    CompassEventType["Lifecycle"] = "LIFECYCLE";
    CompassEventType["Custom"] = "CUSTOM";
    CompassEventType["Push"] = "PUSH";
})(CompassEventType = exports.CompassEventType || (exports.CompassEventType = {}));
var CompassFieldType;
(function (CompassFieldType) {
    CompassFieldType["Text"] = "TEXT";
    CompassFieldType["Number"] = "NUMBER";
    CompassFieldType["Date"] = "DATE";
    CompassFieldType["Enum"] = "ENUM";
})(CompassFieldType = exports.CompassFieldType || (exports.CompassFieldType = {}));
var CompassIncidentEventSeverityLevel;
(function (CompassIncidentEventSeverityLevel) {
    CompassIncidentEventSeverityLevel["One"] = "ONE";
    CompassIncidentEventSeverityLevel["Two"] = "TWO";
    CompassIncidentEventSeverityLevel["Three"] = "THREE";
    CompassIncidentEventSeverityLevel["Four"] = "FOUR";
    CompassIncidentEventSeverityLevel["Five"] = "FIVE";
})(CompassIncidentEventSeverityLevel = exports.CompassIncidentEventSeverityLevel || (exports.CompassIncidentEventSeverityLevel = {}));
var CompassIncidentEventState;
(function (CompassIncidentEventState) {
    CompassIncidentEventState["Open"] = "OPEN";
    CompassIncidentEventState["Resolved"] = "RESOLVED";
    CompassIncidentEventState["Deleted"] = "DELETED";
})(CompassIncidentEventState = exports.CompassIncidentEventState || (exports.CompassIncidentEventState = {}));
var CompassLifecycleEventStage;
(function (CompassLifecycleEventStage) {
    CompassLifecycleEventStage["PreRelease"] = "PRE_RELEASE";
    CompassLifecycleEventStage["Production"] = "PRODUCTION";
    CompassLifecycleEventStage["Deprecation"] = "DEPRECATION";
    CompassLifecycleEventStage["EndOfLife"] = "END_OF_LIFE";
})(CompassLifecycleEventStage = exports.CompassLifecycleEventStage || (exports.CompassLifecycleEventStage = {}));
var CompassLinkType;
(function (CompassLinkType) {
    CompassLinkType["Document"] = "DOCUMENT";
    CompassLinkType["ChatChannel"] = "CHAT_CHANNEL";
    CompassLinkType["Repository"] = "REPOSITORY";
    CompassLinkType["Project"] = "PROJECT";
    CompassLinkType["Dashboard"] = "DASHBOARD";
    CompassLinkType["OnCall"] = "ON_CALL";
    CompassLinkType["OtherLink"] = "OTHER_LINK";
})(CompassLinkType = exports.CompassLinkType || (exports.CompassLinkType = {}));
var CompassMetricDefinitionType;
(function (CompassMetricDefinitionType) {
    CompassMetricDefinitionType["BuiltIn"] = "BUILT_IN";
    CompassMetricDefinitionType["Custom"] = "CUSTOM";
})(CompassMetricDefinitionType = exports.CompassMetricDefinitionType || (exports.CompassMetricDefinitionType = {}));
var CompassQuerySortOrder;
(function (CompassQuerySortOrder) {
    CompassQuerySortOrder["Asc"] = "ASC";
    CompassQuerySortOrder["Desc"] = "DESC";
})(CompassQuerySortOrder = exports.CompassQuerySortOrder || (exports.CompassQuerySortOrder = {}));
var CompassRelationshipDirection;
(function (CompassRelationshipDirection) {
    CompassRelationshipDirection["Inward"] = "INWARD";
    CompassRelationshipDirection["Outward"] = "OUTWARD";
})(CompassRelationshipDirection = exports.CompassRelationshipDirection || (exports.CompassRelationshipDirection = {}));
var CompassRelationshipType;
(function (CompassRelationshipType) {
    CompassRelationshipType["DependsOn"] = "DEPENDS_ON";
})(CompassRelationshipType = exports.CompassRelationshipType || (exports.CompassRelationshipType = {}));
var CompassScorecardImportance;
(function (CompassScorecardImportance) {
    CompassScorecardImportance["Required"] = "REQUIRED";
    CompassScorecardImportance["Recommended"] = "RECOMMENDED";
    CompassScorecardImportance["UserDefined"] = "USER_DEFINED";
})(CompassScorecardImportance = exports.CompassScorecardImportance || (exports.CompassScorecardImportance = {}));
var CompassScorecardQuerySortOrder;
(function (CompassScorecardQuerySortOrder) {
    CompassScorecardQuerySortOrder["Asc"] = "ASC";
    CompassScorecardQuerySortOrder["Desc"] = "DESC";
})(CompassScorecardQuerySortOrder = exports.CompassScorecardQuerySortOrder || (exports.CompassScorecardQuerySortOrder = {}));
var ComponentSyncEventStatus;
(function (ComponentSyncEventStatus) {
    ComponentSyncEventStatus["Success"] = "SUCCESS";
    ComponentSyncEventStatus["UserError"] = "USER_ERROR";
    ComponentSyncEventStatus["ServerError"] = "SERVER_ERROR";
})(ComponentSyncEventStatus = exports.ComponentSyncEventStatus || (exports.ComponentSyncEventStatus = {}));
var ConfluenceBlogPostStatus;
(function (ConfluenceBlogPostStatus) {
    ConfluenceBlogPostStatus["Archived"] = "ARCHIVED";
    ConfluenceBlogPostStatus["Current"] = "CURRENT";
    ConfluenceBlogPostStatus["Deleted"] = "DELETED";
    ConfluenceBlogPostStatus["Draft"] = "DRAFT";
    ConfluenceBlogPostStatus["Historical"] = "HISTORICAL";
    ConfluenceBlogPostStatus["Trashed"] = "TRASHED";
})(ConfluenceBlogPostStatus = exports.ConfluenceBlogPostStatus || (exports.ConfluenceBlogPostStatus = {}));
var ConfluenceBodyRepresentation;
(function (ConfluenceBodyRepresentation) {
    ConfluenceBodyRepresentation["AnonymousExportView"] = "ANONYMOUS_EXPORT_VIEW";
    ConfluenceBodyRepresentation["AtlasDocFormat"] = "ATLAS_DOC_FORMAT";
    ConfluenceBodyRepresentation["Dynamic"] = "DYNAMIC";
    ConfluenceBodyRepresentation["Editor"] = "EDITOR";
    ConfluenceBodyRepresentation["Editor2"] = "EDITOR2";
    ConfluenceBodyRepresentation["ExportView"] = "EXPORT_VIEW";
    ConfluenceBodyRepresentation["Storage"] = "STORAGE";
    ConfluenceBodyRepresentation["StyledView"] = "STYLED_VIEW";
    ConfluenceBodyRepresentation["View"] = "VIEW";
})(ConfluenceBodyRepresentation = exports.ConfluenceBodyRepresentation || (exports.ConfluenceBodyRepresentation = {}));
var ConfluenceCollaborativeEditingService;
(function (ConfluenceCollaborativeEditingService) {
    ConfluenceCollaborativeEditingService["Ncs"] = "NCS";
    ConfluenceCollaborativeEditingService["Synchrony"] = "SYNCHRONY";
})(ConfluenceCollaborativeEditingService = exports.ConfluenceCollaborativeEditingService || (exports.ConfluenceCollaborativeEditingService = {}));
var ConfluenceCommentStatus;
(function (ConfluenceCommentStatus) {
    ConfluenceCommentStatus["Current"] = "CURRENT";
    ConfluenceCommentStatus["Draft"] = "DRAFT";
})(ConfluenceCommentStatus = exports.ConfluenceCommentStatus || (exports.ConfluenceCommentStatus = {}));
var ConfluenceCommentType;
(function (ConfluenceCommentType) {
    ConfluenceCommentType["Footer"] = "FOOTER";
    ConfluenceCommentType["Inline"] = "INLINE";
})(ConfluenceCommentType = exports.ConfluenceCommentType || (exports.ConfluenceCommentType = {}));
var ConfluenceContentRepresentation;
(function (ConfluenceContentRepresentation) {
    ConfluenceContentRepresentation["AtlasDocFormat"] = "ATLAS_DOC_FORMAT";
    ConfluenceContentRepresentation["Editor"] = "EDITOR";
    ConfluenceContentRepresentation["Editor2"] = "EDITOR2";
    ConfluenceContentRepresentation["ExportView"] = "EXPORT_VIEW";
    ConfluenceContentRepresentation["Plain"] = "PLAIN";
    ConfluenceContentRepresentation["Raw"] = "RAW";
    ConfluenceContentRepresentation["Storage"] = "STORAGE";
    ConfluenceContentRepresentation["StyledView"] = "STYLED_VIEW";
    ConfluenceContentRepresentation["View"] = "VIEW";
    ConfluenceContentRepresentation["Wiki"] = "WIKI";
})(ConfluenceContentRepresentation = exports.ConfluenceContentRepresentation || (exports.ConfluenceContentRepresentation = {}));
var ConfluenceContentType;
(function (ConfluenceContentType) {
    ConfluenceContentType["Attachment"] = "ATTACHMENT";
    ConfluenceContentType["BlogPost"] = "BLOG_POST";
    ConfluenceContentType["Comment"] = "COMMENT";
    ConfluenceContentType["Page"] = "PAGE";
})(ConfluenceContentType = exports.ConfluenceContentType || (exports.ConfluenceContentType = {}));
var ConfluenceContributionStatus;
(function (ConfluenceContributionStatus) {
    ConfluenceContributionStatus["Current"] = "CURRENT";
    ConfluenceContributionStatus["Draft"] = "DRAFT";
    ConfluenceContributionStatus["Unknown"] = "UNKNOWN";
    ConfluenceContributionStatus["Unpublished"] = "UNPUBLISHED";
})(ConfluenceContributionStatus = exports.ConfluenceContributionStatus || (exports.ConfluenceContributionStatus = {}));
var ConfluenceInlineCommentResolutionStatus;
(function (ConfluenceInlineCommentResolutionStatus) {
    ConfluenceInlineCommentResolutionStatus["Resolved"] = "RESOLVED";
    ConfluenceInlineCommentResolutionStatus["Unresolved"] = "UNRESOLVED";
})(ConfluenceInlineCommentResolutionStatus = exports.ConfluenceInlineCommentResolutionStatus || (exports.ConfluenceInlineCommentResolutionStatus = {}));
var ConfluenceInlineTaskStatus;
(function (ConfluenceInlineTaskStatus) {
    ConfluenceInlineTaskStatus["Complete"] = "COMPLETE";
    ConfluenceInlineTaskStatus["Incomplete"] = "INCOMPLETE";
})(ConfluenceInlineTaskStatus = exports.ConfluenceInlineTaskStatus || (exports.ConfluenceInlineTaskStatus = {}));
var ConfluenceMutationContentStatus;
(function (ConfluenceMutationContentStatus) {
    ConfluenceMutationContentStatus["Current"] = "CURRENT";
    ConfluenceMutationContentStatus["Draft"] = "DRAFT";
})(ConfluenceMutationContentStatus = exports.ConfluenceMutationContentStatus || (exports.ConfluenceMutationContentStatus = {}));
var ConfluenceOperationName;
(function (ConfluenceOperationName) {
    ConfluenceOperationName["Administer"] = "ADMINISTER";
    ConfluenceOperationName["Archive"] = "ARCHIVE";
    ConfluenceOperationName["Copy"] = "COPY";
    ConfluenceOperationName["Create"] = "CREATE";
    ConfluenceOperationName["CreateSpace"] = "CREATE_SPACE";
    ConfluenceOperationName["Delete"] = "DELETE";
    ConfluenceOperationName["Export"] = "EXPORT";
    ConfluenceOperationName["Move"] = "MOVE";
    ConfluenceOperationName["Purge"] = "PURGE";
    ConfluenceOperationName["PurgeVersion"] = "PURGE_VERSION";
    ConfluenceOperationName["Read"] = "READ";
    ConfluenceOperationName["Restore"] = "RESTORE";
    ConfluenceOperationName["RestrictContent"] = "RESTRICT_CONTENT";
    ConfluenceOperationName["Update"] = "UPDATE";
    ConfluenceOperationName["Use"] = "USE";
})(ConfluenceOperationName = exports.ConfluenceOperationName || (exports.ConfluenceOperationName = {}));
var ConfluenceOperationTarget;
(function (ConfluenceOperationTarget) {
    ConfluenceOperationTarget["Application"] = "APPLICATION";
    ConfluenceOperationTarget["Attachment"] = "ATTACHMENT";
    ConfluenceOperationTarget["BlogPost"] = "BLOG_POST";
    ConfluenceOperationTarget["Comment"] = "COMMENT";
    ConfluenceOperationTarget["Page"] = "PAGE";
    ConfluenceOperationTarget["Space"] = "SPACE";
    ConfluenceOperationTarget["UserProfile"] = "USER_PROFILE";
})(ConfluenceOperationTarget = exports.ConfluenceOperationTarget || (exports.ConfluenceOperationTarget = {}));
var ConfluencePageStatus;
(function (ConfluencePageStatus) {
    ConfluencePageStatus["Archived"] = "ARCHIVED";
    ConfluencePageStatus["Current"] = "CURRENT";
    ConfluencePageStatus["Deleted"] = "DELETED";
    ConfluencePageStatus["Draft"] = "DRAFT";
    ConfluencePageStatus["Historical"] = "HISTORICAL";
    ConfluencePageStatus["Trashed"] = "TRASHED";
})(ConfluencePageStatus = exports.ConfluencePageStatus || (exports.ConfluencePageStatus = {}));
var ConfluenceSpaceSettingEditorVersion;
(function (ConfluenceSpaceSettingEditorVersion) {
    ConfluenceSpaceSettingEditorVersion["V1"] = "V1";
    ConfluenceSpaceSettingEditorVersion["V2"] = "V2";
})(ConfluenceSpaceSettingEditorVersion = exports.ConfluenceSpaceSettingEditorVersion || (exports.ConfluenceSpaceSettingEditorVersion = {}));
var ConfluenceSpaceStatus;
(function (ConfluenceSpaceStatus) {
    ConfluenceSpaceStatus["Archived"] = "ARCHIVED";
    ConfluenceSpaceStatus["Current"] = "CURRENT";
})(ConfluenceSpaceStatus = exports.ConfluenceSpaceStatus || (exports.ConfluenceSpaceStatus = {}));
var ConfluenceSpaceType;
(function (ConfluenceSpaceType) {
    ConfluenceSpaceType["Global"] = "GLOBAL";
    ConfluenceSpaceType["Personal"] = "PERSONAL";
})(ConfluenceSpaceType = exports.ConfluenceSpaceType || (exports.ConfluenceSpaceType = {}));
var ConfluenceUserType;
(function (ConfluenceUserType) {
    ConfluenceUserType["Anonymous"] = "ANONYMOUS";
    ConfluenceUserType["Known"] = "KNOWN";
})(ConfluenceUserType = exports.ConfluenceUserType || (exports.ConfluenceUserType = {}));
var ContentPlatformBooleanOperators;
(function (ContentPlatformBooleanOperators) {
    ContentPlatformBooleanOperators["And"] = "AND";
    ContentPlatformBooleanOperators["Or"] = "OR";
})(ContentPlatformBooleanOperators = exports.ContentPlatformBooleanOperators || (exports.ContentPlatformBooleanOperators = {}));
var ContentPlatformFieldNames;
(function (ContentPlatformFieldNames) {
    ContentPlatformFieldNames["Title"] = "TITLE";
    ContentPlatformFieldNames["Description"] = "DESCRIPTION";
})(ContentPlatformFieldNames = exports.ContentPlatformFieldNames || (exports.ContentPlatformFieldNames = {}));
var ContentPlatformOperators;
(function (ContentPlatformOperators) {
    ContentPlatformOperators["Any"] = "ANY";
    ContentPlatformOperators["All"] = "ALL";
})(ContentPlatformOperators = exports.ContentPlatformOperators || (exports.ContentPlatformOperators = {}));
var ContentPlatformSearchTypes;
(function (ContentPlatformSearchTypes) {
    ContentPlatformSearchTypes["Contains"] = "CONTAINS";
    ContentPlatformSearchTypes["ExactMatch"] = "EXACT_MATCH";
})(ContentPlatformSearchTypes = exports.ContentPlatformSearchTypes || (exports.ContentPlatformSearchTypes = {}));
var CustomEntityAttributeType;
(function (CustomEntityAttributeType) {
    CustomEntityAttributeType["String"] = "string";
    CustomEntityAttributeType["Boolean"] = "boolean";
    CustomEntityAttributeType["Float"] = "float";
    CustomEntityAttributeType["Integer"] = "integer";
    CustomEntityAttributeType["Any"] = "any";
})(CustomEntityAttributeType = exports.CustomEntityAttributeType || (exports.CustomEntityAttributeType = {}));
var CustomEntityIndexStatus;
(function (CustomEntityIndexStatus) {
    CustomEntityIndexStatus["Active"] = "ACTIVE";
    CustomEntityIndexStatus["Inactive"] = "INACTIVE";
    CustomEntityIndexStatus["Creating"] = "CREATING";
    CustomEntityIndexStatus["Pending"] = "PENDING";
})(CustomEntityIndexStatus = exports.CustomEntityIndexStatus || (exports.CustomEntityIndexStatus = {}));
var CustomEntityStatus;
(function (CustomEntityStatus) {
    CustomEntityStatus["Active"] = "ACTIVE";
    CustomEntityStatus["Inactive"] = "INACTIVE";
})(CustomEntityStatus = exports.CustomEntityStatus || (exports.CustomEntityStatus = {}));
var DataClassificationPolicyDecisionStatus;
(function (DataClassificationPolicyDecisionStatus) {
    DataClassificationPolicyDecisionStatus["Allowed"] = "ALLOWED";
    DataClassificationPolicyDecisionStatus["Blocked"] = "BLOCKED";
})(DataClassificationPolicyDecisionStatus = exports.DataClassificationPolicyDecisionStatus || (exports.DataClassificationPolicyDecisionStatus = {}));
var DataResidencyResponse;
(function (DataResidencyResponse) {
    DataResidencyResponse["StoredExternalToAtlassian"] = "STORED_EXTERNAL_TO_ATLASSIAN";
    DataResidencyResponse["StoredInAtlassianAndDrSupported"] = "STORED_IN_ATLASSIAN_AND_DR_SUPPORTED";
    DataResidencyResponse["AppDoesNotSupportDr"] = "APP_DOES_NOT_SUPPORT_DR";
    DataResidencyResponse["StoredInAtlassianAndDrNotSupported"] = "STORED_IN_ATLASSIAN_AND_DR_NOT_SUPPORTED";
})(DataResidencyResponse = exports.DataResidencyResponse || (exports.DataResidencyResponse = {}));
var DeploymentState;
(function (DeploymentState) {
    DeploymentState["Pending"] = "PENDING";
    DeploymentState["InProgress"] = "IN_PROGRESS";
    DeploymentState["Successful"] = "SUCCESSFUL";
    DeploymentState["Cancelled"] = "CANCELLED";
    DeploymentState["Failed"] = "FAILED";
    DeploymentState["RolledBack"] = "ROLLED_BACK";
    DeploymentState["Unknown"] = "UNKNOWN";
})(DeploymentState = exports.DeploymentState || (exports.DeploymentState = {}));
var DevOpsBuildState;
(function (DevOpsBuildState) {
    DevOpsBuildState["Pending"] = "PENDING";
    DevOpsBuildState["InProgress"] = "IN_PROGRESS";
    DevOpsBuildState["Successful"] = "SUCCESSFUL";
    DevOpsBuildState["Failed"] = "FAILED";
    DevOpsBuildState["Cancelled"] = "CANCELLED";
    DevOpsBuildState["Unknown"] = "UNKNOWN";
})(DevOpsBuildState = exports.DevOpsBuildState || (exports.DevOpsBuildState = {}));
var DevOpsDocumentCategory;
(function (DevOpsDocumentCategory) {
    DevOpsDocumentCategory["Folder"] = "FOLDER";
    DevOpsDocumentCategory["Document"] = "DOCUMENT";
    DevOpsDocumentCategory["Presentation"] = "PRESENTATION";
    DevOpsDocumentCategory["Spreadsheet"] = "SPREADSHEET";
    DevOpsDocumentCategory["Image"] = "IMAGE";
    DevOpsDocumentCategory["Audio"] = "AUDIO";
    DevOpsDocumentCategory["Video"] = "VIDEO";
    DevOpsDocumentCategory["Pdf"] = "PDF";
    DevOpsDocumentCategory["Shortcut"] = "SHORTCUT";
    DevOpsDocumentCategory["Code"] = "CODE";
    DevOpsDocumentCategory["Archive"] = "ARCHIVE";
    DevOpsDocumentCategory["Form"] = "FORM";
    DevOpsDocumentCategory["Other"] = "OTHER";
})(DevOpsDocumentCategory = exports.DevOpsDocumentCategory || (exports.DevOpsDocumentCategory = {}));
var DevOpsEnvironmentCategory;
(function (DevOpsEnvironmentCategory) {
    DevOpsEnvironmentCategory["Production"] = "PRODUCTION";
    DevOpsEnvironmentCategory["Staging"] = "STAGING";
    DevOpsEnvironmentCategory["Testing"] = "TESTING";
    DevOpsEnvironmentCategory["Development"] = "DEVELOPMENT";
    DevOpsEnvironmentCategory["Unmapped"] = "UNMAPPED";
})(DevOpsEnvironmentCategory = exports.DevOpsEnvironmentCategory || (exports.DevOpsEnvironmentCategory = {}));
var DevOpsJiraProjectType;
(function (DevOpsJiraProjectType) {
    DevOpsJiraProjectType["JiraSoftware"] = "JIRA_SOFTWARE";
    DevOpsJiraProjectType["JiraServicedesk"] = "JIRA_SERVICEDESK";
    DevOpsJiraProjectType["JiraCore"] = "JIRA_CORE";
})(DevOpsJiraProjectType = exports.DevOpsJiraProjectType || (exports.DevOpsJiraProjectType = {}));
var DevOpsMetricsCycleTimePhase;
(function (DevOpsMetricsCycleTimePhase) {
    DevOpsMetricsCycleTimePhase["CommitToPr"] = "COMMIT_TO_PR";
    DevOpsMetricsCycleTimePhase["CommitToDeployment"] = "COMMIT_TO_DEPLOYMENT";
})(DevOpsMetricsCycleTimePhase = exports.DevOpsMetricsCycleTimePhase || (exports.DevOpsMetricsCycleTimePhase = {}));
var DevOpsMetricsResolutionUnit;
(function (DevOpsMetricsResolutionUnit) {
    DevOpsMetricsResolutionUnit["Hour"] = "HOUR";
    DevOpsMetricsResolutionUnit["Day"] = "DAY";
    DevOpsMetricsResolutionUnit["Week"] = "WEEK";
})(DevOpsMetricsResolutionUnit = exports.DevOpsMetricsResolutionUnit || (exports.DevOpsMetricsResolutionUnit = {}));
var DevOpsMetricsRollupOption;
(function (DevOpsMetricsRollupOption) {
    DevOpsMetricsRollupOption["Mean"] = "MEAN";
    DevOpsMetricsRollupOption["Percentile"] = "PERCENTILE";
})(DevOpsMetricsRollupOption = exports.DevOpsMetricsRollupOption || (exports.DevOpsMetricsRollupOption = {}));
var DevOpsProviderType;
(function (DevOpsProviderType) {
    DevOpsProviderType["DevInfo"] = "DEV_INFO";
    DevOpsProviderType["Build"] = "BUILD";
    DevOpsProviderType["Deployment"] = "DEPLOYMENT";
    DevOpsProviderType["FeatureFlag"] = "FEATURE_FLAG";
    DevOpsProviderType["RemoteLinks"] = "REMOTE_LINKS";
    DevOpsProviderType["Security"] = "SECURITY";
    DevOpsProviderType["Documentation"] = "DOCUMENTATION";
})(DevOpsProviderType = exports.DevOpsProviderType || (exports.DevOpsProviderType = {}));
var DevOpsPullRequestApprovalStatus;
(function (DevOpsPullRequestApprovalStatus) {
    DevOpsPullRequestApprovalStatus["Approved"] = "APPROVED";
    DevOpsPullRequestApprovalStatus["Unapproved"] = "UNAPPROVED";
})(DevOpsPullRequestApprovalStatus = exports.DevOpsPullRequestApprovalStatus || (exports.DevOpsPullRequestApprovalStatus = {}));
var DevOpsPullRequestStatus;
(function (DevOpsPullRequestStatus) {
    DevOpsPullRequestStatus["Open"] = "OPEN";
    DevOpsPullRequestStatus["Merged"] = "MERGED";
    DevOpsPullRequestStatus["Declined"] = "DECLINED";
    DevOpsPullRequestStatus["Unknown"] = "UNKNOWN";
})(DevOpsPullRequestStatus = exports.DevOpsPullRequestStatus || (exports.DevOpsPullRequestStatus = {}));
var DevOpsRelationshipCertainty;
(function (DevOpsRelationshipCertainty) {
    DevOpsRelationshipCertainty["Explicit"] = "EXPLICIT";
    DevOpsRelationshipCertainty["Implicit"] = "IMPLICIT";
})(DevOpsRelationshipCertainty = exports.DevOpsRelationshipCertainty || (exports.DevOpsRelationshipCertainty = {}));
var DevOpsRelationshipCertaintyFilter;
(function (DevOpsRelationshipCertaintyFilter) {
    DevOpsRelationshipCertaintyFilter["Explicit"] = "EXPLICIT";
    DevOpsRelationshipCertaintyFilter["Implicit"] = "IMPLICIT";
    DevOpsRelationshipCertaintyFilter["All"] = "ALL";
})(DevOpsRelationshipCertaintyFilter = exports.DevOpsRelationshipCertaintyFilter || (exports.DevOpsRelationshipCertaintyFilter = {}));
var DevOpsRepositoryHostingProviderFilter;
(function (DevOpsRepositoryHostingProviderFilter) {
    DevOpsRepositoryHostingProviderFilter["BitbucketCloud"] = "BITBUCKET_CLOUD";
    DevOpsRepositoryHostingProviderFilter["ThirdParty"] = "THIRD_PARTY";
    DevOpsRepositoryHostingProviderFilter["All"] = "ALL";
})(DevOpsRepositoryHostingProviderFilter = exports.DevOpsRepositoryHostingProviderFilter || (exports.DevOpsRepositoryHostingProviderFilter = {}));
var DevOpsSecurityVulnerabilitySeverity;
(function (DevOpsSecurityVulnerabilitySeverity) {
    DevOpsSecurityVulnerabilitySeverity["Critical"] = "CRITICAL";
    DevOpsSecurityVulnerabilitySeverity["High"] = "HIGH";
    DevOpsSecurityVulnerabilitySeverity["Medium"] = "MEDIUM";
    DevOpsSecurityVulnerabilitySeverity["Low"] = "LOW";
    DevOpsSecurityVulnerabilitySeverity["Unknown"] = "UNKNOWN";
})(DevOpsSecurityVulnerabilitySeverity = exports.DevOpsSecurityVulnerabilitySeverity || (exports.DevOpsSecurityVulnerabilitySeverity = {}));
var DevOpsSecurityVulnerabilityStatus;
(function (DevOpsSecurityVulnerabilityStatus) {
    DevOpsSecurityVulnerabilityStatus["Open"] = "OPEN";
    DevOpsSecurityVulnerabilityStatus["Closed"] = "CLOSED";
    DevOpsSecurityVulnerabilityStatus["Ignored"] = "IGNORED";
    DevOpsSecurityVulnerabilityStatus["Unknown"] = "UNKNOWN";
})(DevOpsSecurityVulnerabilityStatus = exports.DevOpsSecurityVulnerabilityStatus || (exports.DevOpsSecurityVulnerabilityStatus = {}));
var DevOpsServiceAndJiraProjectRelationshipType;
(function (DevOpsServiceAndJiraProjectRelationshipType) {
    DevOpsServiceAndJiraProjectRelationshipType["Default"] = "DEFAULT";
    DevOpsServiceAndJiraProjectRelationshipType["ChangeManagement"] = "CHANGE_MANAGEMENT";
})(DevOpsServiceAndJiraProjectRelationshipType = exports.DevOpsServiceAndJiraProjectRelationshipType || (exports.DevOpsServiceAndJiraProjectRelationshipType = {}));
var DevOpsServiceAndRepositoryRelationshipSortBy;
(function (DevOpsServiceAndRepositoryRelationshipSortBy) {
    DevOpsServiceAndRepositoryRelationshipSortBy["LastInferredAt"] = "LAST_INFERRED_AT";
})(DevOpsServiceAndRepositoryRelationshipSortBy = exports.DevOpsServiceAndRepositoryRelationshipSortBy || (exports.DevOpsServiceAndRepositoryRelationshipSortBy = {}));
var DevOpsServiceRelationshipType;
(function (DevOpsServiceRelationshipType) {
    DevOpsServiceRelationshipType["DependsOn"] = "DEPENDS_ON";
    DevOpsServiceRelationshipType["Contains"] = "CONTAINS";
})(DevOpsServiceRelationshipType = exports.DevOpsServiceRelationshipType || (exports.DevOpsServiceRelationshipType = {}));
var DevOpsToolIntegrationType;
(function (DevOpsToolIntegrationType) {
    DevOpsToolIntegrationType["Any"] = "ANY";
    DevOpsToolIntegrationType["Exists"] = "EXISTS";
    DevOpsToolIntegrationType["App"] = "APP";
    DevOpsToolIntegrationType["Product"] = "PRODUCT";
    DevOpsToolIntegrationType["None"] = "NONE";
})(DevOpsToolIntegrationType = exports.DevOpsToolIntegrationType || (exports.DevOpsToolIntegrationType = {}));
var DevOpsToolSortOrder;
(function (DevOpsToolSortOrder) {
    DevOpsToolSortOrder["Asc"] = "ASC";
    DevOpsToolSortOrder["Desc"] = "DESC";
})(DevOpsToolSortOrder = exports.DevOpsToolSortOrder || (exports.DevOpsToolSortOrder = {}));
var DevStatusActivity;
(function (DevStatusActivity) {
    DevStatusActivity["PrOpen"] = "PR_OPEN";
    DevStatusActivity["PrMerged"] = "PR_MERGED";
    DevStatusActivity["PrDeclined"] = "PR_DECLINED";
    DevStatusActivity["BranchOpen"] = "BRANCH_OPEN";
    DevStatusActivity["Commit"] = "COMMIT";
    DevStatusActivity["Deployment"] = "DEPLOYMENT";
})(DevStatusActivity = exports.DevStatusActivity || (exports.DevStatusActivity = {}));
var EstimationType;
(function (EstimationType) {
    EstimationType["StoryPoints"] = "STORY_POINTS";
    EstimationType["OriginalEstimate"] = "ORIGINAL_ESTIMATE";
    EstimationType["IssueCount"] = "ISSUE_COUNT";
    EstimationType["CustomNumberField"] = "CUSTOM_NUMBER_FIELD";
})(EstimationType = exports.EstimationType || (exports.EstimationType = {}));
var EventKnownAvIs;
(function (EventKnownAvIs) {
    EventKnownAvIs["AviJiraIssueCreated"] = "AVI_JIRA_ISSUE_CREATED";
    EventKnownAvIs["AviJiraIssueUpdated"] = "AVI_JIRA_ISSUE_UPDATED";
    EventKnownAvIs["AviBitbucketPrCreated"] = "AVI_BITBUCKET_PR_CREATED";
})(EventKnownAvIs = exports.EventKnownAvIs || (exports.EventKnownAvIs = {}));
var EventMatchingStrategies;
(function (EventMatchingStrategies) {
    EventMatchingStrategies["JiraByCloud"] = "JIRA_BY_CLOUD";
    EventMatchingStrategies["JiraByProject"] = "JIRA_BY_PROJECT";
    EventMatchingStrategies["JiraByIssue"] = "JIRA_BY_ISSUE";
    EventMatchingStrategies["BitbucketByRepo"] = "BITBUCKET_BY_REPO";
    EventMatchingStrategies["ByAccount"] = "BY_ACCOUNT";
    EventMatchingStrategies["JiraByCloudByProjectTypeByAccount"] = "JIRA_BY_CLOUD_BY_PROJECT_TYPE_BY_ACCOUNT";
    EventMatchingStrategies["PrByProjectByRelationshipType"] = "PR_BY_PROJECT_BY_RELATIONSHIP_TYPE";
})(EventMatchingStrategies = exports.EventMatchingStrategies || (exports.EventMatchingStrategies = {}));
var ExtensionContextsFilterType;
(function (ExtensionContextsFilterType) {
    ExtensionContextsFilterType["DataClassificationTag"] = "DATA_CLASSIFICATION_TAG";
    ExtensionContextsFilterType["ExtensionType"] = "EXTENSION_TYPE";
    ExtensionContextsFilterType["PrincipalType"] = "PRINCIPAL_TYPE";
})(ExtensionContextsFilterType = exports.ExtensionContextsFilterType || (exports.ExtensionContextsFilterType = {}));
var ForgeAlertsActivityType;
(function (ForgeAlertsActivityType) {
    ForgeAlertsActivityType["AlertCreated"] = "ALERT_CREATED";
    ForgeAlertsActivityType["AlertMuted"] = "ALERT_MUTED";
    ForgeAlertsActivityType["AlertOpened"] = "ALERT_OPENED";
    ForgeAlertsActivityType["AlertResolved"] = "ALERT_RESOLVED";
    ForgeAlertsActivityType["AlertSentFiring"] = "ALERT_SENT_FIRING";
    ForgeAlertsActivityType["AlertSentResolved"] = "ALERT_SENT_RESOLVED";
    ForgeAlertsActivityType["AlertUnmuted"] = "ALERT_UNMUTED";
    ForgeAlertsActivityType["AlertUpdated"] = "ALERT_UPDATED";
})(ForgeAlertsActivityType = exports.ForgeAlertsActivityType || (exports.ForgeAlertsActivityType = {}));
var ForgeAlertsStatus;
(function (ForgeAlertsStatus) {
    ForgeAlertsStatus["Firing"] = "FIRING";
    ForgeAlertsStatus["Resolved"] = "RESOLVED";
})(ForgeAlertsStatus = exports.ForgeAlertsStatus || (exports.ForgeAlertsStatus = {}));
var ForgeAuditLogsActionType;
(function (ForgeAuditLogsActionType) {
    ForgeAuditLogsActionType["ContributorAdded"] = "CONTRIBUTOR_ADDED";
    ForgeAuditLogsActionType["ContributorRemoved"] = "CONTRIBUTOR_REMOVED";
    ForgeAuditLogsActionType["OwnershipTransferred"] = "OWNERSHIP_TRANSFERRED";
})(ForgeAuditLogsActionType = exports.ForgeAuditLogsActionType || (exports.ForgeAuditLogsActionType = {}));
var ForgeMetricsDataType;
(function (ForgeMetricsDataType) {
    ForgeMetricsDataType["DateTime"] = "DATE_TIME";
    ForgeMetricsDataType["Category"] = "CATEGORY";
    ForgeMetricsDataType["Numeric"] = "NUMERIC";
})(ForgeMetricsDataType = exports.ForgeMetricsDataType || (exports.ForgeMetricsDataType = {}));
var ForgeMetricsGroupByDimensions;
(function (ForgeMetricsGroupByDimensions) {
    ForgeMetricsGroupByDimensions["UserTier"] = "USER_TIER";
    ForgeMetricsGroupByDimensions["EnvironmentId"] = "ENVIRONMENT_ID";
    ForgeMetricsGroupByDimensions["ErrorType"] = "ERROR_TYPE";
    ForgeMetricsGroupByDimensions["Version"] = "VERSION";
    ForgeMetricsGroupByDimensions["ContextAri"] = "CONTEXT_ARI";
    ForgeMetricsGroupByDimensions["Function"] = "FUNCTION";
})(ForgeMetricsGroupByDimensions = exports.ForgeMetricsGroupByDimensions || (exports.ForgeMetricsGroupByDimensions = {}));
var ForgeMetricsLabels;
(function (ForgeMetricsLabels) {
    ForgeMetricsLabels["ForgeBackendInvocationCount"] = "FORGE_BACKEND_INVOCATION_COUNT";
    ForgeMetricsLabels["ForgeBackendInvocationErrors"] = "FORGE_BACKEND_INVOCATION_ERRORS";
    ForgeMetricsLabels["ForgeBackendInvocationLatency"] = "FORGE_BACKEND_INVOCATION_LATENCY";
})(ForgeMetricsLabels = exports.ForgeMetricsLabels || (exports.ForgeMetricsLabels = {}));
var ForgeMetricsResolutionUnit;
(function (ForgeMetricsResolutionUnit) {
    ForgeMetricsResolutionUnit["Hours"] = "HOURS";
    ForgeMetricsResolutionUnit["Minutes"] = "MINUTES";
})(ForgeMetricsResolutionUnit = exports.ForgeMetricsResolutionUnit || (exports.ForgeMetricsResolutionUnit = {}));
var ForgeMetricsSiteFilterCategory;
(function (ForgeMetricsSiteFilterCategory) {
    ForgeMetricsSiteFilterCategory["LowestSuccessRate"] = "LOWEST_SUCCESS_RATE";
    ForgeMetricsSiteFilterCategory["HighestInvocationCount"] = "HIGHEST_INVOCATION_COUNT";
    ForgeMetricsSiteFilterCategory["HighestNumberOfErrors"] = "HIGHEST_NUMBER_OF_ERRORS";
    ForgeMetricsSiteFilterCategory["HighestNumberOfUsers"] = "HIGHEST_NUMBER_OF_USERS";
    ForgeMetricsSiteFilterCategory["All"] = "ALL";
})(ForgeMetricsSiteFilterCategory = exports.ForgeMetricsSiteFilterCategory || (exports.ForgeMetricsSiteFilterCategory = {}));
var FormStatus;
(function (FormStatus) {
    FormStatus["Submitted"] = "SUBMITTED";
    FormStatus["Rejected"] = "REJECTED";
    FormStatus["Approved"] = "APPROVED";
    FormStatus["Saved"] = "SAVED";
})(FormStatus = exports.FormStatus || (exports.FormStatus = {}));
var FortifiedMetricsResolutionUnit;
(function (FortifiedMetricsResolutionUnit) {
    FortifiedMetricsResolutionUnit["Hours"] = "HOURS";
    FortifiedMetricsResolutionUnit["Minutes"] = "MINUTES";
})(FortifiedMetricsResolutionUnit = exports.FortifiedMetricsResolutionUnit || (exports.FortifiedMetricsResolutionUnit = {}));
var FunctionTriggerType;
(function (FunctionTriggerType) {
    FunctionTriggerType["Frontend"] = "FRONTEND";
    FunctionTriggerType["Manual"] = "MANUAL";
    FunctionTriggerType["Product"] = "PRODUCT";
    FunctionTriggerType["Web"] = "WEB";
})(FunctionTriggerType = exports.FunctionTriggerType || (exports.FunctionTriggerType = {}));
var GrantCheckProduct;
(function (GrantCheckProduct) {
    GrantCheckProduct["Jira"] = "JIRA";
    GrantCheckProduct["JiraServicedesk"] = "JIRA_SERVICEDESK";
    GrantCheckProduct["Confluence"] = "CONFLUENCE";
    GrantCheckProduct["Compass"] = "COMPASS";
    GrantCheckProduct["NoGrantChecks"] = "NO_GRANT_CHECKS";
})(GrantCheckProduct = exports.GrantCheckProduct || (exports.GrantCheckProduct = {}));
var HelpCenterType;
(function (HelpCenterType) {
    HelpCenterType["Advanced"] = "ADVANCED";
    HelpCenterType["Basic"] = "BASIC";
})(HelpCenterType = exports.HelpCenterType || (exports.HelpCenterType = {}));
var HelpLayoutAtomicElementKey;
(function (HelpLayoutAtomicElementKey) {
    HelpLayoutAtomicElementKey["Image"] = "IMAGE";
    HelpLayoutAtomicElementKey["Heading"] = "HEADING";
    HelpLayoutAtomicElementKey["Paragraph"] = "PARAGRAPH";
    HelpLayoutAtomicElementKey["Search"] = "SEARCH";
})(HelpLayoutAtomicElementKey = exports.HelpLayoutAtomicElementKey || (exports.HelpLayoutAtomicElementKey = {}));
var HelpLayoutCompositeElementKey;
(function (HelpLayoutCompositeElementKey) {
    HelpLayoutCompositeElementKey["LinkCard"] = "LINK_CARD";
})(HelpLayoutCompositeElementKey = exports.HelpLayoutCompositeElementKey || (exports.HelpLayoutCompositeElementKey = {}));
var HelpLayoutElementCategory;
(function (HelpLayoutElementCategory) {
    HelpLayoutElementCategory["Basic"] = "BASIC";
    HelpLayoutElementCategory["Navigation"] = "NAVIGATION";
})(HelpLayoutElementCategory = exports.HelpLayoutElementCategory || (exports.HelpLayoutElementCategory = {}));
var HelpLayoutElementKey;
(function (HelpLayoutElementKey) {
    HelpLayoutElementKey["Image"] = "IMAGE";
    HelpLayoutElementKey["Heading"] = "HEADING";
    HelpLayoutElementKey["Paragraph"] = "PARAGRAPH";
    HelpLayoutElementKey["Search"] = "SEARCH";
    HelpLayoutElementKey["LinkCard"] = "LINK_CARD";
})(HelpLayoutElementKey = exports.HelpLayoutElementKey || (exports.HelpLayoutElementKey = {}));
var HelpLayoutHeadingType;
(function (HelpLayoutHeadingType) {
    HelpLayoutHeadingType["H1"] = "h1";
    HelpLayoutHeadingType["H2"] = "h2";
    HelpLayoutHeadingType["H3"] = "h3";
    HelpLayoutHeadingType["H4"] = "h4";
    HelpLayoutHeadingType["H5"] = "h5";
    HelpLayoutHeadingType["H6"] = "h6";
})(HelpLayoutHeadingType = exports.HelpLayoutHeadingType || (exports.HelpLayoutHeadingType = {}));
var HelpObjectStoreHelpObjectType;
(function (HelpObjectStoreHelpObjectType) {
    HelpObjectStoreHelpObjectType["RequestForm"] = "REQUEST_FORM";
    HelpObjectStoreHelpObjectType["Article"] = "ARTICLE";
    HelpObjectStoreHelpObjectType["Channel"] = "CHANNEL";
})(HelpObjectStoreHelpObjectType = exports.HelpObjectStoreHelpObjectType || (exports.HelpObjectStoreHelpObjectType = {}));
var HelpObjectStoreJsmEntityType;
(function (HelpObjectStoreJsmEntityType) {
    HelpObjectStoreJsmEntityType["RequestForm"] = "REQUEST_FORM";
    HelpObjectStoreJsmEntityType["Article"] = "ARTICLE";
    HelpObjectStoreJsmEntityType["Channel"] = "CHANNEL";
})(HelpObjectStoreJsmEntityType = exports.HelpObjectStoreJsmEntityType || (exports.HelpObjectStoreJsmEntityType = {}));
var IssueDevOpsCommitChangeType;
(function (IssueDevOpsCommitChangeType) {
    IssueDevOpsCommitChangeType["Added"] = "ADDED";
    IssueDevOpsCommitChangeType["Deleted"] = "DELETED";
    IssueDevOpsCommitChangeType["Copied"] = "COPIED";
    IssueDevOpsCommitChangeType["Moved"] = "MOVED";
    IssueDevOpsCommitChangeType["Modify"] = "MODIFY";
    IssueDevOpsCommitChangeType["Modified"] = "MODIFIED";
    IssueDevOpsCommitChangeType["Unknown"] = "UNKNOWN";
})(IssueDevOpsCommitChangeType = exports.IssueDevOpsCommitChangeType || (exports.IssueDevOpsCommitChangeType = {}));
var IssueDevOpsDeploymentEnvironmentType;
(function (IssueDevOpsDeploymentEnvironmentType) {
    IssueDevOpsDeploymentEnvironmentType["Production"] = "PRODUCTION";
    IssueDevOpsDeploymentEnvironmentType["Staging"] = "STAGING";
    IssueDevOpsDeploymentEnvironmentType["Testing"] = "TESTING";
    IssueDevOpsDeploymentEnvironmentType["Development"] = "DEVELOPMENT";
    IssueDevOpsDeploymentEnvironmentType["Unmapped"] = "UNMAPPED";
})(IssueDevOpsDeploymentEnvironmentType = exports.IssueDevOpsDeploymentEnvironmentType || (exports.IssueDevOpsDeploymentEnvironmentType = {}));
var IssueDevOpsDeploymentState;
(function (IssueDevOpsDeploymentState) {
    IssueDevOpsDeploymentState["Pending"] = "PENDING";
    IssueDevOpsDeploymentState["InProgress"] = "IN_PROGRESS";
    IssueDevOpsDeploymentState["Successful"] = "SUCCESSFUL";
    IssueDevOpsDeploymentState["Cancelled"] = "CANCELLED";
    IssueDevOpsDeploymentState["Failed"] = "FAILED";
    IssueDevOpsDeploymentState["RolledBack"] = "ROLLED_BACK";
    IssueDevOpsDeploymentState["Unknown"] = "UNKNOWN";
})(IssueDevOpsDeploymentState = exports.IssueDevOpsDeploymentState || (exports.IssueDevOpsDeploymentState = {}));
var IssueDevOpsPullRequestStatus;
(function (IssueDevOpsPullRequestStatus) {
    IssueDevOpsPullRequestStatus["Open"] = "OPEN";
    IssueDevOpsPullRequestStatus["Merged"] = "MERGED";
    IssueDevOpsPullRequestStatus["Declined"] = "DECLINED";
    IssueDevOpsPullRequestStatus["Unknown"] = "UNKNOWN";
})(IssueDevOpsPullRequestStatus = exports.IssueDevOpsPullRequestStatus || (exports.IssueDevOpsPullRequestStatus = {}));
var JiraActionType;
(function (JiraActionType) {
    JiraActionType["CreateProject"] = "CREATE_PROJECT";
    JiraActionType["CreateCompanyManagedProject"] = "CREATE_COMPANY_MANAGED_PROJECT";
    JiraActionType["CreateTeamManagedProject"] = "CREATE_TEAM_MANAGED_PROJECT";
})(JiraActionType = exports.JiraActionType || (exports.JiraActionType = {}));
var JiraAttachmentsPermissions;
(function (JiraAttachmentsPermissions) {
    JiraAttachmentsPermissions["CreateAttachments"] = "CREATE_ATTACHMENTS";
    JiraAttachmentsPermissions["DeleteOwnAttachments"] = "DELETE_OWN_ATTACHMENTS";
})(JiraAttachmentsPermissions = exports.JiraAttachmentsPermissions || (exports.JiraAttachmentsPermissions = {}));
var JiraBulkEditMultiSelectFieldOptions;
(function (JiraBulkEditMultiSelectFieldOptions) {
    JiraBulkEditMultiSelectFieldOptions["Add"] = "ADD";
    JiraBulkEditMultiSelectFieldOptions["Remove"] = "REMOVE";
    JiraBulkEditMultiSelectFieldOptions["Replace"] = "REPLACE";
    JiraBulkEditMultiSelectFieldOptions["RemoveAll"] = "REMOVE_ALL";
})(JiraBulkEditMultiSelectFieldOptions = exports.JiraBulkEditMultiSelectFieldOptions || (exports.JiraBulkEditMultiSelectFieldOptions = {}));
var JiraCannedResponseScope;
(function (JiraCannedResponseScope) {
    JiraCannedResponseScope["Project"] = "PROJECT";
    JiraCannedResponseScope["Personal"] = "PERSONAL";
})(JiraCannedResponseScope = exports.JiraCannedResponseScope || (exports.JiraCannedResponseScope = {}));
var JiraCannedResponseSortOrder;
(function (JiraCannedResponseSortOrder) {
    JiraCannedResponseSortOrder["Asc"] = "ASC";
    JiraCannedResponseSortOrder["Desc"] = "DESC";
})(JiraCannedResponseSortOrder = exports.JiraCannedResponseSortOrder || (exports.JiraCannedResponseSortOrder = {}));
var JiraCascadingSelectOptionType;
(function (JiraCascadingSelectOptionType) {
    JiraCascadingSelectOptionType["Parent"] = "PARENT";
    JiraCascadingSelectOptionType["Child"] = "CHILD";
    JiraCascadingSelectOptionType["All"] = "ALL";
})(JiraCascadingSelectOptionType = exports.JiraCascadingSelectOptionType || (exports.JiraCascadingSelectOptionType = {}));
var JiraCmdbAttributeType;
(function (JiraCmdbAttributeType) {
    JiraCmdbAttributeType["Default"] = "DEFAULT";
    JiraCmdbAttributeType["ReferencedObject"] = "REFERENCED_OBJECT";
    JiraCmdbAttributeType["User"] = "USER";
    JiraCmdbAttributeType["Confluence"] = "CONFLUENCE";
    JiraCmdbAttributeType["Group"] = "GROUP";
    JiraCmdbAttributeType["Version"] = "VERSION";
    JiraCmdbAttributeType["Project"] = "PROJECT";
    JiraCmdbAttributeType["Status"] = "STATUS";
    JiraCmdbAttributeType["BitbucketRepo"] = "BITBUCKET_REPO";
    JiraCmdbAttributeType["OpsgenieTeam"] = "OPSGENIE_TEAM";
})(JiraCmdbAttributeType = exports.JiraCmdbAttributeType || (exports.JiraCmdbAttributeType = {}));
var JiraDeploymentsFeaturePrecondition;
(function (JiraDeploymentsFeaturePrecondition) {
    JiraDeploymentsFeaturePrecondition["NotAvailable"] = "NOT_AVAILABLE";
    JiraDeploymentsFeaturePrecondition["DeploymentsEmptyState"] = "DEPLOYMENTS_EMPTY_STATE";
    JiraDeploymentsFeaturePrecondition["AllSatisfied"] = "ALL_SATISFIED";
})(JiraDeploymentsFeaturePrecondition = exports.JiraDeploymentsFeaturePrecondition || (exports.JiraDeploymentsFeaturePrecondition = {}));
var JiraDevInfoConfigErrorType;
(function (JiraDevInfoConfigErrorType) {
    JiraDevInfoConfigErrorType["Unauthorized"] = "UNAUTHORIZED";
    JiraDevInfoConfigErrorType["NotConfigured"] = "NOT_CONFIGURED";
    JiraDevInfoConfigErrorType["Incapable"] = "INCAPABLE";
    JiraDevInfoConfigErrorType["UnknownConfigError"] = "UNKNOWN_CONFIG_ERROR";
})(JiraDevInfoConfigErrorType = exports.JiraDevInfoConfigErrorType || (exports.JiraDevInfoConfigErrorType = {}));
var JiraDevOpsCapability;
(function (JiraDevOpsCapability) {
    JiraDevOpsCapability["Commit"] = "COMMIT";
    JiraDevOpsCapability["Branch"] = "BRANCH";
    JiraDevOpsCapability["PullRequest"] = "PULL_REQUEST";
    JiraDevOpsCapability["Build"] = "BUILD";
    JiraDevOpsCapability["Deployment"] = "DEPLOYMENT";
    JiraDevOpsCapability["FeatureFlag"] = "FEATURE_FLAG";
    JiraDevOpsCapability["Review"] = "REVIEW";
})(JiraDevOpsCapability = exports.JiraDevOpsCapability || (exports.JiraDevOpsCapability = {}));
var JiraDevOpsIssuePanelBannerType;
(function (JiraDevOpsIssuePanelBannerType) {
    JiraDevOpsIssuePanelBannerType["IssueKeyOnboarding"] = "ISSUE_KEY_ONBOARDING";
})(JiraDevOpsIssuePanelBannerType = exports.JiraDevOpsIssuePanelBannerType || (exports.JiraDevOpsIssuePanelBannerType = {}));
var JiraDevOpsIssuePanelState;
(function (JiraDevOpsIssuePanelState) {
    JiraDevOpsIssuePanelState["Hidden"] = "HIDDEN";
    JiraDevOpsIssuePanelState["NotConnected"] = "NOT_CONNECTED";
    JiraDevOpsIssuePanelState["DevSummary"] = "DEV_SUMMARY";
})(JiraDevOpsIssuePanelState = exports.JiraDevOpsIssuePanelState || (exports.JiraDevOpsIssuePanelState = {}));
var JiraFavouriteType;
(function (JiraFavouriteType) {
    JiraFavouriteType["Project"] = "PROJECT";
})(JiraFavouriteType = exports.JiraFavouriteType || (exports.JiraFavouriteType = {}));
var JiraGrantTypeKeyEnum;
(function (JiraGrantTypeKeyEnum) {
    JiraGrantTypeKeyEnum["ProjectRole"] = "PROJECT_ROLE";
    JiraGrantTypeKeyEnum["ApplicationRole"] = "APPLICATION_ROLE";
    JiraGrantTypeKeyEnum["User"] = "USER";
    JiraGrantTypeKeyEnum["Group"] = "GROUP";
    JiraGrantTypeKeyEnum["MultiUserPicker"] = "MULTI_USER_PICKER";
    JiraGrantTypeKeyEnum["MultiGroupPicker"] = "MULTI_GROUP_PICKER";
    JiraGrantTypeKeyEnum["ServiceProjectCustomerPortalAccess"] = "SERVICE_PROJECT_CUSTOMER_PORTAL_ACCESS";
    JiraGrantTypeKeyEnum["Reporter"] = "REPORTER";
    JiraGrantTypeKeyEnum["ProjectLead"] = "PROJECT_LEAD";
    JiraGrantTypeKeyEnum["Assignee"] = "ASSIGNEE";
    JiraGrantTypeKeyEnum["AnonymousAccess"] = "ANONYMOUS_ACCESS";
    JiraGrantTypeKeyEnum["AnyLoggedinUserApplicationRole"] = "ANY_LOGGEDIN_USER_APPLICATION_ROLE";
})(JiraGrantTypeKeyEnum = exports.JiraGrantTypeKeyEnum || (exports.JiraGrantTypeKeyEnum = {}));
var JiraHomePageType;
(function (JiraHomePageType) {
    JiraHomePageType["YourWork"] = "YOUR_WORK";
    JiraHomePageType["Dashboards"] = "DASHBOARDS";
    JiraHomePageType["ProjectsDirectory"] = "PROJECTS_DIRECTORY";
    JiraHomePageType["LoginRedirect"] = "LOGIN_REDIRECT";
})(JiraHomePageType = exports.JiraHomePageType || (exports.JiraHomePageType = {}));
var JiraInstallDeploymentsBannerPrecondition;
(function (JiraInstallDeploymentsBannerPrecondition) {
    JiraInstallDeploymentsBannerPrecondition["NotAvailable"] = "NOT_AVAILABLE";
    JiraInstallDeploymentsBannerPrecondition["FeatureNotEnabled"] = "FEATURE_NOT_ENABLED";
    JiraInstallDeploymentsBannerPrecondition["DeploymentsEmptyState"] = "DEPLOYMENTS_EMPTY_STATE";
})(JiraInstallDeploymentsBannerPrecondition = exports.JiraInstallDeploymentsBannerPrecondition || (exports.JiraInstallDeploymentsBannerPrecondition = {}));
var JiraIssueDeploymentEnvironmentState;
(function (JiraIssueDeploymentEnvironmentState) {
    JiraIssueDeploymentEnvironmentState["NotDeployed"] = "NOT_DEPLOYED";
    JiraIssueDeploymentEnvironmentState["Deployed"] = "DEPLOYED";
})(JiraIssueDeploymentEnvironmentState = exports.JiraIssueDeploymentEnvironmentState || (exports.JiraIssueDeploymentEnvironmentState = {}));
var JiraIssueItemLayoutItemLocationRuleType;
(function (JiraIssueItemLayoutItemLocationRuleType) {
    JiraIssueItemLayoutItemLocationRuleType["People"] = "PEOPLE";
    JiraIssueItemLayoutItemLocationRuleType["MultilineText"] = "MULTILINE_TEXT";
    JiraIssueItemLayoutItemLocationRuleType["Timetracking"] = "TIMETRACKING";
    JiraIssueItemLayoutItemLocationRuleType["Dates"] = "DATES";
    JiraIssueItemLayoutItemLocationRuleType["Other"] = "OTHER";
})(JiraIssueItemLayoutItemLocationRuleType = exports.JiraIssueItemLayoutItemLocationRuleType || (exports.JiraIssueItemLayoutItemLocationRuleType = {}));
var JiraIssueItemSystemContainerType;
(function (JiraIssueItemSystemContainerType) {
    JiraIssueItemSystemContainerType["RequestPortal"] = "REQUEST_PORTAL";
    JiraIssueItemSystemContainerType["Content"] = "CONTENT";
    JiraIssueItemSystemContainerType["Primary"] = "PRIMARY";
    JiraIssueItemSystemContainerType["Secondary"] = "SECONDARY";
    JiraIssueItemSystemContainerType["Context"] = "CONTEXT";
    JiraIssueItemSystemContainerType["HiddenItems"] = "HIDDEN_ITEMS";
    JiraIssueItemSystemContainerType["Request"] = "REQUEST";
})(JiraIssueItemSystemContainerType = exports.JiraIssueItemSystemContainerType || (exports.JiraIssueItemSystemContainerType = {}));
var JiraIssueLifecycleState;
(function (JiraIssueLifecycleState) {
    JiraIssueLifecycleState["Active"] = "ACTIVE";
    JiraIssueLifecycleState["Archived"] = "ARCHIVED";
})(JiraIssueLifecycleState = exports.JiraIssueLifecycleState || (exports.JiraIssueLifecycleState = {}));
var JiraIssueLinkDirection;
(function (JiraIssueLinkDirection) {
    JiraIssueLinkDirection["Inward"] = "INWARD";
    JiraIssueLinkDirection["Outward"] = "OUTWARD";
})(JiraIssueLinkDirection = exports.JiraIssueLinkDirection || (exports.JiraIssueLinkDirection = {}));
var JiraIssueNavigatorSearchLayout;
(function (JiraIssueNavigatorSearchLayout) {
    JiraIssueNavigatorSearchLayout["List"] = "LIST";
    JiraIssueNavigatorSearchLayout["Detail"] = "DETAIL";
})(JiraIssueNavigatorSearchLayout = exports.JiraIssueNavigatorSearchLayout || (exports.JiraIssueNavigatorSearchLayout = {}));
var JiraIssueSearchFieldSetSelectedState;
(function (JiraIssueSearchFieldSetSelectedState) {
    JiraIssueSearchFieldSetSelectedState["All"] = "ALL";
    JiraIssueSearchFieldSetSelectedState["Selected"] = "SELECTED";
    JiraIssueSearchFieldSetSelectedState["NonSelected"] = "NON_SELECTED";
})(JiraIssueSearchFieldSetSelectedState = exports.JiraIssueSearchFieldSetSelectedState || (exports.JiraIssueSearchFieldSetSelectedState = {}));
var JiraIssueTransitionLayoutMessageType;
(function (JiraIssueTransitionLayoutMessageType) {
    JiraIssueTransitionLayoutMessageType["Error"] = "ERROR";
    JiraIssueTransitionLayoutMessageType["Warn"] = "WARN";
    JiraIssueTransitionLayoutMessageType["Info"] = "INFO";
    JiraIssueTransitionLayoutMessageType["Success"] = "SUCCESS";
})(JiraIssueTransitionLayoutMessageType = exports.JiraIssueTransitionLayoutMessageType || (exports.JiraIssueTransitionLayoutMessageType = {}));
var JiraIssueViewActivityFeedSortOrder;
(function (JiraIssueViewActivityFeedSortOrder) {
    JiraIssueViewActivityFeedSortOrder["NewestFirst"] = "NEWEST_FIRST";
    JiraIssueViewActivityFeedSortOrder["OldestFirst"] = "OLDEST_FIRST";
})(JiraIssueViewActivityFeedSortOrder = exports.JiraIssueViewActivityFeedSortOrder || (exports.JiraIssueViewActivityFeedSortOrder = {}));
var JiraIssueViewAttachmentPanelViewMode;
(function (JiraIssueViewAttachmentPanelViewMode) {
    JiraIssueViewAttachmentPanelViewMode["ListView"] = "LIST_VIEW";
    JiraIssueViewAttachmentPanelViewMode["StripView"] = "STRIP_VIEW";
})(JiraIssueViewAttachmentPanelViewMode = exports.JiraIssueViewAttachmentPanelViewMode || (exports.JiraIssueViewAttachmentPanelViewMode = {}));
var JiraIssueViewTimestampDisplayMode;
(function (JiraIssueViewTimestampDisplayMode) {
    JiraIssueViewTimestampDisplayMode["Absolute"] = "ABSOLUTE";
    JiraIssueViewTimestampDisplayMode["Relative"] = "RELATIVE";
})(JiraIssueViewTimestampDisplayMode = exports.JiraIssueViewTimestampDisplayMode || (exports.JiraIssueViewTimestampDisplayMode = {}));
var JiraIteration;
(function (JiraIteration) {
    JiraIteration["Iteration_1"] = "ITERATION_1";
    JiraIteration["Iteration_2"] = "ITERATION_2";
})(JiraIteration = exports.JiraIteration || (exports.JiraIteration = {}));
var JiraJqlBuilderSearchMode;
(function (JiraJqlBuilderSearchMode) {
    JiraJqlBuilderSearchMode["Basic"] = "BASIC";
    JiraJqlBuilderSearchMode["Advanced"] = "ADVANCED";
})(JiraJqlBuilderSearchMode = exports.JiraJqlBuilderSearchMode || (exports.JiraJqlBuilderSearchMode = {}));
var JiraJqlAutocompleteType;
(function (JiraJqlAutocompleteType) {
    JiraJqlAutocompleteType["None"] = "NONE";
    JiraJqlAutocompleteType["Component"] = "COMPONENT";
    JiraJqlAutocompleteType["Group"] = "GROUP";
    JiraJqlAutocompleteType["Issue"] = "ISSUE";
    JiraJqlAutocompleteType["Issuetype"] = "ISSUETYPE";
    JiraJqlAutocompleteType["Priority"] = "PRIORITY";
    JiraJqlAutocompleteType["Project"] = "PROJECT";
    JiraJqlAutocompleteType["Sprint"] = "SPRINT";
    JiraJqlAutocompleteType["Statuscategory"] = "STATUSCATEGORY";
    JiraJqlAutocompleteType["Status"] = "STATUS";
    JiraJqlAutocompleteType["User"] = "USER";
    JiraJqlAutocompleteType["Version"] = "VERSION";
})(JiraJqlAutocompleteType = exports.JiraJqlAutocompleteType || (exports.JiraJqlAutocompleteType = {}));
var JiraJqlBuilderMode;
(function (JiraJqlBuilderMode) {
    JiraJqlBuilderMode["Jql"] = "JQL";
    JiraJqlBuilderMode["Basic"] = "BASIC";
})(JiraJqlBuilderMode = exports.JiraJqlBuilderMode || (exports.JiraJqlBuilderMode = {}));
var JiraJqlClauseType;
(function (JiraJqlClauseType) {
    JiraJqlClauseType["Any"] = "ANY";
    JiraJqlClauseType["Where"] = "WHERE";
    JiraJqlClauseType["OrderBy"] = "ORDER_BY";
})(JiraJqlClauseType = exports.JiraJqlClauseType || (exports.JiraJqlClauseType = {}));
var JiraJqlFunctionStatus;
(function (JiraJqlFunctionStatus) {
    JiraJqlFunctionStatus["Processing"] = "PROCESSING";
    JiraJqlFunctionStatus["Finished"] = "FINISHED";
    JiraJqlFunctionStatus["Unknown"] = "UNKNOWN";
})(JiraJqlFunctionStatus = exports.JiraJqlFunctionStatus || (exports.JiraJqlFunctionStatus = {}));
var JiraJqlOperator;
(function (JiraJqlOperator) {
    JiraJqlOperator["Equals"] = "EQUALS";
    JiraJqlOperator["NotEquals"] = "NOT_EQUALS";
    JiraJqlOperator["In"] = "IN";
    JiraJqlOperator["NotIn"] = "NOT_IN";
    JiraJqlOperator["Is"] = "IS";
    JiraJqlOperator["IsNot"] = "IS_NOT";
    JiraJqlOperator["LessThan"] = "LESS_THAN";
    JiraJqlOperator["LessThanOrEqual"] = "LESS_THAN_OR_EQUAL";
    JiraJqlOperator["GreaterThan"] = "GREATER_THAN";
    JiraJqlOperator["GreaterThanOrEqual"] = "GREATER_THAN_OR_EQUAL";
    JiraJqlOperator["Contains"] = "CONTAINS";
    JiraJqlOperator["NotContains"] = "NOT_CONTAINS";
    JiraJqlOperator["WasNotIn"] = "WAS_NOT_IN";
    JiraJqlOperator["Changed"] = "CHANGED";
    JiraJqlOperator["WasIn"] = "WAS_IN";
    JiraJqlOperator["Was"] = "WAS";
    JiraJqlOperator["WasNot"] = "WAS_NOT";
})(JiraJqlOperator = exports.JiraJqlOperator || (exports.JiraJqlOperator = {}));
var JiraJqlSyntaxError;
(function (JiraJqlSyntaxError) {
    JiraJqlSyntaxError["ReservedWord"] = "RESERVED_WORD";
    JiraJqlSyntaxError["IllegalEscape"] = "ILLEGAL_ESCAPE";
    JiraJqlSyntaxError["UnfinishedString"] = "UNFINISHED_STRING";
    JiraJqlSyntaxError["IllegalCharacter"] = "ILLEGAL_CHARACTER";
    JiraJqlSyntaxError["ReservedCharacter"] = "RESERVED_CHARACTER";
    JiraJqlSyntaxError["Unknown"] = "UNKNOWN";
    JiraJqlSyntaxError["IllegalNumber"] = "ILLEGAL_NUMBER";
    JiraJqlSyntaxError["EmptyField"] = "EMPTY_FIELD";
    JiraJqlSyntaxError["EmptyFunction"] = "EMPTY_FUNCTION";
    JiraJqlSyntaxError["MissingFieldName"] = "MISSING_FIELD_NAME";
    JiraJqlSyntaxError["NoOrder"] = "NO_ORDER";
    JiraJqlSyntaxError["UnexpectedText"] = "UNEXPECTED_TEXT";
    JiraJqlSyntaxError["NoOperator"] = "NO_OPERATOR";
    JiraJqlSyntaxError["BadFieldId"] = "BAD_FIELD_ID";
    JiraJqlSyntaxError["BadPropertyId"] = "BAD_PROPERTY_ID";
    JiraJqlSyntaxError["BadFunctionArgument"] = "BAD_FUNCTION_ARGUMENT";
    JiraJqlSyntaxError["EmptyFunctionArgument"] = "EMPTY_FUNCTION_ARGUMENT";
    JiraJqlSyntaxError["MissingLogicalOperator"] = "MISSING_LOGICAL_OPERATOR";
    JiraJqlSyntaxError["BadOperator"] = "BAD_OPERATOR";
    JiraJqlSyntaxError["PredicateUnsupported"] = "PREDICATE_UNSUPPORTED";
    JiraJqlSyntaxError["OperandUnsupported"] = "OPERAND_UNSUPPORTED";
})(JiraJqlSyntaxError = exports.JiraJqlSyntaxError || (exports.JiraJqlSyntaxError = {}));
var JiraJqlViewContext;
(function (JiraJqlViewContext) {
    JiraJqlViewContext["Jwm"] = "JWM";
    JiraJqlViewContext["ShadowRequest"] = "SHADOW_REQUEST";
})(JiraJqlViewContext = exports.JiraJqlViewContext || (exports.JiraJqlViewContext = {}));
var JiraLongRunningTaskStatus;
(function (JiraLongRunningTaskStatus) {
    JiraLongRunningTaskStatus["Enqueued"] = "ENQUEUED";
    JiraLongRunningTaskStatus["Running"] = "RUNNING";
    JiraLongRunningTaskStatus["Complete"] = "COMPLETE";
    JiraLongRunningTaskStatus["Failed"] = "FAILED";
    JiraLongRunningTaskStatus["CancelRequested"] = "CANCEL_REQUESTED";
    JiraLongRunningTaskStatus["Cancelled"] = "CANCELLED";
    JiraLongRunningTaskStatus["Dead"] = "DEAD";
})(JiraLongRunningTaskStatus = exports.JiraLongRunningTaskStatus || (exports.JiraLongRunningTaskStatus = {}));
var JiraMultiValueFieldOperations;
(function (JiraMultiValueFieldOperations) {
    JiraMultiValueFieldOperations["Add"] = "ADD";
    JiraMultiValueFieldOperations["Remove"] = "REMOVE";
    JiraMultiValueFieldOperations["Set"] = "SET";
})(JiraMultiValueFieldOperations = exports.JiraMultiValueFieldOperations || (exports.JiraMultiValueFieldOperations = {}));
var JiraPermissionMessageTypeEnum;
(function (JiraPermissionMessageTypeEnum) {
    JiraPermissionMessageTypeEnum["Information"] = "INFORMATION";
    JiraPermissionMessageTypeEnum["Warning"] = "WARNING";
})(JiraPermissionMessageTypeEnum = exports.JiraPermissionMessageTypeEnum || (exports.JiraPermissionMessageTypeEnum = {}));
var JiraPermissionTagEnum;
(function (JiraPermissionTagEnum) {
    JiraPermissionTagEnum["Deprecated"] = "DEPRECATED";
    JiraPermissionTagEnum["New"] = "NEW";
})(JiraPermissionTagEnum = exports.JiraPermissionTagEnum || (exports.JiraPermissionTagEnum = {}));
var JiraPermissionType;
(function (JiraPermissionType) {
    JiraPermissionType["BrowseProjects"] = "BROWSE_PROJECTS";
    JiraPermissionType["BulkChange"] = "BULK_CHANGE";
})(JiraPermissionType = exports.JiraPermissionType || (exports.JiraPermissionType = {}));
var JiraProjectActionType;
(function (JiraProjectActionType) {
    JiraProjectActionType["EditProjectConfig"] = "EDIT_PROJECT_CONFIG";
    JiraProjectActionType["ViewIssues"] = "VIEW_ISSUES";
    JiraProjectActionType["CreateIssues"] = "CREATE_ISSUES";
    JiraProjectActionType["DeleteIssues"] = "DELETE_ISSUES";
    JiraProjectActionType["LinkIssues"] = "LINK_ISSUES";
    JiraProjectActionType["EditIssues"] = "EDIT_ISSUES";
    JiraProjectActionType["ScheduleIssues"] = "SCHEDULE_ISSUES";
})(JiraProjectActionType = exports.JiraProjectActionType || (exports.JiraProjectActionType = {}));
var JiraProjectAndRepositoryRelationshipSortBy;
(function (JiraProjectAndRepositoryRelationshipSortBy) {
    JiraProjectAndRepositoryRelationshipSortBy["LastInferredAt"] = "LAST_INFERRED_AT";
})(JiraProjectAndRepositoryRelationshipSortBy = exports.JiraProjectAndRepositoryRelationshipSortBy || (exports.JiraProjectAndRepositoryRelationshipSortBy = {}));
var JiraProjectDateTimeFormat;
(function (JiraProjectDateTimeFormat) {
    JiraProjectDateTimeFormat["Relative"] = "RELATIVE";
    JiraProjectDateTimeFormat["TimeFormat"] = "TIME_FORMAT";
    JiraProjectDateTimeFormat["DayFormat"] = "DAY_FORMAT";
    JiraProjectDateTimeFormat["CompleteDatetimeFormat"] = "COMPLETE_DATETIME_FORMAT";
    JiraProjectDateTimeFormat["DayMonthYearFormat"] = "DAY_MONTH_YEAR_FORMAT";
})(JiraProjectDateTimeFormat = exports.JiraProjectDateTimeFormat || (exports.JiraProjectDateTimeFormat = {}));
var JiraProjectPermissionCategoryEnum;
(function (JiraProjectPermissionCategoryEnum) {
    JiraProjectPermissionCategoryEnum["Projects"] = "PROJECTS";
    JiraProjectPermissionCategoryEnum["Issues"] = "ISSUES";
    JiraProjectPermissionCategoryEnum["VotersAndWatchers"] = "VOTERS_AND_WATCHERS";
    JiraProjectPermissionCategoryEnum["Comments"] = "COMMENTS";
    JiraProjectPermissionCategoryEnum["Attachments"] = "ATTACHMENTS";
    JiraProjectPermissionCategoryEnum["TimeTracking"] = "TIME_TRACKING";
    JiraProjectPermissionCategoryEnum["Other"] = "OTHER";
})(JiraProjectPermissionCategoryEnum = exports.JiraProjectPermissionCategoryEnum || (exports.JiraProjectPermissionCategoryEnum = {}));
var JiraProjectShortcutType;
(function (JiraProjectShortcutType) {
    JiraProjectShortcutType["ShortcutLink"] = "SHORTCUT_LINK";
    JiraProjectShortcutType["Repository"] = "REPOSITORY";
    JiraProjectShortcutType["Unknown"] = "UNKNOWN";
})(JiraProjectShortcutType = exports.JiraProjectShortcutType || (exports.JiraProjectShortcutType = {}));
var JiraProjectSortField;
(function (JiraProjectSortField) {
    JiraProjectSortField["Name"] = "NAME";
    JiraProjectSortField["Key"] = "KEY";
    JiraProjectSortField["Lead"] = "LEAD";
    JiraProjectSortField["Category"] = "CATEGORY";
    JiraProjectSortField["LastIssueUpdatedTime"] = "LAST_ISSUE_UPDATED_TIME";
})(JiraProjectSortField = exports.JiraProjectSortField || (exports.JiraProjectSortField = {}));
var JiraProjectStatus;
(function (JiraProjectStatus) {
    JiraProjectStatus["Active"] = "ACTIVE";
    JiraProjectStatus["Archived"] = "ARCHIVED";
    JiraProjectStatus["Deleted"] = "DELETED";
})(JiraProjectStatus = exports.JiraProjectStatus || (exports.JiraProjectStatus = {}));
var JiraProjectStyle;
(function (JiraProjectStyle) {
    JiraProjectStyle["TeamManagedProject"] = "TEAM_MANAGED_PROJECT";
    JiraProjectStyle["CompanyManagedProject"] = "COMPANY_MANAGED_PROJECT";
})(JiraProjectStyle = exports.JiraProjectStyle || (exports.JiraProjectStyle = {}));
var JiraProjectType;
(function (JiraProjectType) {
    JiraProjectType["ServiceDesk"] = "SERVICE_DESK";
    JiraProjectType["Business"] = "BUSINESS";
    JiraProjectType["Software"] = "SOFTWARE";
    JiraProjectType["ProductDiscovery"] = "PRODUCT_DISCOVERY";
})(JiraProjectType = exports.JiraProjectType || (exports.JiraProjectType = {}));
var JiraPullRequestState;
(function (JiraPullRequestState) {
    JiraPullRequestState["Open"] = "OPEN";
    JiraPullRequestState["Declined"] = "DECLINED";
    JiraPullRequestState["Merged"] = "MERGED";
})(JiraPullRequestState = exports.JiraPullRequestState || (exports.JiraPullRequestState = {}));
var JiraReleaseNotesIssueKeyConfig;
(function (JiraReleaseNotesIssueKeyConfig) {
    JiraReleaseNotesIssueKeyConfig["None"] = "NONE";
    JiraReleaseNotesIssueKeyConfig["Unlinked"] = "UNLINKED";
    JiraReleaseNotesIssueKeyConfig["Linked"] = "LINKED";
})(JiraReleaseNotesIssueKeyConfig = exports.JiraReleaseNotesIssueKeyConfig || (exports.JiraReleaseNotesIssueKeyConfig = {}));
var JiraReleasesEpicReleaseStatusFilter;
(function (JiraReleasesEpicReleaseStatusFilter) {
    JiraReleasesEpicReleaseStatusFilter["Released"] = "RELEASED";
    JiraReleasesEpicReleaseStatusFilter["ReleasedAndUnreleased"] = "RELEASED_AND_UNRELEASED";
})(JiraReleasesEpicReleaseStatusFilter = exports.JiraReleasesEpicReleaseStatusFilter || (exports.JiraReleasesEpicReleaseStatusFilter = {}));
var JiraReleasesIssueReleaseStatusFilter;
(function (JiraReleasesIssueReleaseStatusFilter) {
    JiraReleasesIssueReleaseStatusFilter["Released"] = "RELEASED";
    JiraReleasesIssueReleaseStatusFilter["Unreleased"] = "UNRELEASED";
    JiraReleasesIssueReleaseStatusFilter["ReleasedAndUnreleased"] = "RELEASED_AND_UNRELEASED";
})(JiraReleasesIssueReleaseStatusFilter = exports.JiraReleasesIssueReleaseStatusFilter || (exports.JiraReleasesIssueReleaseStatusFilter = {}));
var JiraReviewState;
(function (JiraReviewState) {
    JiraReviewState["Review"] = "REVIEW";
    JiraReviewState["Approval"] = "APPROVAL";
    JiraReviewState["Summarize"] = "SUMMARIZE";
    JiraReviewState["Rejected"] = "REJECTED";
    JiraReviewState["Closed"] = "CLOSED";
    JiraReviewState["Draft"] = "DRAFT";
    JiraReviewState["Dead"] = "DEAD";
    JiraReviewState["Unknown"] = "UNKNOWN";
})(JiraReviewState = exports.JiraReviewState || (exports.JiraReviewState = {}));
var JiraServiceManagementApprovalDecisionResponseType;
(function (JiraServiceManagementApprovalDecisionResponseType) {
    JiraServiceManagementApprovalDecisionResponseType["Approved"] = "approved";
    JiraServiceManagementApprovalDecisionResponseType["Declined"] = "declined";
    JiraServiceManagementApprovalDecisionResponseType["Pending"] = "pending";
})(JiraServiceManagementApprovalDecisionResponseType = exports.JiraServiceManagementApprovalDecisionResponseType || (exports.JiraServiceManagementApprovalDecisionResponseType = {}));
var JiraServiceManagementApprovalState;
(function (JiraServiceManagementApprovalState) {
    JiraServiceManagementApprovalState["InsufficientApprovers"] = "INSUFFICIENT_APPROVERS";
    JiraServiceManagementApprovalState["Ok"] = "OK";
})(JiraServiceManagementApprovalState = exports.JiraServiceManagementApprovalState || (exports.JiraServiceManagementApprovalState = {}));
var JiraServiceManagementCommentVisibility;
(function (JiraServiceManagementCommentVisibility) {
    JiraServiceManagementCommentVisibility["VisibleToHelpseeker"] = "VISIBLE_TO_HELPSEEKER";
    JiraServiceManagementCommentVisibility["Internal"] = "INTERNAL";
})(JiraServiceManagementCommentVisibility = exports.JiraServiceManagementCommentVisibility || (exports.JiraServiceManagementCommentVisibility = {}));
var JiraServiceManagementCreateRequestTypeFromTemplateRequestFormInputType;
(function (JiraServiceManagementCreateRequestTypeFromTemplateRequestFormInputType) {
    JiraServiceManagementCreateRequestTypeFromTemplateRequestFormInputType["FormTemplateReference"] = "FORM_TEMPLATE_REFERENCE";
    JiraServiceManagementCreateRequestTypeFromTemplateRequestFormInputType["RequestTypeTemplateReference"] = "REQUEST_TYPE_TEMPLATE_REFERENCE";
})(JiraServiceManagementCreateRequestTypeFromTemplateRequestFormInputType = exports.JiraServiceManagementCreateRequestTypeFromTemplateRequestFormInputType || (exports.JiraServiceManagementCreateRequestTypeFromTemplateRequestFormInputType = {}));
var JiraServiceManagementCreateRequestTypeFromTemplateWorkflowAction;
(function (JiraServiceManagementCreateRequestTypeFromTemplateWorkflowAction) {
    JiraServiceManagementCreateRequestTypeFromTemplateWorkflowAction["Share"] = "SHARE";
})(JiraServiceManagementCreateRequestTypeFromTemplateWorkflowAction = exports.JiraServiceManagementCreateRequestTypeFromTemplateWorkflowAction || (exports.JiraServiceManagementCreateRequestTypeFromTemplateWorkflowAction = {}));
var JiraServiceManagementCreateRequestTypeFromTemplateWorkflowInputType;
(function (JiraServiceManagementCreateRequestTypeFromTemplateWorkflowInputType) {
    JiraServiceManagementCreateRequestTypeFromTemplateWorkflowInputType["ReferenceThroughIssueType"] = "REFERENCE_THROUGH_ISSUE_TYPE";
})(JiraServiceManagementCreateRequestTypeFromTemplateWorkflowInputType = exports.JiraServiceManagementCreateRequestTypeFromTemplateWorkflowInputType || (exports.JiraServiceManagementCreateRequestTypeFromTemplateWorkflowInputType = {}));
var JiraServiceManagementMajorIncident;
(function (JiraServiceManagementMajorIncident) {
    JiraServiceManagementMajorIncident["MajorIncident"] = "MAJOR_INCIDENT";
})(JiraServiceManagementMajorIncident = exports.JiraServiceManagementMajorIncident || (exports.JiraServiceManagementMajorIncident = {}));
var JiraServiceManagementPractice;
(function (JiraServiceManagementPractice) {
    JiraServiceManagementPractice["ServiceRequest"] = "SERVICE_REQUEST";
    JiraServiceManagementPractice["IncidentManagement"] = "INCIDENT_MANAGEMENT";
    JiraServiceManagementPractice["ProblemManagement"] = "PROBLEM_MANAGEMENT";
    JiraServiceManagementPractice["ChangeManagement"] = "CHANGE_MANAGEMENT";
    JiraServiceManagementPractice["PostIncidentReview"] = "POST_INCIDENT_REVIEW";
})(JiraServiceManagementPractice = exports.JiraServiceManagementPractice || (exports.JiraServiceManagementPractice = {}));
var JiraShareableEntityGrant;
(function (JiraShareableEntityGrant) {
    JiraShareableEntityGrant["AnonymousAccess"] = "ANONYMOUS_ACCESS";
    JiraShareableEntityGrant["AnyLoggedinUserApplicationRole"] = "ANY_LOGGEDIN_USER_APPLICATION_ROLE";
    JiraShareableEntityGrant["Group"] = "GROUP";
    JiraShareableEntityGrant["Project"] = "PROJECT";
    JiraShareableEntityGrant["ProjectRole"] = "PROJECT_ROLE";
    JiraShareableEntityGrant["ProjectUnknown"] = "PROJECT_UNKNOWN";
    JiraShareableEntityGrant["User"] = "USER";
})(JiraShareableEntityGrant = exports.JiraShareableEntityGrant || (exports.JiraShareableEntityGrant = {}));
var JiraSingleValueFieldOperations;
(function (JiraSingleValueFieldOperations) {
    JiraSingleValueFieldOperations["Set"] = "SET";
})(JiraSingleValueFieldOperations = exports.JiraSingleValueFieldOperations || (exports.JiraSingleValueFieldOperations = {}));
var JiraSprintState;
(function (JiraSprintState) {
    JiraSprintState["Active"] = "ACTIVE";
    JiraSprintState["Future"] = "FUTURE";
    JiraSprintState["Closed"] = "CLOSED";
})(JiraSprintState = exports.JiraSprintState || (exports.JiraSprintState = {}));
var JiraStatusCategoryColor;
(function (JiraStatusCategoryColor) {
    JiraStatusCategoryColor["MediumGray"] = "MEDIUM_GRAY";
    JiraStatusCategoryColor["Green"] = "GREEN";
    JiraStatusCategoryColor["Yellow"] = "YELLOW";
    JiraStatusCategoryColor["Brown"] = "BROWN";
    JiraStatusCategoryColor["WarmRed"] = "WARM_RED";
    JiraStatusCategoryColor["BlueGray"] = "BLUE_GRAY";
})(JiraStatusCategoryColor = exports.JiraStatusCategoryColor || (exports.JiraStatusCategoryColor = {}));
var JiraTimeFormat;
(function (JiraTimeFormat) {
    JiraTimeFormat["Pretty"] = "PRETTY";
    JiraTimeFormat["Days"] = "DAYS";
    JiraTimeFormat["Hours"] = "HOURS";
})(JiraTimeFormat = exports.JiraTimeFormat || (exports.JiraTimeFormat = {}));
var JiraTimeUnit;
(function (JiraTimeUnit) {
    JiraTimeUnit["Minute"] = "MINUTE";
    JiraTimeUnit["Hour"] = "HOUR";
    JiraTimeUnit["Day"] = "DAY";
    JiraTimeUnit["Week"] = "WEEK";
})(JiraTimeUnit = exports.JiraTimeUnit || (exports.JiraTimeUnit = {}));
var JiraTransitionSortOption;
(function (JiraTransitionSortOption) {
    JiraTransitionSortOption["OpsBarThenStatusCategory"] = "OPS_BAR_THEN_STATUS_CATEGORY";
    JiraTransitionSortOption["OpsBar"] = "OPS_BAR";
})(JiraTransitionSortOption = exports.JiraTransitionSortOption || (exports.JiraTransitionSortOption = {}));
var JiraVersionApproverStatus;
(function (JiraVersionApproverStatus) {
    JiraVersionApproverStatus["Pending"] = "PENDING";
    JiraVersionApproverStatus["Approved"] = "APPROVED";
    JiraVersionApproverStatus["Declined"] = "DECLINED";
})(JiraVersionApproverStatus = exports.JiraVersionApproverStatus || (exports.JiraVersionApproverStatus = {}));
var JiraVersionDetailsCollapsedUi;
(function (JiraVersionDetailsCollapsedUi) {
    JiraVersionDetailsCollapsedUi["Description"] = "DESCRIPTION";
    JiraVersionDetailsCollapsedUi["RelatedWork"] = "RELATED_WORK";
    JiraVersionDetailsCollapsedUi["Issues"] = "ISSUES";
    JiraVersionDetailsCollapsedUi["ProgressCard"] = "PROGRESS_CARD";
})(JiraVersionDetailsCollapsedUi = exports.JiraVersionDetailsCollapsedUi || (exports.JiraVersionDetailsCollapsedUi = {}));
var JiraVersionIssueTableColumn;
(function (JiraVersionIssueTableColumn) {
    JiraVersionIssueTableColumn["IssueAssignee"] = "ISSUE_ASSIGNEE";
    JiraVersionIssueTableColumn["IssueStatus"] = "ISSUE_STATUS";
    JiraVersionIssueTableColumn["DevelopmentStatus"] = "DEVELOPMENT_STATUS";
    JiraVersionIssueTableColumn["BuildStatus"] = "BUILD_STATUS";
    JiraVersionIssueTableColumn["DeploymentStatus"] = "DEPLOYMENT_STATUS";
    JiraVersionIssueTableColumn["FeatureFlagStatus"] = "FEATURE_FLAG_STATUS";
    JiraVersionIssueTableColumn["MoreAction"] = "MORE_ACTION";
    JiraVersionIssueTableColumn["Warnings"] = "WARNINGS";
    JiraVersionIssueTableColumn["IssuePriority"] = "ISSUE_PRIORITY";
})(JiraVersionIssueTableColumn = exports.JiraVersionIssueTableColumn || (exports.JiraVersionIssueTableColumn = {}));
var JiraVersionIssuesFilter;
(function (JiraVersionIssuesFilter) {
    JiraVersionIssuesFilter["All"] = "ALL";
    JiraVersionIssuesFilter["Todo"] = "TODO";
    JiraVersionIssuesFilter["InProgress"] = "IN_PROGRESS";
    JiraVersionIssuesFilter["Done"] = "DONE";
    JiraVersionIssuesFilter["UnreviewedCode"] = "UNREVIEWED_CODE";
    JiraVersionIssuesFilter["OpenReview"] = "OPEN_REVIEW";
    JiraVersionIssuesFilter["OpenPullRequest"] = "OPEN_PULL_REQUEST";
    JiraVersionIssuesFilter["FailingBuild"] = "FAILING_BUILD";
})(JiraVersionIssuesFilter = exports.JiraVersionIssuesFilter || (exports.JiraVersionIssuesFilter = {}));
var JiraVersionIssuesSortField;
(function (JiraVersionIssuesSortField) {
    JiraVersionIssuesSortField["Assignee"] = "ASSIGNEE";
    JiraVersionIssuesSortField["Created"] = "CREATED";
    JiraVersionIssuesSortField["Key"] = "KEY";
    JiraVersionIssuesSortField["Priority"] = "PRIORITY";
    JiraVersionIssuesSortField["Status"] = "STATUS";
})(JiraVersionIssuesSortField = exports.JiraVersionIssuesSortField || (exports.JiraVersionIssuesSortField = {}));
var JiraVersionIssuesStatusCategories;
(function (JiraVersionIssuesStatusCategories) {
    JiraVersionIssuesStatusCategories["Done"] = "DONE";
    JiraVersionIssuesStatusCategories["InProgress"] = "IN_PROGRESS";
    JiraVersionIssuesStatusCategories["Todo"] = "TODO";
})(JiraVersionIssuesStatusCategories = exports.JiraVersionIssuesStatusCategories || (exports.JiraVersionIssuesStatusCategories = {}));
var JiraVersionRelatedWorkType;
(function (JiraVersionRelatedWorkType) {
    JiraVersionRelatedWorkType["GenericLink"] = "GENERIC_LINK";
    JiraVersionRelatedWorkType["ConfluenceReleaseNotes"] = "CONFLUENCE_RELEASE_NOTES";
    JiraVersionRelatedWorkType["NativeReleaseNotes"] = "NATIVE_RELEASE_NOTES";
})(JiraVersionRelatedWorkType = exports.JiraVersionRelatedWorkType || (exports.JiraVersionRelatedWorkType = {}));
var JiraVersionReleaseNotesType;
(function (JiraVersionReleaseNotesType) {
    JiraVersionReleaseNotesType["NativeReleaseNote"] = "NATIVE_RELEASE_NOTE";
    JiraVersionReleaseNotesType["ConfluenceReleaseNote"] = "CONFLUENCE_RELEASE_NOTE";
})(JiraVersionReleaseNotesType = exports.JiraVersionReleaseNotesType || (exports.JiraVersionReleaseNotesType = {}));
var JiraVersionStatus;
(function (JiraVersionStatus) {
    JiraVersionStatus["Released"] = "RELEASED";
    JiraVersionStatus["Unreleased"] = "UNRELEASED";
    JiraVersionStatus["Archived"] = "ARCHIVED";
})(JiraVersionStatus = exports.JiraVersionStatus || (exports.JiraVersionStatus = {}));
var JiraVersionWarningCategories;
(function (JiraVersionWarningCategories) {
    JiraVersionWarningCategories["UnreviewedCode"] = "UNREVIEWED_CODE";
    JiraVersionWarningCategories["OpenReview"] = "OPEN_REVIEW";
    JiraVersionWarningCategories["OpenPullRequest"] = "OPEN_PULL_REQUEST";
    JiraVersionWarningCategories["FailingBuild"] = "FAILING_BUILD";
})(JiraVersionWarningCategories = exports.JiraVersionWarningCategories || (exports.JiraVersionWarningCategories = {}));
var JiraVersionWarningConfigState;
(function (JiraVersionWarningConfigState) {
    JiraVersionWarningConfigState["Enabled"] = "ENABLED";
    JiraVersionWarningConfigState["Disabled"] = "DISABLED";
    JiraVersionWarningConfigState["NotApplicable"] = "NOT_APPLICABLE";
})(JiraVersionWarningConfigState = exports.JiraVersionWarningConfigState || (exports.JiraVersionWarningConfigState = {}));
var JiraVotesOperations;
(function (JiraVotesOperations) {
    JiraVotesOperations["Add"] = "ADD";
    JiraVotesOperations["Remove"] = "REMOVE";
})(JiraVotesOperations = exports.JiraVotesOperations || (exports.JiraVotesOperations = {}));
var JiraWatchesOperations;
(function (JiraWatchesOperations) {
    JiraWatchesOperations["Add"] = "ADD";
    JiraWatchesOperations["Remove"] = "REMOVE";
})(JiraWatchesOperations = exports.JiraWatchesOperations || (exports.JiraWatchesOperations = {}));
var LicenseOverrideState;
(function (LicenseOverrideState) {
    LicenseOverrideState["Active"] = "ACTIVE";
    LicenseOverrideState["Inactive"] = "INACTIVE";
    LicenseOverrideState["Trial"] = "TRIAL";
})(LicenseOverrideState = exports.LicenseOverrideState || (exports.LicenseOverrideState = {}));
var LifecycleStage;
(function (LifecycleStage) {
    LifecycleStage["Staging"] = "STAGING";
    LifecycleStage["Experimental"] = "EXPERIMENTAL";
    LifecycleStage["Beta"] = "BETA";
    LifecycleStage["Production"] = "PRODUCTION";
})(LifecycleStage = exports.LifecycleStage || (exports.LifecycleStage = {}));
var MarketplaceAppPaymentModel;
(function (MarketplaceAppPaymentModel) {
    MarketplaceAppPaymentModel["Free"] = "FREE";
    MarketplaceAppPaymentModel["PaidViaPartner"] = "PAID_VIA_PARTNER";
    MarketplaceAppPaymentModel["PaidViaAtlassian"] = "PAID_VIA_ATLASSIAN";
})(MarketplaceAppPaymentModel = exports.MarketplaceAppPaymentModel || (exports.MarketplaceAppPaymentModel = {}));
var MarketplaceAppPermission;
(function (MarketplaceAppPermission) {
    MarketplaceAppPermission["ManageAppDetails"] = "MANAGE_APP_DETAILS";
})(MarketplaceAppPermission = exports.MarketplaceAppPermission || (exports.MarketplaceAppPermission = {}));
var MarketplaceAppVersionVisibility;
(function (MarketplaceAppVersionVisibility) {
    MarketplaceAppVersionVisibility["Private"] = "PRIVATE";
    MarketplaceAppVersionVisibility["Public"] = "PUBLIC";
})(MarketplaceAppVersionVisibility = exports.MarketplaceAppVersionVisibility || (exports.MarketplaceAppVersionVisibility = {}));
var MarketplaceBillingCycle;
(function (MarketplaceBillingCycle) {
    MarketplaceBillingCycle["Annual"] = "ANNUAL";
    MarketplaceBillingCycle["Monthly"] = "MONTHLY";
})(MarketplaceBillingCycle = exports.MarketplaceBillingCycle || (exports.MarketplaceBillingCycle = {}));
var MarketplaceCloudFortifiedStatus;
(function (MarketplaceCloudFortifiedStatus) {
    MarketplaceCloudFortifiedStatus["Applied"] = "APPLIED";
    MarketplaceCloudFortifiedStatus["Approved"] = "APPROVED";
    MarketplaceCloudFortifiedStatus["Rejected"] = "REJECTED";
    MarketplaceCloudFortifiedStatus["NotAParticipant"] = "NOT_A_PARTICIPANT";
})(MarketplaceCloudFortifiedStatus = exports.MarketplaceCloudFortifiedStatus || (exports.MarketplaceCloudFortifiedStatus = {}));
var MarketplaceEntityStatus;
(function (MarketplaceEntityStatus) {
    MarketplaceEntityStatus["Active"] = "ACTIVE";
    MarketplaceEntityStatus["Archived"] = "ARCHIVED";
})(MarketplaceEntityStatus = exports.MarketplaceEntityStatus || (exports.MarketplaceEntityStatus = {}));
var MarketplaceListingStatus;
(function (MarketplaceListingStatus) {
    MarketplaceListingStatus["Private"] = "PRIVATE";
    MarketplaceListingStatus["Public"] = "PUBLIC";
    MarketplaceListingStatus["Submitted"] = "SUBMITTED";
    MarketplaceListingStatus["ReadyToLaunch"] = "READY_TO_LAUNCH";
    MarketplaceListingStatus["Rejected"] = "REJECTED";
})(MarketplaceListingStatus = exports.MarketplaceListingStatus || (exports.MarketplaceListingStatus = {}));
var MarketplaceLocation;
(function (MarketplaceLocation) {
    MarketplaceLocation["Website"] = "WEBSITE";
    MarketplaceLocation["InProduct"] = "IN_PRODUCT";
})(MarketplaceLocation = exports.MarketplaceLocation || (exports.MarketplaceLocation = {}));
var MarketplacePartnerSupportHolidayFrequency;
(function (MarketplacePartnerSupportHolidayFrequency) {
    MarketplacePartnerSupportHolidayFrequency["OneTime"] = "ONE_TIME";
    MarketplacePartnerSupportHolidayFrequency["Annual"] = "ANNUAL";
})(MarketplacePartnerSupportHolidayFrequency = exports.MarketplacePartnerSupportHolidayFrequency || (exports.MarketplacePartnerSupportHolidayFrequency = {}));
var MarketplacePartnerTierType;
(function (MarketplacePartnerTierType) {
    MarketplacePartnerTierType["Silver"] = "SILVER";
    MarketplacePartnerTierType["Gold"] = "GOLD";
    MarketplacePartnerTierType["Platinum"] = "PLATINUM";
})(MarketplacePartnerTierType = exports.MarketplacePartnerTierType || (exports.MarketplacePartnerTierType = {}));
var MarketplacePartnerType;
(function (MarketplacePartnerType) {
    MarketplacePartnerType["AtlassianInternal"] = "ATLASSIAN_INTERNAL";
})(MarketplacePartnerType = exports.MarketplacePartnerType || (exports.MarketplacePartnerType = {}));
var MarketplacePricingPlanStatus;
(function (MarketplacePricingPlanStatus) {
    MarketplacePricingPlanStatus["Live"] = "LIVE";
    MarketplacePricingPlanStatus["Pending"] = "PENDING";
    MarketplacePricingPlanStatus["Draft"] = "DRAFT";
})(MarketplacePricingPlanStatus = exports.MarketplacePricingPlanStatus || (exports.MarketplacePricingPlanStatus = {}));
var MarketplacePricingTierMode;
(function (MarketplacePricingTierMode) {
    MarketplacePricingTierMode["Graduated"] = "GRADUATED";
    MarketplacePricingTierMode["Volume"] = "VOLUME";
})(MarketplacePricingTierMode = exports.MarketplacePricingTierMode || (exports.MarketplacePricingTierMode = {}));
var MarketplacePricingTierPolicy;
(function (MarketplacePricingTierPolicy) {
    MarketplacePricingTierPolicy["Block"] = "BLOCK";
    MarketplacePricingTierPolicy["PerUnit"] = "PER_UNIT";
})(MarketplacePricingTierPolicy = exports.MarketplacePricingTierPolicy || (exports.MarketplacePricingTierPolicy = {}));
var MarketplacePricingTierType;
(function (MarketplacePricingTierType) {
    MarketplacePricingTierType["UserTiered"] = "USER_TIERED";
    MarketplacePricingTierType["RemoteAgentTiered"] = "REMOTE_AGENT_TIERED";
})(MarketplacePricingTierType = exports.MarketplacePricingTierType || (exports.MarketplacePricingTierType = {}));
var MarketplaceProgramStatus;
(function (MarketplaceProgramStatus) {
    MarketplaceProgramStatus["Applied"] = "APPLIED";
    MarketplaceProgramStatus["Approved"] = "APPROVED";
    MarketplaceProgramStatus["Rejected"] = "REJECTED";
    MarketplaceProgramStatus["NotAParticipant"] = "NOT_A_PARTICIPANT";
})(MarketplaceProgramStatus = exports.MarketplaceProgramStatus || (exports.MarketplaceProgramStatus = {}));
var MembershipRole;
(function (MembershipRole) {
    MembershipRole["Regular"] = "REGULAR";
    MembershipRole["Admin"] = "ADMIN";
})(MembershipRole = exports.MembershipRole || (exports.MembershipRole = {}));
var MembershipSetting;
(function (MembershipSetting) {
    MembershipSetting["Open"] = "OPEN";
    MembershipSetting["MemberInvite"] = "MEMBER_INVITE";
    MembershipSetting["AdminInvite"] = "ADMIN_INVITE";
})(MembershipSetting = exports.MembershipSetting || (exports.MembershipSetting = {}));
var MembershipState;
(function (MembershipState) {
    MembershipState["FullMember"] = "FULL_MEMBER";
    MembershipState["Invited"] = "INVITED";
    MembershipState["Alumni"] = "ALUMNI";
    MembershipState["RequestingToJoin"] = "REQUESTING_TO_JOIN";
})(MembershipState = exports.MembershipState || (exports.MembershipState = {}));
var NadelHydrationTemplate;
(function (NadelHydrationTemplate) {
    NadelHydrationTemplate["NadelPlaceholder"] = "NADEL_PLACEHOLDER";
})(NadelHydrationTemplate = exports.NadelHydrationTemplate || (exports.NadelHydrationTemplate = {}));
var NlpDisclaimer;
(function (NlpDisclaimer) {
    NlpDisclaimer["WhoQuestion"] = "WHO_QUESTION";
})(NlpDisclaimer = exports.NlpDisclaimer || (exports.NlpDisclaimer = {}));
var NlpErrorState;
(function (NlpErrorState) {
    NlpErrorState["NoAnswer"] = "NO_ANSWER";
    NlpErrorState["SubjectiveQuery"] = "SUBJECTIVE_QUERY";
    NlpErrorState["AcceptableUseViolations"] = "ACCEPTABLE_USE_VIOLATIONS";
})(NlpErrorState = exports.NlpErrorState || (exports.NlpErrorState = {}));
var NlpSearchResultType;
(function (NlpSearchResultType) {
    NlpSearchResultType["Page"] = "page";
    NlpSearchResultType["Blogpost"] = "blogpost";
})(NlpSearchResultType = exports.NlpSearchResultType || (exports.NlpSearchResultType = {}));
var PartnerBtfLicenseType;
(function (PartnerBtfLicenseType) {
    PartnerBtfLicenseType["Academic"] = "ACADEMIC";
    PartnerBtfLicenseType["Commercial"] = "COMMERCIAL";
    PartnerBtfLicenseType["Evaluation"] = "EVALUATION";
    PartnerBtfLicenseType["Starter"] = "STARTER";
})(PartnerBtfLicenseType = exports.PartnerBtfLicenseType || (exports.PartnerBtfLicenseType = {}));
var PartnerCloudLicenseType;
(function (PartnerCloudLicenseType) {
    PartnerCloudLicenseType["Academic"] = "ACADEMIC";
    PartnerCloudLicenseType["Commercial"] = "COMMERCIAL";
    PartnerCloudLicenseType["Community"] = "COMMUNITY";
    PartnerCloudLicenseType["Demonstration"] = "DEMONSTRATION";
    PartnerCloudLicenseType["Developer"] = "DEVELOPER";
    PartnerCloudLicenseType["Evaluation"] = "EVALUATION";
    PartnerCloudLicenseType["Free"] = "FREE";
    PartnerCloudLicenseType["OpenSource"] = "OPEN_SOURCE";
    PartnerCloudLicenseType["Starter"] = "STARTER";
})(PartnerCloudLicenseType = exports.PartnerCloudLicenseType || (exports.PartnerCloudLicenseType = {}));
var PartnerCurrency;
(function (PartnerCurrency) {
    PartnerCurrency["Jpy"] = "JPY";
    PartnerCurrency["Usd"] = "USD";
})(PartnerCurrency = exports.PartnerCurrency || (exports.PartnerCurrency = {}));
var PlanModeDestination;
(function (PlanModeDestination) {
    PlanModeDestination["Board"] = "BOARD";
    PlanModeDestination["Backlog"] = "BACKLOG";
    PlanModeDestination["Sprint"] = "SPRINT";
})(PlanModeDestination = exports.PlanModeDestination || (exports.PlanModeDestination = {}));
var PolarisCommentKind;
(function (PolarisCommentKind) {
    PolarisCommentKind["View"] = "VIEW";
    PolarisCommentKind["PlayContribution"] = "PLAY_CONTRIBUTION";
})(PolarisCommentKind = exports.PolarisCommentKind || (exports.PolarisCommentKind = {}));
var PolarisFieldType;
(function (PolarisFieldType) {
    PolarisFieldType["PolarisIdeaStringField"] = "PolarisIdeaStringField";
    PolarisFieldType["PolarisIdeaDateTimeField"] = "PolarisIdeaDateTimeField";
    PolarisFieldType["PolarisIdeaDateField"] = "PolarisIdeaDateField";
    PolarisFieldType["PolarisIdeaUserField"] = "PolarisIdeaUserField";
    PolarisFieldType["PolarisIdeaUsersField"] = "PolarisIdeaUsersField";
    PolarisFieldType["PolarisIdeaOptionField"] = "PolarisIdeaOptionField";
    PolarisFieldType["PolarisIdeaOptionsField"] = "PolarisIdeaOptionsField";
    PolarisFieldType["PolarisIdeaLabelsField"] = "PolarisIdeaLabelsField";
    PolarisFieldType["PolarisIdeaNumberField"] = "PolarisIdeaNumberField";
    PolarisFieldType["PolarisIdeaExternalReferenceField"] = "PolarisIdeaExternalReferenceField";
    PolarisFieldType["PolarisIdeaExternalReferencePropertyField"] = "PolarisIdeaExternalReferencePropertyField";
    PolarisFieldType["PolarisIdeaIntervalField"] = "PolarisIdeaIntervalField";
    PolarisFieldType["PolarisIdeaReactionsField"] = "PolarisIdeaReactionsField";
    PolarisFieldType["PolarisIdeaPlayField"] = "PolarisIdeaPlayField";
})(PolarisFieldType = exports.PolarisFieldType || (exports.PolarisFieldType = {}));
var PolarisPlayKind;
(function (PolarisPlayKind) {
    PolarisPlayKind["PolarisBudgetAllocationPlay"] = "PolarisBudgetAllocationPlay";
})(PolarisPlayKind = exports.PolarisPlayKind || (exports.PolarisPlayKind = {}));
var PolarisRefreshError;
(function (PolarisRefreshError) {
    PolarisRefreshError["NeedAuth"] = "NEED_AUTH";
    PolarisRefreshError["InvalidSnippet"] = "INVALID_SNIPPET";
    PolarisRefreshError["NotFound"] = "NOT_FOUND";
    PolarisRefreshError["InternalError"] = "INTERNAL_ERROR";
})(PolarisRefreshError = exports.PolarisRefreshError || (exports.PolarisRefreshError = {}));
var PolarisResolvedObjectAuthType;
(function (PolarisResolvedObjectAuthType) {
    PolarisResolvedObjectAuthType["Oauth2"] = "OAUTH2";
    PolarisResolvedObjectAuthType["ApiKey"] = "API_KEY";
})(PolarisResolvedObjectAuthType = exports.PolarisResolvedObjectAuthType || (exports.PolarisResolvedObjectAuthType = {}));
var PolarisSnippetPropertyKind;
(function (PolarisSnippetPropertyKind) {
    PolarisSnippetPropertyKind["Number"] = "NUMBER";
    PolarisSnippetPropertyKind["Rating"] = "RATING";
    PolarisSnippetPropertyKind["Labels"] = "LABELS";
})(PolarisSnippetPropertyKind = exports.PolarisSnippetPropertyKind || (exports.PolarisSnippetPropertyKind = {}));
var PolarisSortOrder;
(function (PolarisSortOrder) {
    PolarisSortOrder["Asc"] = "ASC";
    PolarisSortOrder["Desc"] = "DESC";
})(PolarisSortOrder = exports.PolarisSortOrder || (exports.PolarisSortOrder = {}));
var PolarisTimelineMode;
(function (PolarisTimelineMode) {
    PolarisTimelineMode["Months"] = "MONTHS";
    PolarisTimelineMode["Quarters"] = "QUARTERS";
    PolarisTimelineMode["Years"] = "YEARS";
})(PolarisTimelineMode = exports.PolarisTimelineMode || (exports.PolarisTimelineMode = {}));
var PolarisValueOperator;
(function (PolarisValueOperator) {
    PolarisValueOperator["Gt"] = "GT";
    PolarisValueOperator["Lt"] = "LT";
    PolarisValueOperator["Gte"] = "GTE";
    PolarisValueOperator["Lte"] = "LTE";
    PolarisValueOperator["Eq"] = "EQ";
})(PolarisValueOperator = exports.PolarisValueOperator || (exports.PolarisValueOperator = {}));
var PolarisViewFieldRollupType;
(function (PolarisViewFieldRollupType) {
    PolarisViewFieldRollupType["Avg"] = "AVG";
    PolarisViewFieldRollupType["Count"] = "COUNT";
    PolarisViewFieldRollupType["Empty"] = "EMPTY";
    PolarisViewFieldRollupType["Filled"] = "FILLED";
    PolarisViewFieldRollupType["Max"] = "MAX";
    PolarisViewFieldRollupType["Median"] = "MEDIAN";
    PolarisViewFieldRollupType["Min"] = "MIN";
    PolarisViewFieldRollupType["Range"] = "RANGE";
    PolarisViewFieldRollupType["Sum"] = "SUM";
})(PolarisViewFieldRollupType = exports.PolarisViewFieldRollupType || (exports.PolarisViewFieldRollupType = {}));
var PolarisViewFilterKind;
(function (PolarisViewFilterKind) {
    PolarisViewFilterKind["FieldIdentity"] = "FIELD_IDENTITY";
    PolarisViewFilterKind["FieldNumeric"] = "FIELD_NUMERIC";
    PolarisViewFilterKind["Text"] = "TEXT";
    PolarisViewFilterKind["Interval"] = "INTERVAL";
})(PolarisViewFilterKind = exports.PolarisViewFilterKind || (exports.PolarisViewFilterKind = {}));
var PolarisViewFilterOperator;
(function (PolarisViewFilterOperator) {
    PolarisViewFilterOperator["Lt"] = "LT";
    PolarisViewFilterOperator["Lte"] = "LTE";
    PolarisViewFilterOperator["Gt"] = "GT";
    PolarisViewFilterOperator["Gte"] = "GTE";
    PolarisViewFilterOperator["Eq"] = "EQ";
    PolarisViewFilterOperator["Neq"] = "NEQ";
    PolarisViewFilterOperator["StartBeforeNow"] = "START_BEFORE_NOW";
    PolarisViewFilterOperator["StartAfterNow"] = "START_AFTER_NOW";
    PolarisViewFilterOperator["EndBeforeNow"] = "END_BEFORE_NOW";
    PolarisViewFilterOperator["EndAfterNow"] = "END_AFTER_NOW";
})(PolarisViewFilterOperator = exports.PolarisViewFilterOperator || (exports.PolarisViewFilterOperator = {}));
var PolarisViewLayoutType;
(function (PolarisViewLayoutType) {
    PolarisViewLayoutType["Detailed"] = "DETAILED";
    PolarisViewLayoutType["Compact"] = "COMPACT";
})(PolarisViewLayoutType = exports.PolarisViewLayoutType || (exports.PolarisViewLayoutType = {}));
var PolarisViewSetType;
(function (PolarisViewSetType) {
    PolarisViewSetType["Capture"] = "CAPTURE";
    PolarisViewSetType["Prioritize"] = "PRIORITIZE";
    PolarisViewSetType["Deliver"] = "DELIVER";
    PolarisViewSetType["System"] = "SYSTEM";
    PolarisViewSetType["Custom"] = "CUSTOM";
    PolarisViewSetType["Single"] = "SINGLE";
    PolarisViewSetType["Section"] = "SECTION";
})(PolarisViewSetType = exports.PolarisViewSetType || (exports.PolarisViewSetType = {}));
var PolarisViewSortMode;
(function (PolarisViewSortMode) {
    PolarisViewSortMode["ProjectRank"] = "PROJECT_RANK";
    PolarisViewSortMode["ViewRank"] = "VIEW_RANK";
    PolarisViewSortMode["FieldsSort"] = "FIELDS_SORT";
})(PolarisViewSortMode = exports.PolarisViewSortMode || (exports.PolarisViewSortMode = {}));
var PolarisVisualizationType;
(function (PolarisVisualizationType) {
    PolarisVisualizationType["Table"] = "TABLE";
    PolarisVisualizationType["Board"] = "BOARD";
    PolarisVisualizationType["Twoxtwo"] = "TWOXTWO";
    PolarisVisualizationType["Matrix"] = "MATRIX";
    PolarisVisualizationType["Timeline"] = "TIMELINE";
})(PolarisVisualizationType = exports.PolarisVisualizationType || (exports.PolarisVisualizationType = {}));
var PrincipalType;
(function (PrincipalType) {
    PrincipalType["Unlicensed"] = "UNLICENSED";
    PrincipalType["Anonymous"] = "ANONYMOUS";
    PrincipalType["Customer"] = "CUSTOMER";
})(PrincipalType = exports.PrincipalType || (exports.PrincipalType = {}));
var RateLimitingCurrency;
(function (RateLimitingCurrency) {
    RateLimitingCurrency["TestingService"] = "TESTING_SERVICE";
    RateLimitingCurrency["TrelloCurrency"] = "TRELLO_CURRENCY";
    RateLimitingCurrency["DevopsContainerRelationshipsReadCurrency"] = "DEVOPS_CONTAINER_RELATIONSHIPS_READ_CURRENCY";
    RateLimitingCurrency["DevopsContainerRelationshipsWriteCurrency"] = "DEVOPS_CONTAINER_RELATIONSHIPS_WRITE_CURRENCY";
    RateLimitingCurrency["NaturalLanguageToJqlCurrency"] = "NATURAL_LANGUAGE_TO_JQL_CURRENCY";
    RateLimitingCurrency["TeamsCurrency"] = "TEAMS_CURRENCY";
    RateLimitingCurrency["TeamSearchCurrency"] = "TEAM_SEARCH_CURRENCY";
    RateLimitingCurrency["TeamMembersCurrency"] = "TEAM_MEMBERS_CURRENCY";
    RateLimitingCurrency["PolarisCurrency"] = "POLARIS_CURRENCY";
    RateLimitingCurrency["PolarisReactionCurrency"] = "POLARIS_REACTION_CURRENCY";
    RateLimitingCurrency["PolarisViewCurrency"] = "POLARIS_VIEW_CURRENCY";
    RateLimitingCurrency["PolarisRankingCurrency"] = "POLARIS_RANKING_CURRENCY";
    RateLimitingCurrency["PolarisPlayCurrency"] = "POLARIS_PLAY_CURRENCY";
    RateLimitingCurrency["PolarisInsightCurrency"] = "POLARIS_INSIGHT_CURRENCY";
    RateLimitingCurrency["PolarisSnippetCurrency"] = "POLARIS_SNIPPET_CURRENCY";
    RateLimitingCurrency["PolarisProjectConfigCurrency"] = "POLARIS_PROJECT_CONFIG_CURRENCY";
    RateLimitingCurrency["PolarisFieldCurrency"] = "POLARIS_FIELD_CURRENCY";
    RateLimitingCurrency["PolarisViewsetCurrency"] = "POLARIS_VIEWSET_CURRENCY";
    RateLimitingCurrency["PolarisCommentCurrency"] = "POLARIS_COMMENT_CURRENCY";
    RateLimitingCurrency["PolarisUnfurlCurrency"] = "POLARIS_UNFURL_CURRENCY";
    RateLimitingCurrency["PolarisIdeaTemplateCurrency"] = "POLARIS_IDEA_TEMPLATE_CURRENCY";
    RateLimitingCurrency["PolarisIdeaCurrency"] = "POLARIS_IDEA_CURRENCY";
    RateLimitingCurrency["PolarisOnboardingCurrency"] = "POLARIS_ONBOARDING_CURRENCY";
    RateLimitingCurrency["PolarisBetaUserCurrency"] = "POLARIS_BETA_USER_CURRENCY";
    RateLimitingCurrency["PolarisProjectQueryCurrency"] = "POLARIS_PROJECT_QUERY_CURRENCY";
    RateLimitingCurrency["PolarisViewArrangementInfoQueryCurrency"] = "POLARIS_VIEW_ARRANGEMENT_INFO_QUERY_CURRENCY";
    RateLimitingCurrency["PolarisViewQueryCurrency"] = "POLARIS_VIEW_QUERY_CURRENCY";
    RateLimitingCurrency["PolarisInsightQueryCurrency"] = "POLARIS_INSIGHT_QUERY_CURRENCY";
    RateLimitingCurrency["PolarisInsightsQueryCurrency"] = "POLARIS_INSIGHTS_QUERY_CURRENCY";
    RateLimitingCurrency["PolarisInsightsWithErrorsQueryCurrency"] = "POLARIS_INSIGHTS_WITH_ERRORS_QUERY_CURRENCY";
    RateLimitingCurrency["PolarisLabelsQueryCurrency"] = "POLARIS_LABELS_QUERY_CURRENCY";
    RateLimitingCurrency["PolarisTermsConsentQueryCurrency"] = "POLARIS_TERMS_CONSENT_QUERY_CURRENCY";
    RateLimitingCurrency["PolarisSnippetPropertiesConfigQueryCurrency"] = "POLARIS_SNIPPET_PROPERTIES_CONFIG_QUERY_CURRENCY";
    RateLimitingCurrency["PolarisCollabTokenQueryCurrency"] = "POLARIS_COLLAB_TOKEN_QUERY_CURRENCY";
    RateLimitingCurrency["PolarisIdeaTemplatesQueryCurrency"] = "POLARIS_IDEA_TEMPLATES_QUERY_CURRENCY";
    RateLimitingCurrency["CompassSynchronizeLinkAssociationsCurrency"] = "COMPASS_SYNCHRONIZE_LINK_ASSOCIATIONS_CURRENCY";
    RateLimitingCurrency["HelpObjectStoreCurrency"] = "HELP_OBJECT_STORE_CURRENCY";
    RateLimitingCurrency["ForgeMetricsCurrency"] = "FORGE_METRICS_CURRENCY";
    RateLimitingCurrency["ExportMetricsCurrency"] = "EXPORT_METRICS_CURRENCY";
    RateLimitingCurrency["DevopsServiceReadCurrency"] = "DEVOPS_SERVICE_READ_CURRENCY";
    RateLimitingCurrency["DevopsServiceWriteCurrency"] = "DEVOPS_SERVICE_WRITE_CURRENCY";
    RateLimitingCurrency["TeamSearchV2Currency"] = "TEAM_SEARCH_V2_CURRENCY";
    RateLimitingCurrency["TeamV2Currency"] = "TEAM_V2_CURRENCY";
    RateLimitingCurrency["TeamMembersV2Currency"] = "TEAM_MEMBERS_V2_CURRENCY";
    RateLimitingCurrency["HelpLayoutCurrency"] = "HELP_LAYOUT_CURRENCY";
    RateLimitingCurrency["ForgeAuditLogsCurrency"] = "FORGE_AUDIT_LOGS_CURRENCY";
    RateLimitingCurrency["ForgeAppContributorCurrency"] = "FORGE_APP_CONTRIBUTOR_CURRENCY";
    RateLimitingCurrency["HelpCenterCurrency"] = "HELP_CENTER_CURRENCY";
    RateLimitingCurrency["ForgeAlertsCurrency"] = "FORGE_ALERTS_CURRENCY";
})(RateLimitingCurrency = exports.RateLimitingCurrency || (exports.RateLimitingCurrency = {}));
var RoadmapChildIssuePlanningMode;
(function (RoadmapChildIssuePlanningMode) {
    RoadmapChildIssuePlanningMode["Date"] = "DATE";
    RoadmapChildIssuePlanningMode["Sprint"] = "SPRINT";
    RoadmapChildIssuePlanningMode["Disabled"] = "DISABLED";
})(RoadmapChildIssuePlanningMode = exports.RoadmapChildIssuePlanningMode || (exports.RoadmapChildIssuePlanningMode = {}));
var RoadmapEpicView;
(function (RoadmapEpicView) {
    RoadmapEpicView["All"] = "ALL";
    RoadmapEpicView["Completed"] = "COMPLETED";
    RoadmapEpicView["Incomplete"] = "INCOMPLETE";
})(RoadmapEpicView = exports.RoadmapEpicView || (exports.RoadmapEpicView = {}));
var RoadmapLevelOneView;
(function (RoadmapLevelOneView) {
    RoadmapLevelOneView["Complete12M"] = "COMPLETE12M";
    RoadmapLevelOneView["Complete9M"] = "COMPLETE9M";
    RoadmapLevelOneView["Complete6M"] = "COMPLETE6M";
    RoadmapLevelOneView["Complete3M"] = "COMPLETE3M";
    RoadmapLevelOneView["Complete1M"] = "COMPLETE1M";
    RoadmapLevelOneView["Incomplete"] = "INCOMPLETE";
})(RoadmapLevelOneView = exports.RoadmapLevelOneView || (exports.RoadmapLevelOneView = {}));
var RoadmapPaletteColor;
(function (RoadmapPaletteColor) {
    RoadmapPaletteColor["Purple"] = "PURPLE";
    RoadmapPaletteColor["Blue"] = "BLUE";
    RoadmapPaletteColor["Green"] = "GREEN";
    RoadmapPaletteColor["Teal"] = "TEAL";
    RoadmapPaletteColor["Yellow"] = "YELLOW";
    RoadmapPaletteColor["Orange"] = "ORANGE";
    RoadmapPaletteColor["Grey"] = "GREY";
    RoadmapPaletteColor["DarkPurple"] = "DARK_PURPLE";
    RoadmapPaletteColor["DarkBlue"] = "DARK_BLUE";
    RoadmapPaletteColor["DarkGreen"] = "DARK_GREEN";
    RoadmapPaletteColor["DarkTeal"] = "DARK_TEAL";
    RoadmapPaletteColor["DarkYellow"] = "DARK_YELLOW";
    RoadmapPaletteColor["DarkOrange"] = "DARK_ORANGE";
    RoadmapPaletteColor["DarkGrey"] = "DARK_GREY";
})(RoadmapPaletteColor = exports.RoadmapPaletteColor || (exports.RoadmapPaletteColor = {}));
var RoadmapRankPosition;
(function (RoadmapRankPosition) {
    RoadmapRankPosition["Before"] = "BEFORE";
    RoadmapRankPosition["After"] = "AFTER";
})(RoadmapRankPosition = exports.RoadmapRankPosition || (exports.RoadmapRankPosition = {}));
var RoadmapSprintState;
(function (RoadmapSprintState) {
    RoadmapSprintState["Closed"] = "CLOSED";
    RoadmapSprintState["Active"] = "ACTIVE";
    RoadmapSprintState["Future"] = "FUTURE";
})(RoadmapSprintState = exports.RoadmapSprintState || (exports.RoadmapSprintState = {}));
var RoadmapTimelineMode;
(function (RoadmapTimelineMode) {
    RoadmapTimelineMode["Weeks"] = "WEEKS";
    RoadmapTimelineMode["Months"] = "MONTHS";
    RoadmapTimelineMode["Quarters"] = "QUARTERS";
})(RoadmapTimelineMode = exports.RoadmapTimelineMode || (exports.RoadmapTimelineMode = {}));
var RoadmapVersionStatus;
(function (RoadmapVersionStatus) {
    RoadmapVersionStatus["Released"] = "RELEASED";
    RoadmapVersionStatus["Unreleased"] = "UNRELEASED";
    RoadmapVersionStatus["Archived"] = "ARCHIVED";
})(RoadmapVersionStatus = exports.RoadmapVersionStatus || (exports.RoadmapVersionStatus = {}));
var Scope;
(function (Scope) {
    Scope["ManageOrg"] = "MANAGE_ORG";
    Scope["ManageOrgPublicApis"] = "MANAGE_ORG_PUBLIC_APIS";
    Scope["AuthConfluenceUser"] = "AUTH_CONFLUENCE_USER";
    Scope["ManageDirectory"] = "MANAGE_DIRECTORY";
    Scope["ReadMe"] = "READ_ME";
    Scope["ReadAccount"] = "READ_ACCOUNT";
    Scope["ViewUserprofile"] = "VIEW_USERPROFILE";
    Scope["IdentityAtlassianExternal"] = "IDENTITY_ATLASSIAN_EXTERNAL";
    Scope["CompassAtlassianExternal"] = "COMPASS_ATLASSIAN_EXTERNAL";
    Scope["ReadCompassComponent"] = "READ_COMPASS_COMPONENT";
    Scope["WriteCompassComponent"] = "WRITE_COMPASS_COMPONENT";
    Scope["ReadCompassScorecard"] = "READ_COMPASS_SCORECARD";
    Scope["WriteCompassScorecard"] = "WRITE_COMPASS_SCORECARD";
    Scope["ReadCompassEvent"] = "READ_COMPASS_EVENT";
    Scope["WriteCompassEvent"] = "WRITE_COMPASS_EVENT";
    Scope["ReadCompassMetric"] = "READ_COMPASS_METRIC";
    Scope["WriteCompassMetric"] = "WRITE_COMPASS_METRIC";
    Scope["ConfluenceAtlassianExternal"] = "CONFLUENCE_ATLASSIAN_EXTERNAL";
    Scope["ReadConfluenceContentAnalytics"] = "READ_CONFLUENCE_CONTENT_ANALYTICS";
    Scope["ReadConfluenceAuditLog"] = "READ_CONFLUENCE_AUDIT_LOG";
    Scope["WriteConfluenceAuditLog"] = "WRITE_CONFLUENCE_AUDIT_LOG";
    Scope["ReadConfluenceConfiguration"] = "READ_CONFLUENCE_CONFIGURATION";
    Scope["WriteConfluenceConfiguration"] = "WRITE_CONFLUENCE_CONFIGURATION";
    Scope["ReadConfluencePage"] = "READ_CONFLUENCE_PAGE";
    Scope["WriteConfluencePage"] = "WRITE_CONFLUENCE_PAGE";
    Scope["DeleteConfluencePage"] = "DELETE_CONFLUENCE_PAGE";
    Scope["ReadConfluenceBlogpost"] = "READ_CONFLUENCE_BLOGPOST";
    Scope["WriteConfluenceBlogpost"] = "WRITE_CONFLUENCE_BLOGPOST";
    Scope["DeleteConfluenceBlogpost"] = "DELETE_CONFLUENCE_BLOGPOST";
    Scope["ReadConfluenceCustomContent"] = "READ_CONFLUENCE_CUSTOM_CONTENT";
    Scope["WriteConfluenceCustomContent"] = "WRITE_CONFLUENCE_CUSTOM_CONTENT";
    Scope["DeleteConfluenceCustomContent"] = "DELETE_CONFLUENCE_CUSTOM_CONTENT";
    Scope["ReadConfluenceAttachment"] = "READ_CONFLUENCE_ATTACHMENT";
    Scope["WriteConfluenceAttachment"] = "WRITE_CONFLUENCE_ATTACHMENT";
    Scope["DeleteConfluenceAttachment"] = "DELETE_CONFLUENCE_ATTACHMENT";
    Scope["ReadConfluenceComment"] = "READ_CONFLUENCE_COMMENT";
    Scope["WriteConfluenceComment"] = "WRITE_CONFLUENCE_COMMENT";
    Scope["DeleteConfluenceComment"] = "DELETE_CONFLUENCE_COMMENT";
    Scope["ReadConfluenceTemplate"] = "READ_CONFLUENCE_TEMPLATE";
    Scope["WriteConfluenceTemplate"] = "WRITE_CONFLUENCE_TEMPLATE";
    Scope["ReadConfluenceLabel"] = "READ_CONFLUENCE_LABEL";
    Scope["WriteConfluenceLabel"] = "WRITE_CONFLUENCE_LABEL";
    Scope["ReadConfluenceContentPermission"] = "READ_CONFLUENCE_CONTENT_PERMISSION";
    Scope["ReadConfluenceContentProperty"] = "READ_CONFLUENCE_CONTENT_PROPERTY";
    Scope["WriteConfluenceContentProperty"] = "WRITE_CONFLUENCE_CONTENT_PROPERTY";
    Scope["ReadConfluenceContentRestriction"] = "READ_CONFLUENCE_CONTENT_RESTRICTION";
    Scope["WriteConfluenceContentRestriction"] = "WRITE_CONFLUENCE_CONTENT_RESTRICTION";
    Scope["ReadConfluenceContentMetadata"] = "READ_CONFLUENCE_CONTENT_METADATA";
    Scope["ReadConfluenceWatcher"] = "READ_CONFLUENCE_WATCHER";
    Scope["WriteConfluenceWatcher"] = "WRITE_CONFLUENCE_WATCHER";
    Scope["ReadConfluenceGroup"] = "READ_CONFLUENCE_GROUP";
    Scope["WriteConfluenceGroup"] = "WRITE_CONFLUENCE_GROUP";
    Scope["ReadConfluenceInlineTask"] = "READ_CONFLUENCE_INLINE_TASK";
    Scope["WriteConfluenceInlineTask"] = "WRITE_CONFLUENCE_INLINE_TASK";
    Scope["ReadConfluenceRelation"] = "READ_CONFLUENCE_RELATION";
    Scope["WriteConfluenceRelation"] = "WRITE_CONFLUENCE_RELATION";
    Scope["ReadConfluenceSpace"] = "READ_CONFLUENCE_SPACE";
    Scope["WriteConfluenceSpace"] = "WRITE_CONFLUENCE_SPACE";
    Scope["DeleteConfluenceSpace"] = "DELETE_CONFLUENCE_SPACE";
    Scope["ReadConfluenceSpacePermission"] = "READ_CONFLUENCE_SPACE_PERMISSION";
    Scope["WriteConfluenceSpacePermission"] = "WRITE_CONFLUENCE_SPACE_PERMISSION";
    Scope["ReadConfluenceSpaceProperty"] = "READ_CONFLUENCE_SPACE_PROPERTY";
    Scope["WriteConfluenceSpaceProperty"] = "WRITE_CONFLUENCE_SPACE_PROPERTY";
    Scope["ReadConfluenceUserProperty"] = "READ_CONFLUENCE_USER_PROPERTY";
    Scope["WriteConfluenceUserProperty"] = "WRITE_CONFLUENCE_USER_PROPERTY";
    Scope["ReadConfluenceSpaceSetting"] = "READ_CONFLUENCE_SPACE_SETTING";
    Scope["WriteConfluenceSpaceSetting"] = "WRITE_CONFLUENCE_SPACE_SETTING";
    Scope["ReadConfluenceUser"] = "READ_CONFLUENCE_USER";
    Scope["ManageApp"] = "MANAGE_APP";
    Scope["StorageApp"] = "STORAGE_APP";
    Scope["ReadJiraUser"] = "READ_JIRA_USER";
    Scope["ReadJiraWork"] = "READ_JIRA_WORK";
    Scope["WriteJiraWork"] = "WRITE_JIRA_WORK";
    Scope["ManageJiraProject"] = "MANAGE_JIRA_PROJECT";
    Scope["ManageJiraConfiguration"] = "MANAGE_JIRA_CONFIGURATION";
    Scope["JiraAtlassianExternal"] = "JIRA_ATLASSIAN_EXTERNAL";
    Scope["ManageJiraDataProvider"] = "MANAGE_JIRA_DATA_PROVIDER";
    Scope["ManageJiraWebhook"] = "MANAGE_JIRA_WEBHOOK";
    Scope["ApplicationRoleRead"] = "APPLICATION_ROLE_READ";
    Scope["AuditLogRead"] = "AUDIT_LOG_READ";
    Scope["AsyncTaskDelete"] = "ASYNC_TASK_DELETE";
    Scope["AttachmentDelete"] = "ATTACHMENT_DELETE";
    Scope["AttachmentRead"] = "ATTACHMENT_READ";
    Scope["AttachmentWrite"] = "ATTACHMENT_WRITE";
    Scope["AvatarDelete"] = "AVATAR_DELETE";
    Scope["AvatarRead"] = "AVATAR_READ";
    Scope["AvatarWrite"] = "AVATAR_WRITE";
    Scope["CommentDelete"] = "COMMENT_DELETE";
    Scope["CommentPropertyDelete"] = "COMMENT_PROPERTY_DELETE";
    Scope["CommentPropertyRead"] = "COMMENT_PROPERTY_READ";
    Scope["CommentPropertyWrite"] = "COMMENT_PROPERTY_WRITE";
    Scope["CommentRead"] = "COMMENT_READ";
    Scope["CommentWrite"] = "COMMENT_WRITE";
    Scope["CustomFieldContextualConfigurationRead"] = "CUSTOM_FIELD_CONTEXTUAL_CONFIGURATION_READ";
    Scope["CustomFieldContextualConfigurationWrite"] = "CUSTOM_FIELD_CONTEXTUAL_CONFIGURATION_WRITE";
    Scope["DashboardDelete"] = "DASHBOARD_DELETE";
    Scope["DashboardPropertyDelete"] = "DASHBOARD_PROPERTY_DELETE";
    Scope["DashboardPropertyRead"] = "DASHBOARD_PROPERTY_READ";
    Scope["DashboardPropertyWrite"] = "DASHBOARD_PROPERTY_WRITE";
    Scope["DashboardRead"] = "DASHBOARD_READ";
    Scope["DashboardWrite"] = "DASHBOARD_WRITE";
    Scope["FieldConfigurationSchemeDelete"] = "FIELD_CONFIGURATION_SCHEME_DELETE";
    Scope["FieldConfigurationSchemeRead"] = "FIELD_CONFIGURATION_SCHEME_READ";
    Scope["FieldConfigurationSchemeWrite"] = "FIELD_CONFIGURATION_SCHEME_WRITE";
    Scope["FieldConfigurationDelete"] = "FIELD_CONFIGURATION_DELETE";
    Scope["FieldConfigurationRead"] = "FIELD_CONFIGURATION_READ";
    Scope["FieldConfigurationWrite"] = "FIELD_CONFIGURATION_WRITE";
    Scope["FieldDefaultValueRead"] = "FIELD_DEFAULT_VALUE_READ";
    Scope["FieldDefaultValueWrite"] = "FIELD_DEFAULT_VALUE_WRITE";
    Scope["FieldDelete"] = "FIELD_DELETE";
    Scope["FieldOptionsRead"] = "FIELD_OPTIONS_READ";
    Scope["FieldOptionDelete"] = "FIELD_OPTION_DELETE";
    Scope["FieldOptionRead"] = "FIELD_OPTION_READ";
    Scope["FieldOptionWrite"] = "FIELD_OPTION_WRITE";
    Scope["FieldRead"] = "FIELD_READ";
    Scope["FieldWrite"] = "FIELD_WRITE";
    Scope["FilterColumnDelete"] = "FILTER_COLUMN_DELETE";
    Scope["FilterColumnRead"] = "FILTER_COLUMN_READ";
    Scope["FilterColumnWrite"] = "FILTER_COLUMN_WRITE";
    Scope["FilterDefaultShareScopeRead"] = "FILTER_DEFAULT_SHARE_SCOPE_READ";
    Scope["FilterDefaultShareScopeWrite"] = "FILTER_DEFAULT_SHARE_SCOPE_WRITE";
    Scope["FilterDelete"] = "FILTER_DELETE";
    Scope["FilterRead"] = "FILTER_READ";
    Scope["FilterWrite"] = "FILTER_WRITE";
    Scope["GroupDelete"] = "GROUP_DELETE";
    Scope["GroupRead"] = "GROUP_READ";
    Scope["GroupWrite"] = "GROUP_WRITE";
    Scope["InstanceConfigurationRead"] = "INSTANCE_CONFIGURATION_READ";
    Scope["InstanceConfigurationWrite"] = "INSTANCE_CONFIGURATION_WRITE";
    Scope["IssueAdjustmentsRead"] = "ISSUE_ADJUSTMENTS_READ";
    Scope["IssueAdjustmentsWrite"] = "ISSUE_ADJUSTMENTS_WRITE";
    Scope["IssueAdjustmentsDelete"] = "ISSUE_ADJUSTMENTS_DELETE";
    Scope["IssueEventRead"] = "ISSUE_EVENT_READ";
    Scope["IssueFieldValuesRead"] = "ISSUE_FIELD_VALUES_READ";
    Scope["IssueChangelogRead"] = "ISSUE_CHANGELOG_READ";
    Scope["IssueDelete"] = "ISSUE_DELETE";
    Scope["IssueDetailsRead"] = "ISSUE_DETAILS_READ";
    Scope["IssueLinkDelete"] = "ISSUE_LINK_DELETE";
    Scope["IssueLinkTypeDelete"] = "ISSUE_LINK_TYPE_DELETE";
    Scope["IssueLinkTypeRead"] = "ISSUE_LINK_TYPE_READ";
    Scope["IssueLinkTypeWrite"] = "ISSUE_LINK_TYPE_WRITE";
    Scope["IssueLinkRead"] = "ISSUE_LINK_READ";
    Scope["IssueLinkWrite"] = "ISSUE_LINK_WRITE";
    Scope["IssuePropertyDelete"] = "ISSUE_PROPERTY_DELETE";
    Scope["IssuePropertyRead"] = "ISSUE_PROPERTY_READ";
    Scope["IssuePropertyWrite"] = "ISSUE_PROPERTY_WRITE";
    Scope["IssueRead"] = "ISSUE_READ";
    Scope["IssueRemoteLinkDelete"] = "ISSUE_REMOTE_LINK_DELETE";
    Scope["IssueRemoteLinkRead"] = "ISSUE_REMOTE_LINK_READ";
    Scope["IssueRemoteLinkWrite"] = "ISSUE_REMOTE_LINK_WRITE";
    Scope["IssueSecurityLevelRead"] = "ISSUE_SECURITY_LEVEL_READ";
    Scope["IssueSecuritySchemeRead"] = "ISSUE_SECURITY_SCHEME_READ";
    Scope["IssueStatusRead"] = "ISSUE_STATUS_READ";
    Scope["IssueTimeTrackingRead"] = "ISSUE_TIME_TRACKING_READ";
    Scope["IssueTimeTrackingWrite"] = "ISSUE_TIME_TRACKING_WRITE";
    Scope["IssueTransitionRead"] = "ISSUE_TRANSITION_READ";
    Scope["IssueTypeDelete"] = "ISSUE_TYPE_DELETE";
    Scope["IssueTypeHierarchyRead"] = "ISSUE_TYPE_HIERARCHY_READ";
    Scope["IssueTypePropertyDelete"] = "ISSUE_TYPE_PROPERTY_DELETE";
    Scope["IssueTypePropertyRead"] = "ISSUE_TYPE_PROPERTY_READ";
    Scope["IssueTypePropertyWrite"] = "ISSUE_TYPE_PROPERTY_WRITE";
    Scope["IssueTypeRead"] = "ISSUE_TYPE_READ";
    Scope["IssueTypeSchemeDelete"] = "ISSUE_TYPE_SCHEME_DELETE";
    Scope["IssueTypeSchemeRead"] = "ISSUE_TYPE_SCHEME_READ";
    Scope["IssueTypeSchemeWrite"] = "ISSUE_TYPE_SCHEME_WRITE";
    Scope["IssueTypeScreenSchemeDelete"] = "ISSUE_TYPE_SCREEN_SCHEME_DELETE";
    Scope["IssueTypeScreenSchemeRead"] = "ISSUE_TYPE_SCREEN_SCHEME_READ";
    Scope["IssueTypeScreenSchemeWrite"] = "ISSUE_TYPE_SCREEN_SCHEME_WRITE";
    Scope["IssueTypeWrite"] = "ISSUE_TYPE_WRITE";
    Scope["IssueVotesRead"] = "ISSUE_VOTES_READ";
    Scope["IssueVoteRead"] = "ISSUE_VOTE_READ";
    Scope["IssueVoteWrite"] = "ISSUE_VOTE_WRITE";
    Scope["IssueWatcherRead"] = "ISSUE_WATCHER_READ";
    Scope["IssueWatcherWrite"] = "ISSUE_WATCHER_WRITE";
    Scope["IssueWorklogDelete"] = "ISSUE_WORKLOG_DELETE";
    Scope["IssueWorklogPropertyDelete"] = "ISSUE_WORKLOG_PROPERTY_DELETE";
    Scope["IssueWorklogPropertyRead"] = "ISSUE_WORKLOG_PROPERTY_READ";
    Scope["IssueWorklogPropertyWrite"] = "ISSUE_WORKLOG_PROPERTY_WRITE";
    Scope["IssueWorklogRead"] = "ISSUE_WORKLOG_READ";
    Scope["IssueWorklogWrite"] = "ISSUE_WORKLOG_WRITE";
    Scope["IssueWrite"] = "ISSUE_WRITE";
    Scope["IssueMetaRead"] = "ISSUE_META_READ";
    Scope["JqlRead"] = "JQL_READ";
    Scope["JqlValidate"] = "JQL_VALIDATE";
    Scope["LabelRead"] = "LABEL_READ";
    Scope["LicenseRead"] = "LICENSE_READ";
    Scope["NotificationSchemeRead"] = "NOTIFICATION_SCHEME_READ";
    Scope["NotificationSend"] = "NOTIFICATION_SEND";
    Scope["PermissionDelete"] = "PERMISSION_DELETE";
    Scope["PermissionRead"] = "PERMISSION_READ";
    Scope["PermissionSchemeDelete"] = "PERMISSION_SCHEME_DELETE";
    Scope["PermissionSchemeRead"] = "PERMISSION_SCHEME_READ";
    Scope["PermissionSchemeWrite"] = "PERMISSION_SCHEME_WRITE";
    Scope["PermissionWrite"] = "PERMISSION_WRITE";
    Scope["PriorityRead"] = "PRIORITY_READ";
    Scope["ProjectAvatarDelete"] = "PROJECT_AVATAR_DELETE";
    Scope["ProjectAvatarRead"] = "PROJECT_AVATAR_READ";
    Scope["ProjectAvatarWrite"] = "PROJECT_AVATAR_WRITE";
    Scope["ProjectCategoryDelete"] = "PROJECT_CATEGORY_DELETE";
    Scope["ProjectCategoryRead"] = "PROJECT_CATEGORY_READ";
    Scope["ProjectCategoryWrite"] = "PROJECT_CATEGORY_WRITE";
    Scope["ProjectComponentDelete"] = "PROJECT_COMPONENT_DELETE";
    Scope["ProjectComponentRead"] = "PROJECT_COMPONENT_READ";
    Scope["ProjectComponentWrite"] = "PROJECT_COMPONENT_WRITE";
    Scope["ProjectEmailRead"] = "PROJECT_EMAIL_READ";
    Scope["ProjectEmailWrite"] = "PROJECT_EMAIL_WRITE";
    Scope["ProjectFeatureRead"] = "PROJECT_FEATURE_READ";
    Scope["ProjectFeatureWrite"] = "PROJECT_FEATURE_WRITE";
    Scope["ProjectPropertyDelete"] = "PROJECT_PROPERTY_DELETE";
    Scope["ProjectPropertyRead"] = "PROJECT_PROPERTY_READ";
    Scope["ProjectPropertyWrite"] = "PROJECT_PROPERTY_WRITE";
    Scope["ProjectRoleDelete"] = "PROJECT_ROLE_DELETE";
    Scope["ProjectRoleRead"] = "PROJECT_ROLE_READ";
    Scope["ProjectRoleWrite"] = "PROJECT_ROLE_WRITE";
    Scope["ProjectTypeRead"] = "PROJECT_TYPE_READ";
    Scope["ProjectVersionDelete"] = "PROJECT_VERSION_DELETE";
    Scope["ProjectVersionRead"] = "PROJECT_VERSION_READ";
    Scope["ProjectVersionWrite"] = "PROJECT_VERSION_WRITE";
    Scope["ProjectDelete"] = "PROJECT_DELETE";
    Scope["ProjectRead"] = "PROJECT_READ";
    Scope["ProjectWrite"] = "PROJECT_WRITE";
    Scope["ResolutionRead"] = "RESOLUTION_READ";
    Scope["ScreenableFieldDelete"] = "SCREENABLE_FIELD_DELETE";
    Scope["ScreenableFieldRead"] = "SCREENABLE_FIELD_READ";
    Scope["ScreenableFieldWrite"] = "SCREENABLE_FIELD_WRITE";
    Scope["ScreenDelete"] = "SCREEN_DELETE";
    Scope["ScreenFieldRead"] = "SCREEN_FIELD_READ";
    Scope["ScreenRead"] = "SCREEN_READ";
    Scope["ScreenSchemeDelete"] = "SCREEN_SCHEME_DELETE";
    Scope["ScreenSchemeRead"] = "SCREEN_SCHEME_READ";
    Scope["ScreenSchemeWrite"] = "SCREEN_SCHEME_WRITE";
    Scope["ScreenTabDelete"] = "SCREEN_TAB_DELETE";
    Scope["ScreenTabRead"] = "SCREEN_TAB_READ";
    Scope["ScreenTabWrite"] = "SCREEN_TAB_WRITE";
    Scope["ScreenWrite"] = "SCREEN_WRITE";
    Scope["StatusRead"] = "STATUS_READ";
    Scope["UserColumnsRead"] = "USER_COLUMNS_READ";
    Scope["UserConfigurationDelete"] = "USER_CONFIGURATION_DELETE";
    Scope["UserConfigurationRead"] = "USER_CONFIGURATION_READ";
    Scope["UserConfigurationWrite"] = "USER_CONFIGURATION_WRITE";
    Scope["UserPropertyDelete"] = "USER_PROPERTY_DELETE";
    Scope["UserPropertyRead"] = "USER_PROPERTY_READ";
    Scope["UserPropertyWrite"] = "USER_PROPERTY_WRITE";
    Scope["UserRead"] = "USER_READ";
    Scope["WebhookRead"] = "WEBHOOK_READ";
    Scope["WebhookWrite"] = "WEBHOOK_WRITE";
    Scope["WebhookDelete"] = "WEBHOOK_DELETE";
    Scope["WorkflowDelete"] = "WORKFLOW_DELETE";
    Scope["WorkflowPropertyDelete"] = "WORKFLOW_PROPERTY_DELETE";
    Scope["WorkflowPropertyRead"] = "WORKFLOW_PROPERTY_READ";
    Scope["WorkflowPropertyWrite"] = "WORKFLOW_PROPERTY_WRITE";
    Scope["WorkflowRead"] = "WORKFLOW_READ";
    Scope["WorkflowSchemeDelete"] = "WORKFLOW_SCHEME_DELETE";
    Scope["WorkflowSchemeRead"] = "WORKFLOW_SCHEME_READ";
    Scope["WorkflowSchemeWrite"] = "WORKFLOW_SCHEME_WRITE";
    Scope["WorkflowWrite"] = "WORKFLOW_WRITE";
    Scope["JiraExpressionsRead"] = "JIRA_EXPRESSIONS_READ";
    Scope["ReadServicedeskRequest"] = "READ_SERVICEDESK_REQUEST";
    Scope["WriteServicedeskRequest"] = "WRITE_SERVICEDESK_REQUEST";
    Scope["ManageServicedeskCustomer"] = "MANAGE_SERVICEDESK_CUSTOMER";
    Scope["ReadCustomer"] = "READ_CUSTOMER";
    Scope["WriteCustomer"] = "WRITE_CUSTOMER";
    Scope["ReadOrganization"] = "READ_ORGANIZATION";
    Scope["WriteOrganization"] = "WRITE_ORGANIZATION";
    Scope["DeleteOrganization"] = "DELETE_ORGANIZATION";
    Scope["ReadOrganizationUser"] = "READ_ORGANIZATION_USER";
    Scope["WriteOrganizationUser"] = "WRITE_ORGANIZATION_USER";
    Scope["DeleteOrganizationUser"] = "DELETE_ORGANIZATION_USER";
    Scope["ReadOrganizationProperty"] = "READ_ORGANIZATION_PROPERTY";
    Scope["WriteOrganizationProperty"] = "WRITE_ORGANIZATION_PROPERTY";
    Scope["DeleteOrganizationProperty"] = "DELETE_ORGANIZATION_PROPERTY";
    Scope["ReadServicedesk"] = "READ_SERVICEDESK";
    Scope["WriteServicedesk"] = "WRITE_SERVICEDESK";
    Scope["ReadServicedeskOrganization"] = "READ_SERVICEDESK_ORGANIZATION";
    Scope["WriteServicedeskOrganization"] = "WRITE_SERVICEDESK_ORGANIZATION";
    Scope["DeleteServicedeskOrganization"] = "DELETE_SERVICEDESK_ORGANIZATION";
    Scope["ReadServicedeskCustomer"] = "READ_SERVICEDESK_CUSTOMER";
    Scope["WriteServicedeskCustomer"] = "WRITE_SERVICEDESK_CUSTOMER";
    Scope["DeleteServicedeskCustomer"] = "DELETE_SERVICEDESK_CUSTOMER";
    Scope["ReadServicedeskProperty"] = "READ_SERVICEDESK_PROPERTY";
    Scope["WriteServicedeskProperty"] = "WRITE_SERVICEDESK_PROPERTY";
    Scope["DeleteServicedeskProperty"] = "DELETE_SERVICEDESK_PROPERTY";
    Scope["ReadRequesttype"] = "READ_REQUESTTYPE";
    Scope["WriteRequesttype"] = "WRITE_REQUESTTYPE";
    Scope["ReadRequesttypeProperty"] = "READ_REQUESTTYPE_PROPERTY";
    Scope["WriteRequesttypeProperty"] = "WRITE_REQUESTTYPE_PROPERTY";
    Scope["DeleteRequesttypeProperty"] = "DELETE_REQUESTTYPE_PROPERTY";
    Scope["ReadQueue"] = "READ_QUEUE";
    Scope["ReadRequest"] = "READ_REQUEST";
    Scope["WriteRequest"] = "WRITE_REQUEST";
    Scope["ReadRequestApproval"] = "READ_REQUEST_APPROVAL";
    Scope["WriteRequestApproval"] = "WRITE_REQUEST_APPROVAL";
    Scope["ReadRequestParticipant"] = "READ_REQUEST_PARTICIPANT";
    Scope["WriteRequestParticipant"] = "WRITE_REQUEST_PARTICIPANT";
    Scope["DeleteRequestParticipant"] = "DELETE_REQUEST_PARTICIPANT";
    Scope["ReadRequestAction"] = "READ_REQUEST_ACTION";
    Scope["ReadRequestComment"] = "READ_REQUEST_COMMENT";
    Scope["WriteRequestComment"] = "WRITE_REQUEST_COMMENT";
    Scope["ReadRequestSla"] = "READ_REQUEST_SLA";
    Scope["ReadRequestAttachment"] = "READ_REQUEST_ATTACHMENT";
    Scope["WriteRequestAttachment"] = "WRITE_REQUEST_ATTACHMENT";
    Scope["ReadRequestStatus"] = "READ_REQUEST_STATUS";
    Scope["WriteRequestStatus"] = "WRITE_REQUEST_STATUS";
    Scope["ReadRequestFeedback"] = "READ_REQUEST_FEEDBACK";
    Scope["WriteRequestFeedback"] = "WRITE_REQUEST_FEEDBACK";
    Scope["DeleteRequestFeedback"] = "DELETE_REQUEST_FEEDBACK";
    Scope["ReadRequestNotification"] = "READ_REQUEST_NOTIFICATION";
    Scope["WriteRequestNotification"] = "WRITE_REQUEST_NOTIFICATION";
    Scope["DeleteRequestNotification"] = "DELETE_REQUEST_NOTIFICATION";
    Scope["ReadKnowledgebase"] = "READ_KNOWLEDGEBASE";
    Scope["ReadJswBoardScope"] = "READ_JSW_BOARD_SCOPE";
    Scope["WriteJswBoardScope"] = "WRITE_JSW_BOARD_SCOPE";
    Scope["ReadJswBoardScopeAdmin"] = "READ_JSW_BOARD_SCOPE_ADMIN";
    Scope["WriteJswBoardScopeAdmin"] = "WRITE_JSW_BOARD_SCOPE_ADMIN";
    Scope["DeleteJswBoardScopeAdmin"] = "DELETE_JSW_BOARD_SCOPE_ADMIN";
    Scope["ReadJswEpic"] = "READ_JSW_EPIC";
    Scope["WriteJswEpic"] = "WRITE_JSW_EPIC";
    Scope["ReadJswIssue"] = "READ_JSW_ISSUE";
    Scope["WriteJswIssue"] = "WRITE_JSW_ISSUE";
    Scope["ReadJswSprint"] = "READ_JSW_SPRINT";
    Scope["WriteJswSprint"] = "WRITE_JSW_SPRINT";
    Scope["DeleteJswSprint"] = "DELETE_JSW_SPRINT";
    Scope["ReadJswSourceCode"] = "READ_JSW_SOURCE_CODE";
    Scope["WriteJswSourceCode"] = "WRITE_JSW_SOURCE_CODE";
    Scope["ReadJswFeatureFlag"] = "READ_JSW_FEATURE_FLAG";
    Scope["WriteJswFeatureFlag"] = "WRITE_JSW_FEATURE_FLAG";
    Scope["ReadJswDeployment"] = "READ_JSW_DEPLOYMENT";
    Scope["WriteJswDeployment"] = "WRITE_JSW_DEPLOYMENT";
    Scope["ReadJswBuild"] = "READ_JSW_BUILD";
    Scope["WriteJswBuild"] = "WRITE_JSW_BUILD";
    Scope["ReadJswRemoteLink"] = "READ_JSW_REMOTE_LINK";
    Scope["WriteJswRemoteLink"] = "WRITE_JSW_REMOTE_LINK";
    Scope["ReadNotifications"] = "READ_NOTIFICATIONS";
    Scope["WriteNotifications"] = "WRITE_NOTIFICATIONS";
    Scope["AdminContainer"] = "ADMIN_CONTAINER";
    Scope["ReadContainer"] = "READ_CONTAINER";
    Scope["WriteContainer"] = "WRITE_CONTAINER";
    Scope["MigrateConfluence"] = "MIGRATE_CONFLUENCE";
    Scope["ReadTeam"] = "READ_TEAM";
    Scope["ReadTeamMembers"] = "READ_TEAM_MEMBERS";
    Scope["TrelloAtlassianExternal"] = "TRELLO_ATLASSIAN_EXTERNAL";
    Scope["CatalogRead"] = "CATALOG_READ";
})(Scope = exports.Scope || (exports.Scope = {}));
var SearchBoardProductType;
(function (SearchBoardProductType) {
    SearchBoardProductType["Software"] = "SOFTWARE";
    SearchBoardProductType["Business"] = "BUSINESS";
})(SearchBoardProductType = exports.SearchBoardProductType || (exports.SearchBoardProductType = {}));
var SearchConfluenceDocumentStatus;
(function (SearchConfluenceDocumentStatus) {
    SearchConfluenceDocumentStatus["Current"] = "CURRENT";
    SearchConfluenceDocumentStatus["Archived"] = "ARCHIVED";
    SearchConfluenceDocumentStatus["Draft"] = "DRAFT";
})(SearchConfluenceDocumentStatus = exports.SearchConfluenceDocumentStatus || (exports.SearchConfluenceDocumentStatus = {}));
var SearchConfluenceRangeField;
(function (SearchConfluenceRangeField) {
    SearchConfluenceRangeField["Lastmodified"] = "LASTMODIFIED";
    SearchConfluenceRangeField["Created"] = "CREATED";
})(SearchConfluenceRangeField = exports.SearchConfluenceRangeField || (exports.SearchConfluenceRangeField = {}));
var SearchContainerStatus;
(function (SearchContainerStatus) {
    SearchContainerStatus["Archived"] = "ARCHIVED";
    SearchContainerStatus["Current"] = "CURRENT";
})(SearchContainerStatus = exports.SearchContainerStatus || (exports.SearchContainerStatus = {}));
var SearchIssueStatusCategory;
(function (SearchIssueStatusCategory) {
    SearchIssueStatusCategory["Open"] = "OPEN";
    SearchIssueStatusCategory["Done"] = "DONE";
})(SearchIssueStatusCategory = exports.SearchIssueStatusCategory || (exports.SearchIssueStatusCategory = {}));
var SearchProjectType;
(function (SearchProjectType) {
    SearchProjectType["Software"] = "software";
    SearchProjectType["Business"] = "business";
    SearchProjectType["ServiceDesk"] = "service_desk";
    SearchProjectType["ProductDiscovery"] = "product_discovery";
})(SearchProjectType = exports.SearchProjectType || (exports.SearchProjectType = {}));
var SearchResultType;
(function (SearchResultType) {
    SearchResultType["Page"] = "page";
    SearchResultType["Blogpost"] = "blogpost";
    SearchResultType["Whiteboard"] = "whiteboard";
    SearchResultType["Space"] = "space";
    SearchResultType["Attachment"] = "attachment";
    SearchResultType["Comment"] = "comment";
    SearchResultType["Board"] = "board";
    SearchResultType["Filter"] = "filter";
    SearchResultType["Issue"] = "issue";
    SearchResultType["Plan"] = "plan";
    SearchResultType["Project"] = "project";
    SearchResultType["Unrecognised"] = "unrecognised";
})(SearchResultType = exports.SearchResultType || (exports.SearchResultType = {}));
var ShepherdActionType;
(function (ShepherdActionType) {
    ShepherdActionType["Create"] = "CREATE";
    ShepherdActionType["Delete"] = "DELETE";
    ShepherdActionType["Export"] = "EXPORT";
    ShepherdActionType["Login"] = "LOGIN";
    ShepherdActionType["Read"] = "READ";
    ShepherdActionType["Update"] = "UPDATE";
})(ShepherdActionType = exports.ShepherdActionType || (exports.ShepherdActionType = {}));
var ShepherdAlertStatus;
(function (ShepherdAlertStatus) {
    ShepherdAlertStatus["InProgress"] = "IN_PROGRESS";
    ShepherdAlertStatus["Triaged"] = "TRIAGED";
    ShepherdAlertStatus["TriagedExpectedActivity"] = "TRIAGED_EXPECTED_ACTIVITY";
    ShepherdAlertStatus["TriagedTruePositive"] = "TRIAGED_TRUE_POSITIVE";
    ShepherdAlertStatus["Untriaged"] = "UNTRIAGED";
})(ShepherdAlertStatus = exports.ShepherdAlertStatus || (exports.ShepherdAlertStatus = {}));
var ShepherdAlertTemplateType;
(function (ShepherdAlertTemplateType) {
    ShepherdAlertTemplateType["AddedConfluenceGlobalPermission"] = "ADDED_CONFLUENCE_GLOBAL_PERMISSION";
    ShepherdAlertTemplateType["AddedConfluenceSpacePermission"] = "ADDED_CONFLUENCE_SPACE_PERMISSION";
    ShepherdAlertTemplateType["AddedJiraGlobalPermission"] = "ADDED_JIRA_GLOBAL_PERMISSION";
    ShepherdAlertTemplateType["AddedOrgadmin"] = "ADDED_ORGADMIN";
    ShepherdAlertTemplateType["ConfluenceDataDiscovery"] = "CONFLUENCE_DATA_DISCOVERY";
    ShepherdAlertTemplateType["ConfluencePageCrawling"] = "CONFLUENCE_PAGE_CRAWLING";
    ShepherdAlertTemplateType["ConfluencePageExports"] = "CONFLUENCE_PAGE_EXPORTS";
    ShepherdAlertTemplateType["ConfluenceSpaceExports"] = "CONFLUENCE_SPACE_EXPORTS";
    ShepherdAlertTemplateType["ConfluenceSuspiciousSearch"] = "CONFLUENCE_SUSPICIOUS_SEARCH";
    ShepherdAlertTemplateType["CreatedAuthPolicy"] = "CREATED_AUTH_POLICY";
    ShepherdAlertTemplateType["CreatedPolicy"] = "CREATED_POLICY";
    ShepherdAlertTemplateType["CreatedSamlConfig"] = "CREATED_SAML_CONFIG";
    ShepherdAlertTemplateType["CreatedTunnel"] = "CREATED_TUNNEL";
    ShepherdAlertTemplateType["CreatedUserProvisioning"] = "CREATED_USER_PROVISIONING";
    ShepherdAlertTemplateType["Default"] = "DEFAULT";
    ShepherdAlertTemplateType["DeletedAuthPolicy"] = "DELETED_AUTH_POLICY";
    ShepherdAlertTemplateType["DeletedDomain"] = "DELETED_DOMAIN";
    ShepherdAlertTemplateType["DeletedPolicy"] = "DELETED_POLICY";
    ShepherdAlertTemplateType["DeletedTunnel"] = "DELETED_TUNNEL";
    ShepherdAlertTemplateType["EcosystemAuditLogInstallationCreated"] = "ECOSYSTEM_AUDIT_LOG_INSTALLATION_CREATED";
    ShepherdAlertTemplateType["EcosystemAuditLogInstallationDeleted"] = "ECOSYSTEM_AUDIT_LOG_INSTALLATION_DELETED";
    ShepherdAlertTemplateType["EcosystemAuditLogUserGrantCreated"] = "ECOSYSTEM_AUDIT_LOG_USER_GRANT_CREATED";
    ShepherdAlertTemplateType["EnableScimSync"] = "ENABLE_SCIM_SYNC";
    ShepherdAlertTemplateType["ExportedOrgeventscsv"] = "EXPORTED_ORGEVENTSCSV";
    ShepherdAlertTemplateType["GrantAssignedJiraPermissionScheme"] = "GRANT_ASSIGNED_JIRA_PERMISSION_SCHEME";
    ShepherdAlertTemplateType["IdentityPasswordResetCompletedUser"] = "IDENTITY_PASSWORD_RESET_COMPLETED_USER";
    ShepherdAlertTemplateType["InitiatedGsyncConnection"] = "INITIATED_GSYNC_CONNECTION";
    ShepherdAlertTemplateType["JiraIssueCrawling"] = "JIRA_ISSUE_CRAWLING";
    ShepherdAlertTemplateType["OrgLoggedInAsUser"] = "ORG_LOGGED_IN_AS_USER";
    ShepherdAlertTemplateType["RotateScimDirectoryToken"] = "ROTATE_SCIM_DIRECTORY_TOKEN";
    ShepherdAlertTemplateType["TestAlert"] = "TEST_ALERT";
    ShepherdAlertTemplateType["TokenCreated"] = "TOKEN_CREATED";
    ShepherdAlertTemplateType["UpdatedAuthPolicy"] = "UPDATED_AUTH_POLICY";
    ShepherdAlertTemplateType["UpdatedPolicy"] = "UPDATED_POLICY";
    ShepherdAlertTemplateType["UpdatedSamlConfig"] = "UPDATED_SAML_CONFIG";
    ShepherdAlertTemplateType["UserAddedToBeacon"] = "USER_ADDED_TO_BEACON";
    ShepherdAlertTemplateType["UserGrantedRole"] = "USER_GRANTED_ROLE";
    ShepherdAlertTemplateType["UserRevokedRole"] = "USER_REVOKED_ROLE";
    ShepherdAlertTemplateType["VerifiedDomainVerification"] = "VERIFIED_DOMAIN_VERIFICATION";
})(ShepherdAlertTemplateType = exports.ShepherdAlertTemplateType || (exports.ShepherdAlertTemplateType = {}));
var ShepherdAtlassianProduct;
(function (ShepherdAtlassianProduct) {
    ShepherdAtlassianProduct["AdminHub"] = "ADMIN_HUB";
    ShepherdAtlassianProduct["Confluence"] = "CONFLUENCE";
    ShepherdAtlassianProduct["JiraSoftware"] = "JIRA_SOFTWARE";
    ShepherdAtlassianProduct["Marketplace"] = "MARKETPLACE";
})(ShepherdAtlassianProduct = exports.ShepherdAtlassianProduct || (exports.ShepherdAtlassianProduct = {}));
var ShepherdDetectionScanningFrequency;
(function (ShepherdDetectionScanningFrequency) {
    ShepherdDetectionScanningFrequency["RealTime"] = "REAL_TIME";
    ShepherdDetectionScanningFrequency["Scheduled"] = "SCHEDULED";
})(ShepherdDetectionScanningFrequency = exports.ShepherdDetectionScanningFrequency || (exports.ShepherdDetectionScanningFrequency = {}));
var ShepherdLoginDeviceType;
(function (ShepherdLoginDeviceType) {
    ShepherdLoginDeviceType["Computer"] = "COMPUTER";
    ShepherdLoginDeviceType["Console"] = "CONSOLE";
    ShepherdLoginDeviceType["Embedded"] = "EMBEDDED";
    ShepherdLoginDeviceType["Mobile"] = "MOBILE";
    ShepherdLoginDeviceType["SmartTv"] = "SMART_TV";
    ShepherdLoginDeviceType["Tablet"] = "TABLET";
    ShepherdLoginDeviceType["Wearable"] = "WEARABLE";
})(ShepherdLoginDeviceType = exports.ShepherdLoginDeviceType || (exports.ShepherdLoginDeviceType = {}));
var ShepherdMutationErrorType;
(function (ShepherdMutationErrorType) {
    ShepherdMutationErrorType["BadRequest"] = "BAD_REQUEST";
    ShepherdMutationErrorType["InternalServerError"] = "INTERNAL_SERVER_ERROR";
    ShepherdMutationErrorType["NoProductAccess"] = "NO_PRODUCT_ACCESS";
    ShepherdMutationErrorType["Unauthorized"] = "UNAUTHORIZED";
})(ShepherdMutationErrorType = exports.ShepherdMutationErrorType || (exports.ShepherdMutationErrorType = {}));
var ShepherdQueryErrorType;
(function (ShepherdQueryErrorType) {
    ShepherdQueryErrorType["BadRequest"] = "BAD_REQUEST";
    ShepherdQueryErrorType["InternalServerError"] = "INTERNAL_SERVER_ERROR";
    ShepherdQueryErrorType["NoProductAccess"] = "NO_PRODUCT_ACCESS";
    ShepherdQueryErrorType["Unauthorized"] = "UNAUTHORIZED";
})(ShepherdQueryErrorType = exports.ShepherdQueryErrorType || (exports.ShepherdQueryErrorType = {}));
var ShepherdRateThresholdValue;
(function (ShepherdRateThresholdValue) {
    ShepherdRateThresholdValue["High"] = "HIGH";
    ShepherdRateThresholdValue["Low"] = "LOW";
    ShepherdRateThresholdValue["Medium"] = "MEDIUM";
})(ShepherdRateThresholdValue = exports.ShepherdRateThresholdValue || (exports.ShepherdRateThresholdValue = {}));
var ShepherdSubscriptionStatus;
(function (ShepherdSubscriptionStatus) {
    ShepherdSubscriptionStatus["Active"] = "ACTIVE";
    ShepherdSubscriptionStatus["Inactive"] = "INACTIVE";
})(ShepherdSubscriptionStatus = exports.ShepherdSubscriptionStatus || (exports.ShepherdSubscriptionStatus = {}));
var ShepherdWebhookDestinationType;
(function (ShepherdWebhookDestinationType) {
    ShepherdWebhookDestinationType["Default"] = "DEFAULT";
    ShepherdWebhookDestinationType["MicrosoftTeams"] = "MICROSOFT_TEAMS";
})(ShepherdWebhookDestinationType = exports.ShepherdWebhookDestinationType || (exports.ShepherdWebhookDestinationType = {}));
var ShepherdWebhookType;
(function (ShepherdWebhookType) {
    ShepherdWebhookType["Custom"] = "CUSTOM";
    ShepherdWebhookType["MicrosoftTeams"] = "MICROSOFT_TEAMS";
    ShepherdWebhookType["Slack"] = "SLACK";
})(ShepherdWebhookType = exports.ShepherdWebhookType || (exports.ShepherdWebhookType = {}));
var SoftwareCardsDestinationEnum;
(function (SoftwareCardsDestinationEnum) {
    SoftwareCardsDestinationEnum["NewSprint"] = "NEW_SPRINT";
    SoftwareCardsDestinationEnum["Backlog"] = "BACKLOG";
    SoftwareCardsDestinationEnum["ExistingSprint"] = "EXISTING_SPRINT";
})(SoftwareCardsDestinationEnum = exports.SoftwareCardsDestinationEnum || (exports.SoftwareCardsDestinationEnum = {}));
var SortDirection;
(function (SortDirection) {
    SortDirection["Asc"] = "ASC";
    SortDirection["Desc"] = "DESC";
})(SortDirection = exports.SortDirection || (exports.SortDirection = {}));
var SortOrder;
(function (SortOrder) {
    SortOrder["Asc"] = "ASC";
    SortOrder["Desc"] = "DESC";
})(SortOrder = exports.SortOrder || (exports.SortOrder = {}));
var SprintReportsEstimationStatisticType;
(function (SprintReportsEstimationStatisticType) {
    SprintReportsEstimationStatisticType["StoryPoints"] = "STORY_POINTS";
    SprintReportsEstimationStatisticType["IssueCount"] = "ISSUE_COUNT";
    SprintReportsEstimationStatisticType["OriginalEstimate"] = "ORIGINAL_ESTIMATE";
})(SprintReportsEstimationStatisticType = exports.SprintReportsEstimationStatisticType || (exports.SprintReportsEstimationStatisticType = {}));
var SprintState;
(function (SprintState) {
    SprintState["Active"] = "ACTIVE";
    SprintState["Future"] = "FUTURE";
    SprintState["Closed"] = "CLOSED";
})(SprintState = exports.SprintState || (exports.SprintState = {}));
var SubscriptionEventSources;
(function (SubscriptionEventSources) {
    SubscriptionEventSources["Streamhub"] = "STREAMHUB";
    SubscriptionEventSources["Producer"] = "PRODUCER";
})(SubscriptionEventSources = exports.SubscriptionEventSources || (exports.SubscriptionEventSources = {}));
var SupportRequestFieldDataType;
(function (SupportRequestFieldDataType) {
    SupportRequestFieldDataType["String"] = "STRING";
    SupportRequestFieldDataType["Number"] = "NUMBER";
    SupportRequestFieldDataType["Boolean"] = "BOOLEAN";
    SupportRequestFieldDataType["Date"] = "DATE";
})(SupportRequestFieldDataType = exports.SupportRequestFieldDataType || (exports.SupportRequestFieldDataType = {}));
var SupportRequestNamedContactOperation;
(function (SupportRequestNamedContactOperation) {
    SupportRequestNamedContactOperation["Add"] = "ADD";
    SupportRequestNamedContactOperation["Remove"] = "REMOVE";
})(SupportRequestNamedContactOperation = exports.SupportRequestNamedContactOperation || (exports.SupportRequestNamedContactOperation = {}));
var SupportRequestQueryOwnership;
(function (SupportRequestQueryOwnership) {
    SupportRequestQueryOwnership["Reporter"] = "REPORTER";
    SupportRequestQueryOwnership["Participant"] = "PARTICIPANT";
})(SupportRequestQueryOwnership = exports.SupportRequestQueryOwnership || (exports.SupportRequestQueryOwnership = {}));
var SupportRequestQueryStatusCategory;
(function (SupportRequestQueryStatusCategory) {
    SupportRequestQueryStatusCategory["Open"] = "OPEN";
    SupportRequestQueryStatusCategory["Done"] = "DONE";
})(SupportRequestQueryStatusCategory = exports.SupportRequestQueryStatusCategory || (exports.SupportRequestQueryStatusCategory = {}));
var SupportRequestStatusCategory;
(function (SupportRequestStatusCategory) {
    SupportRequestStatusCategory["Open"] = "OPEN";
    SupportRequestStatusCategory["InProgress"] = "IN_PROGRESS";
    SupportRequestStatusCategory["Done"] = "DONE";
})(SupportRequestStatusCategory = exports.SupportRequestStatusCategory || (exports.SupportRequestStatusCategory = {}));
var SupportRequestUserType;
(function (SupportRequestUserType) {
    SupportRequestUserType["Customer"] = "CUSTOMER";
    SupportRequestUserType["Partner"] = "PARTNER";
})(SupportRequestUserType = exports.SupportRequestUserType || (exports.SupportRequestUserType = {}));
var SwimlaneStrategy;
(function (SwimlaneStrategy) {
    SwimlaneStrategy["None"] = "NONE";
    SwimlaneStrategy["Assignee"] = "ASSIGNEE";
    SwimlaneStrategy["Issueparent"] = "ISSUEPARENT";
    SwimlaneStrategy["Issuechildren"] = "ISSUECHILDREN";
})(SwimlaneStrategy = exports.SwimlaneStrategy || (exports.SwimlaneStrategy = {}));
var TeamMembershipRole;
(function (TeamMembershipRole) {
    TeamMembershipRole["Regular"] = "REGULAR";
    TeamMembershipRole["Admin"] = "ADMIN";
})(TeamMembershipRole = exports.TeamMembershipRole || (exports.TeamMembershipRole = {}));
var TeamMembershipSetting;
(function (TeamMembershipSetting) {
    TeamMembershipSetting["Open"] = "OPEN";
    TeamMembershipSetting["MemberInvite"] = "MEMBER_INVITE";
})(TeamMembershipSetting = exports.TeamMembershipSetting || (exports.TeamMembershipSetting = {}));
var TeamMembershipState;
(function (TeamMembershipState) {
    TeamMembershipState["FullMember"] = "FULL_MEMBER";
    TeamMembershipState["Alumni"] = "ALUMNI";
    TeamMembershipState["RequestingToJoin"] = "REQUESTING_TO_JOIN";
})(TeamMembershipState = exports.TeamMembershipState || (exports.TeamMembershipState = {}));
var TeamSortField;
(function (TeamSortField) {
    TeamSortField["Id"] = "ID";
    TeamSortField["DisplayName"] = "DISPLAY_NAME";
    TeamSortField["State"] = "STATE";
})(TeamSortField = exports.TeamSortField || (exports.TeamSortField = {}));
var TeamSortOrder;
(function (TeamSortOrder) {
    TeamSortOrder["Asc"] = "ASC";
    TeamSortOrder["Desc"] = "DESC";
})(TeamSortOrder = exports.TeamSortOrder || (exports.TeamSortOrder = {}));
var TeamState;
(function (TeamState) {
    TeamState["Active"] = "ACTIVE";
    TeamState["Disbanded"] = "DISBANDED";
    TeamState["Purged"] = "PURGED";
})(TeamState = exports.TeamState || (exports.TeamState = {}));
var TeamStateV2;
(function (TeamStateV2) {
    TeamStateV2["Active"] = "ACTIVE";
    TeamStateV2["Purged"] = "PURGED";
})(TeamStateV2 = exports.TeamStateV2 || (exports.TeamStateV2 = {}));
var ToolchainSyncState;
(function (ToolchainSyncState) {
    ToolchainSyncState["InProgress"] = "IN_PROGRESS";
    ToolchainSyncState["Complete"] = "COMPLETE";
    ToolchainSyncState["Error"] = "ERROR";
})(ToolchainSyncState = exports.ToolchainSyncState || (exports.ToolchainSyncState = {}));
var TownsquareGoalSortEnum;
(function (TownsquareGoalSortEnum) {
    TownsquareGoalSortEnum["CreationDateAsc"] = "CREATION_DATE_ASC";
    TownsquareGoalSortEnum["CreationDateDesc"] = "CREATION_DATE_DESC";
    TownsquareGoalSortEnum["HierarchyAsc"] = "HIERARCHY_ASC";
    TownsquareGoalSortEnum["HierarchyDesc"] = "HIERARCHY_DESC";
    TownsquareGoalSortEnum["HierarchyLevelAsc"] = "HIERARCHY_LEVEL_ASC";
    TownsquareGoalSortEnum["HierarchyLevelDesc"] = "HIERARCHY_LEVEL_DESC";
    TownsquareGoalSortEnum["IdAsc"] = "ID_ASC";
    TownsquareGoalSortEnum["IdDesc"] = "ID_DESC";
    TownsquareGoalSortEnum["LatestUpdateDateAsc"] = "LATEST_UPDATE_DATE_ASC";
    TownsquareGoalSortEnum["LatestUpdateDateDesc"] = "LATEST_UPDATE_DATE_DESC";
    TownsquareGoalSortEnum["MemberCountAsc"] = "MEMBER_COUNT_ASC";
    TownsquareGoalSortEnum["MemberCountDesc"] = "MEMBER_COUNT_DESC";
    TownsquareGoalSortEnum["NameAsc"] = "NAME_ASC";
    TownsquareGoalSortEnum["NameDesc"] = "NAME_DESC";
    TownsquareGoalSortEnum["ProjectCountAsc"] = "PROJECT_COUNT_ASC";
    TownsquareGoalSortEnum["ProjectCountDesc"] = "PROJECT_COUNT_DESC";
    TownsquareGoalSortEnum["ScoreAsc"] = "SCORE_ASC";
    TownsquareGoalSortEnum["ScoreDesc"] = "SCORE_DESC";
    TownsquareGoalSortEnum["TargetDateAsc"] = "TARGET_DATE_ASC";
    TownsquareGoalSortEnum["TargetDateDesc"] = "TARGET_DATE_DESC";
    TownsquareGoalSortEnum["WatchingAsc"] = "WATCHING_ASC";
    TownsquareGoalSortEnum["WatchingDesc"] = "WATCHING_DESC";
})(TownsquareGoalSortEnum = exports.TownsquareGoalSortEnum || (exports.TownsquareGoalSortEnum = {}));
var TownsquareGoalStateValue;
(function (TownsquareGoalStateValue) {
    TownsquareGoalStateValue["Archived"] = "archived";
    TownsquareGoalStateValue["AtRisk"] = "at_risk";
    TownsquareGoalStateValue["Done"] = "done";
    TownsquareGoalStateValue["OffTrack"] = "off_track";
    TownsquareGoalStateValue["OnTrack"] = "on_track";
    TownsquareGoalStateValue["Paused"] = "paused";
    TownsquareGoalStateValue["Pending"] = "pending";
})(TownsquareGoalStateValue = exports.TownsquareGoalStateValue || (exports.TownsquareGoalStateValue = {}));
var TownsquareProjectSortEnum;
(function (TownsquareProjectSortEnum) {
    TownsquareProjectSortEnum["CreationDateAsc"] = "CREATION_DATE_ASC";
    TownsquareProjectSortEnum["CreationDateDesc"] = "CREATION_DATE_DESC";
    TownsquareProjectSortEnum["IdAsc"] = "ID_ASC";
    TownsquareProjectSortEnum["IdDesc"] = "ID_DESC";
    TownsquareProjectSortEnum["LatestUpdateDateAsc"] = "LATEST_UPDATE_DATE_ASC";
    TownsquareProjectSortEnum["LatestUpdateDateDesc"] = "LATEST_UPDATE_DATE_DESC";
    TownsquareProjectSortEnum["NameAsc"] = "NAME_ASC";
    TownsquareProjectSortEnum["NameDesc"] = "NAME_DESC";
    TownsquareProjectSortEnum["StartDateAsc"] = "START_DATE_ASC";
    TownsquareProjectSortEnum["StartDateDesc"] = "START_DATE_DESC";
    TownsquareProjectSortEnum["StatusAsc"] = "STATUS_ASC";
    TownsquareProjectSortEnum["StatusDesc"] = "STATUS_DESC";
    TownsquareProjectSortEnum["TargetDateAsc"] = "TARGET_DATE_ASC";
    TownsquareProjectSortEnum["TargetDateDesc"] = "TARGET_DATE_DESC";
    TownsquareProjectSortEnum["WatchingAsc"] = "WATCHING_ASC";
    TownsquareProjectSortEnum["WatchingDesc"] = "WATCHING_DESC";
})(TownsquareProjectSortEnum = exports.TownsquareProjectSortEnum || (exports.TownsquareProjectSortEnum = {}));
var TownsquareProjectStateValue;
(function (TownsquareProjectStateValue) {
    TownsquareProjectStateValue["Archived"] = "archived";
    TownsquareProjectStateValue["AtRisk"] = "at_risk";
    TownsquareProjectStateValue["Done"] = "done";
    TownsquareProjectStateValue["OffTrack"] = "off_track";
    TownsquareProjectStateValue["OnTrack"] = "on_track";
    TownsquareProjectStateValue["Paused"] = "paused";
    TownsquareProjectStateValue["Pending"] = "pending";
})(TownsquareProjectStateValue = exports.TownsquareProjectStateValue || (exports.TownsquareProjectStateValue = {}));
var TownsquareTargetDateType;
(function (TownsquareTargetDateType) {
    TownsquareTargetDateType["Day"] = "DAY";
    TownsquareTargetDateType["Month"] = "MONTH";
    TownsquareTargetDateType["Quarter"] = "QUARTER";
})(TownsquareTargetDateType = exports.TownsquareTargetDateType || (exports.TownsquareTargetDateType = {}));
var TrelloCardCoverBrightness;
(function (TrelloCardCoverBrightness) {
    TrelloCardCoverBrightness["Dark"] = "DARK";
    TrelloCardCoverBrightness["Light"] = "LIGHT";
})(TrelloCardCoverBrightness = exports.TrelloCardCoverBrightness || (exports.TrelloCardCoverBrightness = {}));
var TrelloCardCoverColor;
(function (TrelloCardCoverColor) {
    TrelloCardCoverColor["Black"] = "BLACK";
    TrelloCardCoverColor["Blue"] = "BLUE";
    TrelloCardCoverColor["Green"] = "GREEN";
    TrelloCardCoverColor["Lime"] = "LIME";
    TrelloCardCoverColor["Orange"] = "ORANGE";
    TrelloCardCoverColor["Pink"] = "PINK";
    TrelloCardCoverColor["Purple"] = "PURPLE";
    TrelloCardCoverColor["Red"] = "RED";
    TrelloCardCoverColor["Sky"] = "SKY";
    TrelloCardCoverColor["Yellow"] = "YELLOW";
})(TrelloCardCoverColor = exports.TrelloCardCoverColor || (exports.TrelloCardCoverColor = {}));
var TrelloCardCoverSize;
(function (TrelloCardCoverSize) {
    TrelloCardCoverSize["Full"] = "FULL";
    TrelloCardCoverSize["Normal"] = "NORMAL";
})(TrelloCardCoverSize = exports.TrelloCardCoverSize || (exports.TrelloCardCoverSize = {}));
var TrelloCardRole;
(function (TrelloCardRole) {
    TrelloCardRole["Board"] = "BOARD";
    TrelloCardRole["Link"] = "LINK";
    TrelloCardRole["Mirror"] = "MIRROR";
    TrelloCardRole["Separator"] = "SEPARATOR";
})(TrelloCardRole = exports.TrelloCardRole || (exports.TrelloCardRole = {}));
var TrelloPluginDataAccess;
(function (TrelloPluginDataAccess) {
    TrelloPluginDataAccess["Private"] = "PRIVATE";
    TrelloPluginDataAccess["Shared"] = "SHARED";
})(TrelloPluginDataAccess = exports.TrelloPluginDataAccess || (exports.TrelloPluginDataAccess = {}));
var TrelloPluginDataScope;
(function (TrelloPluginDataScope) {
    TrelloPluginDataScope["Board"] = "BOARD";
    TrelloPluginDataScope["Card"] = "CARD";
    TrelloPluginDataScope["Organization"] = "ORGANIZATION";
})(TrelloPluginDataScope = exports.TrelloPluginDataScope || (exports.TrelloPluginDataScope = {}));
var UserInstallationRuleValue;
(function (UserInstallationRuleValue) {
    UserInstallationRuleValue["Allow"] = "allow";
    UserInstallationRuleValue["Deny"] = "deny";
})(UserInstallationRuleValue = exports.UserInstallationRuleValue || (exports.UserInstallationRuleValue = {}));
var VirtualAgentIntentTemplateType;
(function (VirtualAgentIntentTemplateType) {
    VirtualAgentIntentTemplateType["Standard"] = "STANDARD";
    VirtualAgentIntentTemplateType["Discovered"] = "DISCOVERED";
    VirtualAgentIntentTemplateType["Shared"] = "SHARED";
})(VirtualAgentIntentTemplateType = exports.VirtualAgentIntentTemplateType || (exports.VirtualAgentIntentTemplateType = {}));
var SourceBillingType;
(function (SourceBillingType) {
    SourceBillingType["Hams"] = "HAMS";
    SourceBillingType["Ccp"] = "CCP";
})(SourceBillingType = exports.SourceBillingType || (exports.SourceBillingType = {}));
