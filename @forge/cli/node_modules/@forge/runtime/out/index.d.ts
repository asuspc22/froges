import { ExternalRequestBody, ExternalRequestVariable } from './request';
import { InvocationResult } from './result';
import { Sandbox } from './sandbox';
import { Inspector } from './sandbox/inspector';
import { LimitsTracker } from './limits';
import { XenInvocationRequest } from './sandbox/invocation-request';
export * from './app-manifest';
export * from './config';
export * from './context';
export * from './feature-flag';
export * from './metrics';
export * from './request';
export * from './result';
export * from './snapshot';
export * from './limits';
export * from './logger';
export * from './sandbox';
export declare function initializeInspector(): Inspector;
export declare function getUserVars(): ExternalRequestVariable[];
export interface InvocationConfig {
    sandbox: Sandbox;
    xenInvocationRequest: XenInvocationRequest;
    invocationLimits: LimitsTracker;
    inspector?: Inspector;
}
export declare class InvocationValidationError extends Error {
}
export declare function validateInvocation(invocation: unknown): ExternalRequestBody;
export declare function invoke(invocation: InvocationConfig): Promise<InvocationResult>;
//# sourceMappingURL=index.d.ts.map