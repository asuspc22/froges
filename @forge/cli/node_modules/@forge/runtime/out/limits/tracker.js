"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.perInvocationLimitsTrackerFactory = exports.Limit = void 0;
exports.Limit = {
    InvocationLogEntryCount: 'forge-invocation-log-entry-count',
    FetchRequestLimit: 'forge-fetch-request-count'
};
class PerInvocationLimitsTracker {
    constructor(limits) {
        this.limits = {};
        this.limitCount = {};
        this.limits = limits || {};
    }
    incrementCount(limitKey, by = 1) {
        this.limitCount[limitKey] = this.getCount(limitKey) + by;
    }
    getCount(limitKey) {
        return this.limitCount[limitKey] || 0;
    }
    getLimit(limitKey) {
        return this.limits[limitKey];
    }
    hasCountRemaining(limitKey) {
        const limit = this.limits[limitKey];
        if (limit) {
            return this.getCount(limitKey) < limit;
        }
        return true;
    }
}
const perInvocationLimitsTrackerFactory = (request) => {
    return new PerInvocationLimitsTracker(request.getLimits());
};
exports.perInvocationLimitsTrackerFactory = perInvocationLimitsTrackerFactory;
