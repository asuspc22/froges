/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The app's description.
 */
export type Description = string;
/**
 * A unique Atlassian Resource Identifier (ari) assigned to your app.
 */
export type Id = string;
/**
 * Whether a snapshot of the app is taken at deployment time. Default value of true. This option only takes effect with the "sandbox" runtime.
 */
export type Snapshots = boolean;
/**
 * Name of the runtime to use for app execution.
 */
export type Name = 'sandbox' | 'nodejs18.x';
/**
 * Whether to enable paid app licensing for production installations of this app. Default value of false.
 */
export type Enabled = boolean;
/**
 * Whether user consent should be automatic. If set to false or no value is specified for this property in the manifest, user consent will be interactive.
 */
export type AutoUserConsent = boolean;
/**
 * The app's connect key
 */
export type Key = string;

export interface BasicManifestSchema {
  app: App;
  [k: string]: unknown;
}
export interface App {
  description?: Description;
  id: Id;
  runtime?: Runtime;
  licensing?: Licensing;
  features?: Features;
  connect?: Connect;
  /**
   * Options related to hosted storage
   */
  storage?: {
    /**
     * Labels to classify the type of data stored
     */
    classifications?: ['ugc' | 'pii' | 'other', ...('ugc' | 'pii' | 'other')[]];
    /**
     * Custom schemas for app stored entities.
     */
    entities?: [
      {
        /**
         * A name for the entity. Must be unique within the manifest and have a maximum of 60 characters.
         */
        name: string;
        /**
         * Attributes of the entity.
         */
        attributes: {
          /**
           * An attribute of the entity. Must be unique within the entity and have a maximum of 30 characters.
           *
           * This interface was referenced by `undefined`'s JSON-Schema definition
           * via the `patternProperty` "^[a-zA-Z][a-zA-Z0-9_]*$".
           */
          [k: string]: {
            /**
             * The data type for the given attribute.
             */
            type: 'string' | 'boolean' | 'float' | 'integer' | 'any';
          };
        };
        /**
         * Indexes on attributes of the schema.
         */
        indexes?: [
          (
            | string
            | {
                name: string;
                range: [string, ...string[]];
                partition?: [string, ...string[]];
              }
          ),
          ...(
            | string
            | {
                name: string;
                range: [string, ...string[]];
                partition?: [string, ...string[]];
              }
          )[]
        ];
      },
      ...{
        /**
         * A name for the entity. Must be unique within the manifest and have a maximum of 60 characters.
         */
        name: string;
        /**
         * Attributes of the entity.
         */
        attributes: {
          /**
           * An attribute of the entity. Must be unique within the entity and have a maximum of 30 characters.
           *
           * This interface was referenced by `undefined`'s JSON-Schema definition
           * via the `patternProperty` "^[a-zA-Z][a-zA-Z0-9_]*$".
           */
          [k: string]: {
            /**
             * The data type for the given attribute.
             */
            type: 'string' | 'boolean' | 'float' | 'integer' | 'any';
          };
        };
        /**
         * Indexes on attributes of the schema.
         */
        indexes?: [
          (
            | string
            | {
                name: string;
                range: [string, ...string[]];
                partition?: [string, ...string[]];
              }
          ),
          ...(
            | string
            | {
                name: string;
                range: [string, ...string[]];
                partition?: [string, ...string[]];
              }
          )[]
        ];
      }[]
    ];
  };
}
/**
 * Options related to the Forge Javascript runtime.
 */
export interface Runtime {
  snapshots?: Snapshots;
  name?: Name;
}
/**
 * Options related to paid app licensing
 */
export interface Licensing {
  enabled: Enabled;
}
/**
 * Features related to app
 */
export interface Features {
  autoUserConsent?: AutoUserConsent;
}
/**
 * Connect Configuration for the forge app.
 */
export interface Connect {
  key: Key;
  /**
   * A key for the remote, which other modules can refer to. Must be unique within the manifest and have a maximum of 23 characters.
   */
  remote?: string;
  /**
   * The type of authentication used to communicate with tenant APIs
   */
  authentication?: 'jwt' | 'oauth2';
}
