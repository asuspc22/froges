import { ManifestValidationResult } from '../types';
import { ProcessorInterface } from './processor-interface';
import { ValidatorInterface } from '../validators';
export declare abstract class AbstractValidationProcessor<T> implements ProcessorInterface<T> {
    protected readonly validators: ValidatorInterface<any | undefined, T>[];
    protected constructor(validators: ValidatorInterface<any | undefined, T>[]);
    process(manifest: string | undefined): Promise<ManifestValidationResult<T>>;
}
//# sourceMappingURL=abstract-validation-processor.d.ts.map