"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.YamlValidator = void 0;
const tslib_1 = require("tslib");
const js_yaml_1 = tslib_1.__importStar(require("js-yaml"));
const fs_1 = tslib_1.__importDefault(require("fs"));
const text_1 = require("../text");
class YamlValidator {
    async validate(manifest) {
        if (!manifest || !manifest.filePath) {
            return {
                success: false,
                manifestObject: manifest
            };
        }
        try {
            const content = fs_1.default.readFileSync(manifest.filePath, 'utf8');
            const manifestContent = js_yaml_1.default.safeLoad(content);
            return {
                success: true,
                manifestObject: {
                    filePath: manifest.filePath,
                    yamlContent: manifestContent,
                    yamlContentByLine: content.split('\n')
                }
            };
        }
        catch (e) {
            if (e instanceof js_yaml_1.YAMLException) {
                return {
                    success: false,
                    errors: [
                        {
                            message: text_1.errors.invalidManifest(e.message.replace(/(at line).+/gms, '').trim()),
                            reference: text_1.References.InvalidManifest,
                            level: 'error',
                            line: e.mark ? e.mark.line + 1 : 0,
                            column: e.mark ? e.mark.column + 1 : 0
                        }
                    ]
                };
            }
            return {
                success: false,
                errors: [
                    {
                        message: text_1.errors.invalidManifest(e.message),
                        reference: text_1.References.InvalidManifest,
                        level: 'error',
                        line: 0,
                        column: 0
                    }
                ]
            };
        }
    }
}
exports.YamlValidator = YamlValidator;
