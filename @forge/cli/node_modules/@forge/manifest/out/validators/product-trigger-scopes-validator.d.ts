import { ManifestObject, ManifestValidationResult } from '../types';
import { ValidatorInterface } from './validator-interface';
import { ManifestSchema } from '../schema/manifest';
import { RequiredScopes } from '../scopes';
export interface MappingEntry {
    productEvent: string;
    oAuthScopes: RequiredScopes;
}
export interface MappingConfig {
    mapping: MappingEntry[];
}
export declare class ProductTriggerScopesValidator<T> implements ValidatorInterface<ManifestObject<ManifestSchema> | undefined, ManifestSchema> {
    private readonly config;
    constructor(config: MappingConfig);
    validate(manifest: ManifestObject<ManifestSchema> | undefined): Promise<ManifestValidationResult<ManifestSchema>>;
}
//# sourceMappingURL=product-trigger-scopes-validator.d.ts.map