"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConnectRemoteValidator = void 0;
const text_1 = require("../text");
const utils_1 = require("../utils");
class ConnectRemoteValidator {
    async validate(manifest) {
        var _a, _b, _c, _d, _e;
        if (!((_a = manifest === null || manifest === void 0 ? void 0 : manifest.typedContent) === null || _a === void 0 ? void 0 : _a.app)) {
            return {
                success: false,
                manifestObject: manifest
            };
        }
        const app = manifest.typedContent.app;
        const validationErrors = [];
        if (manifest.typedContent.connectModules && !((_b = app.connect) === null || _b === void 0 ? void 0 : _b.remote)) {
            validationErrors.push(Object.assign({ message: text_1.errors.app.missingAppConnectRemote(), reference: text_1.References.App, level: 'error' }, (0, utils_1.findPosition)('connect', manifest.yamlContentByLine)));
        }
        if (manifest.typedContent.connectModules &&
            ((_c = app === null || app === void 0 ? void 0 : app.connect) === null || _c === void 0 ? void 0 : _c.remote) &&
            !((_d = manifest.typedContent.remotes) === null || _d === void 0 ? void 0 : _d.find((remote) => { var _a; return remote.key === ((_a = app === null || app === void 0 ? void 0 : app.connect) === null || _a === void 0 ? void 0 : _a.remote); }))) {
            validationErrors.push(Object.assign({ message: text_1.errors.app.missingRemoteForConnect(((_e = app === null || app === void 0 ? void 0 : app.connect) === null || _e === void 0 ? void 0 : _e.remote) || 'undefined'), reference: text_1.References.App, level: 'error' }, (0, utils_1.findPosition)('connect', manifest.yamlContentByLine)));
        }
        return {
            success: validationErrors.length === 0,
            manifestObject: manifest,
            errors: validationErrors
        };
    }
}
exports.ConnectRemoteValidator = ConnectRemoteValidator;
