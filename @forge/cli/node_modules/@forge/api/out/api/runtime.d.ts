import type { Metrics, Tags } from '@forge/util/packages/metrics-interface';
export declare type ProxyInfo = {
    token: string;
    url: string;
    host?: string;
};
export declare type ForgeRuntime = {
    proxy: ProxyInfo;
    contextAri: string;
    appContext: {
        appId: string;
        environmentId: string;
        appVersion: string;
        functionKey: string;
        moduleType: string;
        moduleKey: string;
    };
    allowedEgress: string[];
    lambdaContext: {
        awsRequestId: string;
    };
    tracing: {
        traceId: string;
        spanId: string;
    };
    metrics: Metrics;
    rms?: {
        url: string;
        host: string;
    };
};
export declare function getRuntime(): ForgeRuntime;
export declare function wrapInMetrics<Args extends unknown[], Ret>(name: string, fn: (...args: Args) => Promise<Ret>, { tags }?: {
    tags?: Tags;
}): (...args: Args) => Promise<Ret>;
//# sourceMappingURL=runtime.d.ts.map