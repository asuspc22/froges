"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getNodeRuntimeBuildConfig = exports.NODE_WEBPACK_CONFIG_NAME = void 0;
const webpack_1 = require("webpack");
const common_1 = require("./common");
exports.NODE_WEBPACK_CONFIG_NAME = 'node-runtime';
const IGNORE_MODULES = ['bufferutil', 'utf-8-validate', 'dtrace-provider'];
const getNodeRuntimeBuildConfig = (entrypoints, config) => {
    const webpackConfig = (0, common_1.getCommonWebpackConfig)(entrypoints, config);
    const wrapperPath = (0, common_1.resolveStubPath)('wrapper');
    const newEntries = {};
    for (const [entryKey, entryPath] of Object.entries(webpackConfig.entry)) {
        newEntries[`bundled/${entryKey}`] = entryPath;
        newEntries[entryKey] = wrapperPath;
    }
    webpackConfig.entry = newEntries;
    webpackConfig.target = 'node18';
    const ignored = {};
    for (const module of IGNORE_MODULES) {
        ignored[module] = module;
    }
    webpackConfig.externals = ignored;
    const defineExports = ({ filename }) => {
        const entryName = filename.replace(/\.js$/, '');
        const entrypoint = entrypoints.find((e) => e.name === entryName);
        if (entrypoint) {
            return `__BUNDLED_EXPORTS__ = ${JSON.stringify(entrypoint.functions)};`;
        }
        return '';
    };
    webpackConfig.plugins.push(new webpack_1.BannerPlugin({
        banner: defineExports,
        raw: true
    }));
    webpackConfig.name = exports.NODE_WEBPACK_CONFIG_NAME;
    webpackConfig.module.rules.push({
        test: /\.m?js$/,
        resolve: {
            fullySpecified: false
        }
    });
    return webpackConfig;
};
exports.getNodeRuntimeBuildConfig = getNodeRuntimeBuildConfig;
