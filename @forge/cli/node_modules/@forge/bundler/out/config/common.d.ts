import { Configuration as WebpackConfig, ModuleOptions } from 'webpack';
import { Handler } from '@forge/cli-shared';
export interface ConfigBuilder {
    isWatchMode: boolean;
    isDebugMode?: boolean;
    appDirectory: string;
}
export declare type EntryPoint = {
    name: string;
    path: string;
};
export declare type FunctionsEntryPoint = EntryPoint & {
    functions: string[];
};
export declare function getEntryPoints(handlers: Handler[]): FunctionsEntryPoint[];
export declare const resolveModulePath: (moduleName: string) => string;
export declare function resolveStubPath(stubName: string): string;
export declare const getDevToolConfig: (config: ConfigBuilder) => string;
declare type RequiredFields<T, F extends keyof T> = T & Required<Pick<T, F>>;
declare type CommonModuleOptions = RequiredFields<ModuleOptions, 'rules'>;
export declare type WebpackEntries = Record<string, string>;
export declare type CommonWebpackConfig = RequiredFields<WebpackConfig, 'plugins' | 'module'> & Record<'module', CommonModuleOptions> & Record<'entry', WebpackEntries>;
export declare const getCommonWebpackConfig: (entrypoints: EntryPoint[], config: ConfigBuilder) => CommonWebpackConfig;
export {};
//# sourceMappingURL=common.d.ts.map