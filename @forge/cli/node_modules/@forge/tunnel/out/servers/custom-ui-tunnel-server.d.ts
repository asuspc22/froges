import { Express } from 'express';
import { ResourceTunnelServer, ResourceTunnelServerArgs } from './resource-tunnel-server';
import { DevelopmentServer, StartDevServerResult } from './dev-server';
export declare class CustomUITunnelServer extends ResourceTunnelServer implements DevelopmentServer {
    private readonly tunnelArgs;
    private readonly app;
    private server;
    private readonly proxy;
    private socket;
    constructor(tunnelArgs: ResourceTunnelServerArgs);
    start(): Promise<Required<StartDevServerResult>>;
    stop(): Promise<void>;
    compileAndWatch(): Promise<any>;
    getApp(): Express;
    private handleProxyDestinationNotStarted;
    private handleWebsocketUpgrade;
}
//# sourceMappingURL=custom-ui-tunnel-server.d.ts.map